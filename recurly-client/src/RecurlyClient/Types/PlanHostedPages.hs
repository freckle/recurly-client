{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PlanHostedPages
module RecurlyClient.Types.PlanHostedPages where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PlanHostedPages@ in the specification.
data PlanHostedPages = PlanHostedPages
    { planHostedPagesBypass_confirmation :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ bypass_confirmation: If \`true\`, the customer will be sent directly to your \`success_url\` after a successful signup, bypassing Recurly\'s hosted confirmation page.
    , planHostedPagesCancel_url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ cancel_url: URL to redirect to on canceled signup on the hosted payment pages.
    , planHostedPagesDisplay_quantity :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ display_quantity: Determines if the quantity field is displayed on the hosted pages for the plan.
    , planHostedPagesSuccess_url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ success_url: URL to redirect to after signup on the hosted payment pages.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON PlanHostedPages where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bypass_confirmation" Data.Aeson.Types.ToJSON..=)) (planHostedPagesBypass_confirmation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_url" Data.Aeson.Types.ToJSON..=)) (planHostedPagesCancel_url obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_quantity" Data.Aeson.Types.ToJSON..=)) (planHostedPagesDisplay_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("success_url" Data.Aeson.Types.ToJSON..=)) (planHostedPagesSuccess_url obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bypass_confirmation" Data.Aeson.Types.ToJSON..=)) (planHostedPagesBypass_confirmation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_url" Data.Aeson.Types.ToJSON..=)) (planHostedPagesCancel_url obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_quantity" Data.Aeson.Types.ToJSON..=)) (planHostedPagesDisplay_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("success_url" Data.Aeson.Types.ToJSON..=)) (planHostedPagesSuccess_url obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PlanHostedPages where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "PlanHostedPages" (\obj -> (((GHC.Base.pure PlanHostedPages GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bypass_confirmation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cancel_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "display_quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "success_url"))

-- | Create a new 'PlanHostedPages' with all required fields.
mkPlanHostedPages :: PlanHostedPages
mkPlanHostedPages =
    PlanHostedPages
        { planHostedPagesBypass_confirmation = GHC.Maybe.Nothing
        , planHostedPagesCancel_url = GHC.Maybe.Nothing
        , planHostedPagesDisplay_quantity = GHC.Maybe.Nothing
        , planHostedPagesSuccess_url = GHC.Maybe.Nothing
        }
