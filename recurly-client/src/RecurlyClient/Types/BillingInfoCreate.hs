{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BillingInfoCreate
module RecurlyClient.Types.BillingInfoCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.Address
import {-# SOURCE #-} RecurlyClient.Types.PaymentGatewayReferences
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.BillingInfoCreate@ in the specification.
data BillingInfoCreate = BillingInfoCreate
    { billingInfoCreateAccount_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ account_number: The bank account number. (ACH, Bacs only)
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , billingInfoCreateAccount_type :: (GHC.Maybe.Maybe BillingInfoCreateAccount_type)
    -- ^ account_type: The bank account type. (ACH only)
    , billingInfoCreateAddress :: (GHC.Maybe.Maybe Address)
    -- ^ address
    , billingInfoCreateAmazon_billing_agreement_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ amazon_billing_agreement_id
    , billingInfoCreateBackup_payment_method :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ backup_payment_method: The \`backup_payment_method\` field is used to designate a billing info as a backup on the account that will be tried if the initial billing info used for an invoice is declined. All payment methods, including the billing info marked \`primary_payment_method\` can be set as a backup. An account can have a maximum of 1 backup, if a user sets a different payment method as a backup, the existing backup will no longer be marked as such.
    , billingInfoCreateCard_network_preference :: (GHC.Maybe.Maybe BillingInfoCreateCard_network_preference)
    -- ^ card_network_preference: Represents the card network preference associated with the billing info for dual badged cards. Must be a supported card network.
    , billingInfoCreateCard_type :: (GHC.Maybe.Maybe BillingInfoCreateCard_type)
    -- ^ card_type
    , billingInfoCreateCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ company
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    , billingInfoCreateCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ currency: 3-letter ISO 4217 currency code.
    , billingInfoCreateCvv :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ cvv: *STRONGLY RECOMMENDED*
    --
    -- Constraints:
    --
    -- * Maximum length of 4
    , billingInfoCreateExternal_hpp_type :: (GHC.Maybe.Maybe BillingInfoCreateExternal_hpp_type)
    -- ^ external_hpp_type: Use for Adyen HPP billing info. This should only be used as part of a pending purchase request, when the billing info is nested inside an account object.
    , billingInfoCreateFirst_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , billingInfoCreateFraud_session_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ fraud_session_id
    , billingInfoCreateGateway_attributes :: (GHC.Maybe.Maybe BillingInfoCreateGateway_attributes)
    -- ^ gateway_attributes: Additional attributes to send to the gateway.
    , billingInfoCreateGateway_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ gateway_code
    --
    -- Constraints:
    --
    -- * Maximum length of 12
    , billingInfoCreateGateway_token :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ gateway_token
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , billingInfoCreateIban :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ iban: The International Bank Account Number, up to 34 alphanumeric characters comprising a country code; two check digits; and a number that includes the domestic bank account number, branch identifier, and potential routing information
    --
    -- Constraints:
    --
    -- * Maximum length of 34
    , billingInfoCreateIp_address :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ ip_address: *STRONGLY RECOMMENDED* Customer\'s IP address when updating their billing information.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    , billingInfoCreateLast_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , billingInfoCreateMonth :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ month
    --
    -- Constraints:
    --
    -- * Maximum length of 2
    , billingInfoCreateName_on_account :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ name_on_account: The name associated with the bank account (ACH, SEPA, Bacs only)
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , billingInfoCreateNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ number: Credit card number, spaces and dashes are accepted.
    , billingInfoCreateOnline_banking_payment_type :: (GHC.Maybe.Maybe BillingInfoCreateOnline_banking_payment_type)
    -- ^ online_banking_payment_type: Use for Online Banking billing info. This should only be used as part of a pending purchase request, when the billing info is nested inside an account object.
    , billingInfoCreatePayment_gateway_references :: (GHC.Maybe.Maybe [PaymentGatewayReferences])
    -- ^ payment_gateway_references: Array of Payment Gateway References, each a reference to a third-party gateway object of varying types.
    , billingInfoCreatePaypal_billing_agreement_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ paypal_billing_agreement_id
    , billingInfoCreatePrimary_payment_method :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ primary_payment_method: The \`primary_payment_method\` field is used to designate the primary billing info on the account. The first billing info created on an account will always become primary. Adding additional billing infos provides the flexibility to mark another billing info as primary, or adding additional non-primary billing infos. This can be accomplished by passing the \`primary_payment_method\` with a value of \`true\`. When adding billing infos via the billing_info and \/accounts endpoints, this value is not permitted, and will return an error if provided.
    , billingInfoCreateRoku_billing_agreement_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ roku_billing_agreement_id
    , billingInfoCreateRouting_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ routing_number: The bank\'s rounting number. (ACH only)
    --
    -- Constraints:
    --
    -- * Maximum length of 15
    , billingInfoCreateSort_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ sort_code: Bank identifier code for UK based banks. Required for Bacs based billing infos. (Bacs only)
    --
    -- Constraints:
    --
    -- * Maximum length of 15
    , billingInfoCreateTax_identifier :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ tax_identifier: Tax identifier is required if adding a billing info that is a consumer card in Brazil or in Argentina. This would be the customer\'s CPF\/CNPJ (Brazil) and CUIT (Argentina). CPF, CNPJ and CUIT are tax identifiers for all residents who pay taxes in Brazil and Argentina respectively.
    , billingInfoCreateTax_identifier_type :: (GHC.Maybe.Maybe BillingInfoCreateTax_identifier_type)
    -- ^ tax_identifier_type: This field and a value of \`cpf\`, \`cnpj\` or \`cuit\` are required if adding a billing info that is an elo or hipercard type in Brazil or in Argentina.
    , billingInfoCreateThree_d_secure_action_result_token_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ three_d_secure_action_result_token_id: A token generated by Recurly.js after completing a 3-D Secure device fingerprinting or authentication challenge.
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    , billingInfoCreateToken_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ token_id: A token [generated by Recurly.js](https:\/\/recurly.com\/developers\/reference\/recurly-js\/\#getting-a-token).
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    , billingInfoCreateTransaction_type :: (GHC.Maybe.Maybe BillingInfoCreateTransaction_type)
    -- ^ transaction_type: An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
    , billingInfoCreateType :: (GHC.Maybe.Maybe BillingInfoCreateType)
    -- ^ type: The payment method type for a non-credit card based billing info. \`bacs\` and \`becs\` are the only accepted values.
    , billingInfoCreateVat_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ vat_number
    , billingInfoCreateYear :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ year
    --
    -- Constraints:
    --
    -- * Maximum length of 4
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAccount_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAccount_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAmazon_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backup_payment_method" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateBackup_payment_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_network_preference" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCard_network_preference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCard_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvv" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCvv obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_hpp_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateExternal_hpp_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraud_session_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateFraud_session_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_attributes" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_attributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_token" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_token obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateIban obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateIp_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("month" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_on_account" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateName_on_account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("online_banking_payment_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateOnline_banking_payment_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_gateway_references" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePayment_gateway_references obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePaypal_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_payment_method" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePrimary_payment_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("roku_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateRoku_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateRouting_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sort_code" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateSort_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_identifier" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTax_identifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_identifier_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTax_identifier_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_result_token_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateThree_d_secure_action_result_token_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateToken_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateVat_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("year" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateYear obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAccount_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAccount_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amazon_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateAmazon_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backup_payment_method" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateBackup_payment_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_network_preference" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCard_network_preference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCard_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvv" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateCvv obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_hpp_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateExternal_hpp_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraud_session_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateFraud_session_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_attributes" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_attributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_token" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_token obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateIban obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateIp_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("month" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_on_account" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateName_on_account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("online_banking_payment_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateOnline_banking_payment_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_gateway_references" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePayment_gateway_references obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePaypal_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_payment_method" Data.Aeson.Types.ToJSON..=)) (billingInfoCreatePrimary_payment_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("roku_billing_agreement_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateRoku_billing_agreement_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateRouting_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sort_code" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateSort_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_identifier" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTax_identifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_identifier_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTax_identifier_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_result_token_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateThree_d_secure_action_result_token_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_id" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateToken_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateVat_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("year" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateYear obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "BillingInfoCreate" (\obj -> ((((((((((((((((((((((((((((((((((((GHC.Base.pure BillingInfoCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amazon_billing_agreement_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "backup_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_network_preference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cvv")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_hpp_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fraud_session_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway_attributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "iban")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ip_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name_on_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "online_banking_payment_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_gateway_references")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paypal_billing_agreement_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "primary_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "roku_billing_agreement_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sort_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_identifier_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "three_d_secure_action_result_token_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "token_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "year"))

-- | Create a new 'BillingInfoCreate' with all required fields.
mkBillingInfoCreate :: BillingInfoCreate
mkBillingInfoCreate =
    BillingInfoCreate
        { billingInfoCreateAccount_number = GHC.Maybe.Nothing
        , billingInfoCreateAccount_type = GHC.Maybe.Nothing
        , billingInfoCreateAddress = GHC.Maybe.Nothing
        , billingInfoCreateAmazon_billing_agreement_id = GHC.Maybe.Nothing
        , billingInfoCreateBackup_payment_method = GHC.Maybe.Nothing
        , billingInfoCreateCard_network_preference = GHC.Maybe.Nothing
        , billingInfoCreateCard_type = GHC.Maybe.Nothing
        , billingInfoCreateCompany = GHC.Maybe.Nothing
        , billingInfoCreateCurrency = GHC.Maybe.Nothing
        , billingInfoCreateCvv = GHC.Maybe.Nothing
        , billingInfoCreateExternal_hpp_type = GHC.Maybe.Nothing
        , billingInfoCreateFirst_name = GHC.Maybe.Nothing
        , billingInfoCreateFraud_session_id = GHC.Maybe.Nothing
        , billingInfoCreateGateway_attributes = GHC.Maybe.Nothing
        , billingInfoCreateGateway_code = GHC.Maybe.Nothing
        , billingInfoCreateGateway_token = GHC.Maybe.Nothing
        , billingInfoCreateIban = GHC.Maybe.Nothing
        , billingInfoCreateIp_address = GHC.Maybe.Nothing
        , billingInfoCreateLast_name = GHC.Maybe.Nothing
        , billingInfoCreateMonth = GHC.Maybe.Nothing
        , billingInfoCreateName_on_account = GHC.Maybe.Nothing
        , billingInfoCreateNumber = GHC.Maybe.Nothing
        , billingInfoCreateOnline_banking_payment_type = GHC.Maybe.Nothing
        , billingInfoCreatePayment_gateway_references = GHC.Maybe.Nothing
        , billingInfoCreatePaypal_billing_agreement_id = GHC.Maybe.Nothing
        , billingInfoCreatePrimary_payment_method = GHC.Maybe.Nothing
        , billingInfoCreateRoku_billing_agreement_id = GHC.Maybe.Nothing
        , billingInfoCreateRouting_number = GHC.Maybe.Nothing
        , billingInfoCreateSort_code = GHC.Maybe.Nothing
        , billingInfoCreateTax_identifier = GHC.Maybe.Nothing
        , billingInfoCreateTax_identifier_type = GHC.Maybe.Nothing
        , billingInfoCreateThree_d_secure_action_result_token_id = GHC.Maybe.Nothing
        , billingInfoCreateToken_id = GHC.Maybe.Nothing
        , billingInfoCreateTransaction_type = GHC.Maybe.Nothing
        , billingInfoCreateType = GHC.Maybe.Nothing
        , billingInfoCreateVat_number = GHC.Maybe.Nothing
        , billingInfoCreateYear = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.account_type@ in the specification.

The bank account type. (ACH only)
-}
data BillingInfoCreateAccount_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateAccount_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateAccount_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"checking"@
      BillingInfoCreateAccount_typeEnumChecking
    | -- | Represents the JSON value @"savings"@
      BillingInfoCreateAccount_typeEnumSavings
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateAccount_type where
    toJSON (BillingInfoCreateAccount_typeOther val) = val
    toJSON (BillingInfoCreateAccount_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateAccount_typeEnumChecking) = "checking"
    toJSON (BillingInfoCreateAccount_typeEnumSavings) = "savings"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateAccount_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "checking" -> BillingInfoCreateAccount_typeEnumChecking
                | val GHC.Classes.== "savings" -> BillingInfoCreateAccount_typeEnumSavings
                | GHC.Base.otherwise -> BillingInfoCreateAccount_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.card_network_preference@ in the specification.

Represents the card network preference associated with the billing info for dual badged cards. Must be a supported card network.
-}
data BillingInfoCreateCard_network_preference
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateCard_network_preferenceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateCard_network_preferenceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"Bancontact"@
      BillingInfoCreateCard_network_preferenceEnumBancontact
    | -- | Represents the JSON value @"CartesBancaires"@
      BillingInfoCreateCard_network_preferenceEnumCartesBancaires
    | -- | Represents the JSON value @"Dankort"@
      BillingInfoCreateCard_network_preferenceEnumDankort
    | -- | Represents the JSON value @"MasterCard"@
      BillingInfoCreateCard_network_preferenceEnumMasterCard
    | -- | Represents the JSON value @"Visa"@
      BillingInfoCreateCard_network_preferenceEnumVisa
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateCard_network_preference where
    toJSON (BillingInfoCreateCard_network_preferenceOther val) = val
    toJSON (BillingInfoCreateCard_network_preferenceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateCard_network_preferenceEnumBancontact) = "Bancontact"
    toJSON (BillingInfoCreateCard_network_preferenceEnumCartesBancaires) = "CartesBancaires"
    toJSON (BillingInfoCreateCard_network_preferenceEnumDankort) = "Dankort"
    toJSON (BillingInfoCreateCard_network_preferenceEnumMasterCard) = "MasterCard"
    toJSON (BillingInfoCreateCard_network_preferenceEnumVisa) = "Visa"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateCard_network_preference where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "Bancontact" -> BillingInfoCreateCard_network_preferenceEnumBancontact
                | val GHC.Classes.== "CartesBancaires" -> BillingInfoCreateCard_network_preferenceEnumCartesBancaires
                | val GHC.Classes.== "Dankort" -> BillingInfoCreateCard_network_preferenceEnumDankort
                | val GHC.Classes.== "MasterCard" -> BillingInfoCreateCard_network_preferenceEnumMasterCard
                | val GHC.Classes.== "Visa" -> BillingInfoCreateCard_network_preferenceEnumVisa
                | GHC.Base.otherwise -> BillingInfoCreateCard_network_preferenceOther val
            )

-- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.card_type@ in the specification.
data BillingInfoCreateCard_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateCard_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateCard_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"American Express"@
      BillingInfoCreateCard_typeEnumAmerican_Express
    | -- | Represents the JSON value @"Dankort"@
      BillingInfoCreateCard_typeEnumDankort
    | -- | Represents the JSON value @"Diners Club"@
      BillingInfoCreateCard_typeEnumDiners_Club
    | -- | Represents the JSON value @"Discover"@
      BillingInfoCreateCard_typeEnumDiscover
    | -- | Represents the JSON value @"ELO"@
      BillingInfoCreateCard_typeEnumELO
    | -- | Represents the JSON value @"Forbrugsforeningen"@
      BillingInfoCreateCard_typeEnumForbrugsforeningen
    | -- | Represents the JSON value @"Hipercard"@
      BillingInfoCreateCard_typeEnumHipercard
    | -- | Represents the JSON value @"JCB"@
      BillingInfoCreateCard_typeEnumJCB
    | -- | Represents the JSON value @"Laser"@
      BillingInfoCreateCard_typeEnumLaser
    | -- | Represents the JSON value @"Maestro"@
      BillingInfoCreateCard_typeEnumMaestro
    | -- | Represents the JSON value @"MasterCard"@
      BillingInfoCreateCard_typeEnumMasterCard
    | -- | Represents the JSON value @"Test Card"@
      BillingInfoCreateCard_typeEnumTest_Card
    | -- | Represents the JSON value @"Union Pay"@
      BillingInfoCreateCard_typeEnumUnion_Pay
    | -- | Represents the JSON value @"Unknown"@
      BillingInfoCreateCard_typeEnumUnknown
    | -- | Represents the JSON value @"Visa"@
      BillingInfoCreateCard_typeEnumVisa
    | -- | Represents the JSON value @"Tarjeta Naranja"@
      BillingInfoCreateCard_typeEnumTarjeta_Naranja
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateCard_type where
    toJSON (BillingInfoCreateCard_typeOther val) = val
    toJSON (BillingInfoCreateCard_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateCard_typeEnumAmerican_Express) = "American Express"
    toJSON (BillingInfoCreateCard_typeEnumDankort) = "Dankort"
    toJSON (BillingInfoCreateCard_typeEnumDiners_Club) = "Diners Club"
    toJSON (BillingInfoCreateCard_typeEnumDiscover) = "Discover"
    toJSON (BillingInfoCreateCard_typeEnumELO) = "ELO"
    toJSON (BillingInfoCreateCard_typeEnumForbrugsforeningen) = "Forbrugsforeningen"
    toJSON (BillingInfoCreateCard_typeEnumHipercard) = "Hipercard"
    toJSON (BillingInfoCreateCard_typeEnumJCB) = "JCB"
    toJSON (BillingInfoCreateCard_typeEnumLaser) = "Laser"
    toJSON (BillingInfoCreateCard_typeEnumMaestro) = "Maestro"
    toJSON (BillingInfoCreateCard_typeEnumMasterCard) = "MasterCard"
    toJSON (BillingInfoCreateCard_typeEnumTest_Card) = "Test Card"
    toJSON (BillingInfoCreateCard_typeEnumUnion_Pay) = "Union Pay"
    toJSON (BillingInfoCreateCard_typeEnumUnknown) = "Unknown"
    toJSON (BillingInfoCreateCard_typeEnumVisa) = "Visa"
    toJSON (BillingInfoCreateCard_typeEnumTarjeta_Naranja) = "Tarjeta Naranja"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateCard_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "American Express" -> BillingInfoCreateCard_typeEnumAmerican_Express
                | val GHC.Classes.== "Dankort" -> BillingInfoCreateCard_typeEnumDankort
                | val GHC.Classes.== "Diners Club" -> BillingInfoCreateCard_typeEnumDiners_Club
                | val GHC.Classes.== "Discover" -> BillingInfoCreateCard_typeEnumDiscover
                | val GHC.Classes.== "ELO" -> BillingInfoCreateCard_typeEnumELO
                | val GHC.Classes.== "Forbrugsforeningen" -> BillingInfoCreateCard_typeEnumForbrugsforeningen
                | val GHC.Classes.== "Hipercard" -> BillingInfoCreateCard_typeEnumHipercard
                | val GHC.Classes.== "JCB" -> BillingInfoCreateCard_typeEnumJCB
                | val GHC.Classes.== "Laser" -> BillingInfoCreateCard_typeEnumLaser
                | val GHC.Classes.== "Maestro" -> BillingInfoCreateCard_typeEnumMaestro
                | val GHC.Classes.== "MasterCard" -> BillingInfoCreateCard_typeEnumMasterCard
                | val GHC.Classes.== "Test Card" -> BillingInfoCreateCard_typeEnumTest_Card
                | val GHC.Classes.== "Union Pay" -> BillingInfoCreateCard_typeEnumUnion_Pay
                | val GHC.Classes.== "Unknown" -> BillingInfoCreateCard_typeEnumUnknown
                | val GHC.Classes.== "Visa" -> BillingInfoCreateCard_typeEnumVisa
                | val GHC.Classes.== "Tarjeta Naranja" -> BillingInfoCreateCard_typeEnumTarjeta_Naranja
                | GHC.Base.otherwise -> BillingInfoCreateCard_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.external_hpp_type@ in the specification.

Use for Adyen HPP billing info. This should only be used as part of a pending purchase request, when the billing info is nested inside an account object.
-}
data BillingInfoCreateExternal_hpp_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateExternal_hpp_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateExternal_hpp_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"adyen"@
      BillingInfoCreateExternal_hpp_typeEnumAdyen
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateExternal_hpp_type where
    toJSON (BillingInfoCreateExternal_hpp_typeOther val) = val
    toJSON (BillingInfoCreateExternal_hpp_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateExternal_hpp_typeEnumAdyen) = "adyen"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateExternal_hpp_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "adyen" -> BillingInfoCreateExternal_hpp_typeEnumAdyen
                | GHC.Base.otherwise -> BillingInfoCreateExternal_hpp_typeOther val
            )

{- | Defines the object schema located at @components.schemas.BillingInfoCreate.properties.gateway_attributes@ in the specification.

Additional attributes to send to the gateway.
-}
data BillingInfoCreateGateway_attributes = BillingInfoCreateGateway_attributes
    { billingInfoCreateGateway_attributesAccount_reference :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ account_reference: Used by Adyen and Braintree gateways. For Adyen the Shopper Reference value used when the external token was created. Must be used in conjunction with gateway_token and gateway_code. For Braintree the PayPal PayerID is populated in the response.
    --
    -- Constraints:
    --
    -- * Maximum length of 264
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateGateway_attributes where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_reference" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_attributesAccount_reference obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_reference" Data.Aeson.Types.ToJSON..=)) (billingInfoCreateGateway_attributesAccount_reference obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateGateway_attributes where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "BillingInfoCreateGateway_attributes" (\obj -> GHC.Base.pure BillingInfoCreateGateway_attributes GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_reference"))

-- | Create a new 'BillingInfoCreateGateway_attributes' with all required fields.
mkBillingInfoCreateGateway_attributes :: BillingInfoCreateGateway_attributes
mkBillingInfoCreateGateway_attributes = BillingInfoCreateGateway_attributes{billingInfoCreateGateway_attributesAccount_reference = GHC.Maybe.Nothing}

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.online_banking_payment_type@ in the specification.

Use for Online Banking billing info. This should only be used as part of a pending purchase request, when the billing info is nested inside an account object.
-}
data BillingInfoCreateOnline_banking_payment_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateOnline_banking_payment_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateOnline_banking_payment_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"ideal"@
      BillingInfoCreateOnline_banking_payment_typeEnumIdeal
    | -- | Represents the JSON value @"sofort"@
      BillingInfoCreateOnline_banking_payment_typeEnumSofort
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateOnline_banking_payment_type where
    toJSON (BillingInfoCreateOnline_banking_payment_typeOther val) = val
    toJSON (BillingInfoCreateOnline_banking_payment_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateOnline_banking_payment_typeEnumIdeal) = "ideal"
    toJSON (BillingInfoCreateOnline_banking_payment_typeEnumSofort) = "sofort"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateOnline_banking_payment_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "ideal" -> BillingInfoCreateOnline_banking_payment_typeEnumIdeal
                | val GHC.Classes.== "sofort" -> BillingInfoCreateOnline_banking_payment_typeEnumSofort
                | GHC.Base.otherwise -> BillingInfoCreateOnline_banking_payment_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.tax_identifier_type@ in the specification.

This field and a value of \`cpf\`, \`cnpj\` or \`cuit\` are required if adding a billing info that is an elo or hipercard type in Brazil or in Argentina.
-}
data BillingInfoCreateTax_identifier_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateTax_identifier_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateTax_identifier_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"cpf"@
      BillingInfoCreateTax_identifier_typeEnumCpf
    | -- | Represents the JSON value @"cnpj"@
      BillingInfoCreateTax_identifier_typeEnumCnpj
    | -- | Represents the JSON value @"cuit"@
      BillingInfoCreateTax_identifier_typeEnumCuit
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateTax_identifier_type where
    toJSON (BillingInfoCreateTax_identifier_typeOther val) = val
    toJSON (BillingInfoCreateTax_identifier_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateTax_identifier_typeEnumCpf) = "cpf"
    toJSON (BillingInfoCreateTax_identifier_typeEnumCnpj) = "cnpj"
    toJSON (BillingInfoCreateTax_identifier_typeEnumCuit) = "cuit"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateTax_identifier_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "cpf" -> BillingInfoCreateTax_identifier_typeEnumCpf
                | val GHC.Classes.== "cnpj" -> BillingInfoCreateTax_identifier_typeEnumCnpj
                | val GHC.Classes.== "cuit" -> BillingInfoCreateTax_identifier_typeEnumCuit
                | GHC.Base.otherwise -> BillingInfoCreateTax_identifier_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.transaction_type@ in the specification.

An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
-}
data BillingInfoCreateTransaction_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateTransaction_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateTransaction_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"moto"@
      BillingInfoCreateTransaction_typeEnumMoto
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateTransaction_type where
    toJSON (BillingInfoCreateTransaction_typeOther val) = val
    toJSON (BillingInfoCreateTransaction_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateTransaction_typeEnumMoto) = "moto"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateTransaction_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "moto" -> BillingInfoCreateTransaction_typeEnumMoto
                | GHC.Base.otherwise -> BillingInfoCreateTransaction_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.BillingInfoCreate.properties.type@ in the specification.

The payment method type for a non-credit card based billing info. \`bacs\` and \`becs\` are the only accepted values.
-}
data BillingInfoCreateType
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BillingInfoCreateTypeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BillingInfoCreateTypeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"bacs"@
      BillingInfoCreateTypeEnumBacs
    | -- | Represents the JSON value @"becs"@
      BillingInfoCreateTypeEnumBecs
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BillingInfoCreateType where
    toJSON (BillingInfoCreateTypeOther val) = val
    toJSON (BillingInfoCreateTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BillingInfoCreateTypeEnumBacs) = "bacs"
    toJSON (BillingInfoCreateTypeEnumBecs) = "becs"
instance Data.Aeson.Types.FromJSON.FromJSON BillingInfoCreateType where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "bacs" -> BillingInfoCreateTypeEnumBacs
                | val GHC.Classes.== "becs" -> BillingInfoCreateTypeEnumBecs
                | GHC.Base.otherwise -> BillingInfoCreateTypeOther val
            )
