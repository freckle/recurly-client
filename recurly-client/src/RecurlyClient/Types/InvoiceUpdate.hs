{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoiceUpdate
module RecurlyClient.Types.InvoiceUpdate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.InvoiceAddress
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.InvoiceUpdate@ in the specification.
data InvoiceUpdate = InvoiceUpdate
    { invoiceUpdateAddress :: (GHC.Maybe.Maybe InvoiceAddress)
    -- ^ address
    , invoiceUpdateCustomer_notes :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ customer_notes: Customer notes are an optional note field.
    , invoiceUpdateGateway_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ gateway_code: An alphanumeric code shown per gateway on your site\'s payment gateways page. Set this code to ensure that a given invoice targets a given gateway.
    , invoiceUpdateNet_terms :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ net_terms: Integer representing the number of days after an invoice\'s creation that the invoice will become past due. Changing Net terms changes due_on, and the invoice could move between past due and pending.
    --
    -- Constraints:
    --
    -- * Maxium  of 999.0
    -- * Minimum  of 0.0
    , invoiceUpdatePo_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ po_number: This identifies the PO number associated with the invoice. Not editable for credit invoices.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , invoiceUpdateTerms_and_conditions :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ terms_and_conditions: Terms and conditions are an optional note field. Not editable for credit invoices.
    , invoiceUpdateVat_reverse_charge_notes :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ vat_reverse_charge_notes: VAT Reverse Charge Notes are editable only if there was a VAT reverse charge applied to the invoice.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceUpdate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_notes" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateCustomer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (invoiceUpdatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_and_conditions" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateTerms_and_conditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_reverse_charge_notes" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateVat_reverse_charge_notes obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_notes" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateCustomer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (invoiceUpdatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_and_conditions" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateTerms_and_conditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_reverse_charge_notes" Data.Aeson.Types.ToJSON..=)) (invoiceUpdateVat_reverse_charge_notes obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceUpdate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceUpdate" (\obj -> ((((((GHC.Base.pure InvoiceUpdate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer_notes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "net_terms")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "po_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "terms_and_conditions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_reverse_charge_notes"))

-- | Create a new 'InvoiceUpdate' with all required fields.
mkInvoiceUpdate :: InvoiceUpdate
mkInvoiceUpdate =
    InvoiceUpdate
        { invoiceUpdateAddress = GHC.Maybe.Nothing
        , invoiceUpdateCustomer_notes = GHC.Maybe.Nothing
        , invoiceUpdateGateway_code = GHC.Maybe.Nothing
        , invoiceUpdateNet_terms = GHC.Maybe.Nothing
        , invoiceUpdatePo_number = GHC.Maybe.Nothing
        , invoiceUpdateTerms_and_conditions = GHC.Maybe.Nothing
        , invoiceUpdateVat_reverse_charge_notes = GHC.Maybe.Nothing
        }
