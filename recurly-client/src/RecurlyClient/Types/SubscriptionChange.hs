{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SubscriptionChange
module RecurlyClient.Types.SubscriptionChange where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.BusinessEntityMini
import {-# SOURCE #-} RecurlyClient.Types.InvoiceCollection
import {-# SOURCE #-} RecurlyClient.Types.PlanMini
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionAddOn
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionChangeBillingInfo
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionRampIntervalResponse
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionShipping
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SubscriptionChange@ in the specification.
data SubscriptionChange = SubscriptionChange
    { subscriptionChangeActivate_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ activate_at
    , subscriptionChangeActivated :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ activated: Returns \`true\` if the subscription change is activated.
    , subscriptionChangeAdd_ons :: (GHC.Maybe.Maybe [SubscriptionAddOn])
    -- ^ add_ons: These add-ons will be used when the subscription renews.
    , subscriptionChangeBilling_info :: (GHC.Maybe.Maybe SubscriptionChangeBillingInfo)
    -- ^ billing_info: Accept nested attributes for three_d_secure_action_result_token_id
    , subscriptionChangeBusiness_entity :: (GHC.Maybe.Maybe BusinessEntityMini)
    -- ^ business_entity: Business entity details
    , subscriptionChangeCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , subscriptionChangeCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , subscriptionChangeDeleted_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ deleted_at
    , subscriptionChangeId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id: The ID of the Subscription Change.
    , subscriptionChangeInvoice_collection :: (GHC.Maybe.Maybe InvoiceCollection)
    -- ^ invoice_collection
    , subscriptionChangeObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , subscriptionChangePlan :: (GHC.Maybe.Maybe PlanMini)
    -- ^ plan: Just the important parts.
    , subscriptionChangeQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity
    , subscriptionChangeRamp_intervals :: (GHC.Maybe.Maybe [SubscriptionRampIntervalResponse])
    -- ^ ramp_intervals: The ramp intervals representing the pricing schedule for the subscription.
    , subscriptionChangeRevenue_schedule_type :: (GHC.Maybe.Maybe SubscriptionChangeRevenue_schedule_type)
    -- ^ revenue_schedule_type
    , subscriptionChangeShipping :: (GHC.Maybe.Maybe SubscriptionShipping)
    -- ^ shipping
    , subscriptionChangeSubscription_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ subscription_id: The ID of the subscription that is going to be changed.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , subscriptionChangeTax_inclusive :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_inclusive: This field is deprecated. Please do not use it.
    , subscriptionChangeUnit_amount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ unit_amount
    , subscriptionChangeUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChange where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeActivate_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activated" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeActivated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBusiness_entity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeDeleted_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_collection" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeInvoice_collection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan" Data.Aeson.Types.ToJSON..=)) (subscriptionChangePlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeSubscription_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeUnit_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeUpdated_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeActivate_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activated" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeActivated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBusiness_entity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeDeleted_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_collection" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeInvoice_collection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan" Data.Aeson.Types.ToJSON..=)) (subscriptionChangePlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeSubscription_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeUnit_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeUpdated_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChange where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionChange" (\obj -> (((((((((((((((((((GHC.Base.pure SubscriptionChange GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "activate_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "activated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_ons")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_entity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deleted_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ramp_intervals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscription_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at"))

-- | Create a new 'SubscriptionChange' with all required fields.
mkSubscriptionChange :: SubscriptionChange
mkSubscriptionChange =
    SubscriptionChange
        { subscriptionChangeActivate_at = GHC.Maybe.Nothing
        , subscriptionChangeActivated = GHC.Maybe.Nothing
        , subscriptionChangeAdd_ons = GHC.Maybe.Nothing
        , subscriptionChangeBilling_info = GHC.Maybe.Nothing
        , subscriptionChangeBusiness_entity = GHC.Maybe.Nothing
        , subscriptionChangeCreated_at = GHC.Maybe.Nothing
        , subscriptionChangeCustom_fields = GHC.Maybe.Nothing
        , subscriptionChangeDeleted_at = GHC.Maybe.Nothing
        , subscriptionChangeId = GHC.Maybe.Nothing
        , subscriptionChangeInvoice_collection = GHC.Maybe.Nothing
        , subscriptionChangeObject = GHC.Maybe.Nothing
        , subscriptionChangePlan = GHC.Maybe.Nothing
        , subscriptionChangeQuantity = GHC.Maybe.Nothing
        , subscriptionChangeRamp_intervals = GHC.Maybe.Nothing
        , subscriptionChangeRevenue_schedule_type = GHC.Maybe.Nothing
        , subscriptionChangeShipping = GHC.Maybe.Nothing
        , subscriptionChangeSubscription_id = GHC.Maybe.Nothing
        , subscriptionChangeTax_inclusive = GHC.Maybe.Nothing
        , subscriptionChangeUnit_amount = GHC.Maybe.Nothing
        , subscriptionChangeUpdated_at = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.SubscriptionChange.properties.revenue_schedule_type@ in the specification.
data SubscriptionChangeRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_range_end"@
      SubscriptionChangeRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      SubscriptionChangeRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      SubscriptionChangeRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      SubscriptionChangeRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeRevenue_schedule_type where
    toJSON (SubscriptionChangeRevenue_schedule_typeOther val) = val
    toJSON (SubscriptionChangeRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (SubscriptionChangeRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (SubscriptionChangeRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (SubscriptionChangeRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_range_end" -> SubscriptionChangeRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> SubscriptionChangeRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> SubscriptionChangeRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> SubscriptionChangeRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> SubscriptionChangeRevenue_schedule_typeOther val
            )
