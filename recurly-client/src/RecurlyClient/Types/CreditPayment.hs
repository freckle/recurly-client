{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema CreditPayment
module RecurlyClient.Types.CreditPayment where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AccountMini
import {-# SOURCE #-} RecurlyClient.Types.InvoiceMini
import {-# SOURCE #-} RecurlyClient.Types.Transaction
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.CreditPayment@ in the specification.
data CreditPayment = CreditPayment
    { creditPaymentAccount :: (GHC.Maybe.Maybe AccountMini)
    -- ^ account
    , creditPaymentAction :: (GHC.Maybe.Maybe CreditPaymentAction)
    -- ^ action: The action for which the credit was created.
    , creditPaymentAmount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ amount: Total credit payment amount applied to the charge invoice.
    , creditPaymentApplied_to_invoice :: (GHC.Maybe.Maybe InvoiceMini)
    -- ^ applied_to_invoice
    , creditPaymentCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , creditPaymentCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ currency: 3-letter ISO 4217 currency code.
    --
    -- Constraints:
    --
    -- * Maximum length of 3
    , creditPaymentId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , creditPaymentObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , creditPaymentOriginal_credit_payment_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ original_credit_payment_id: For credit payments with action \`refund\`, this is the credit payment that was refunded.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , creditPaymentOriginal_invoice :: (GHC.Maybe.Maybe InvoiceMini)
    -- ^ original_invoice
    , creditPaymentRefund_transaction :: (GHC.Maybe.Maybe Transaction)
    -- ^ refund_transaction
    , creditPaymentUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    , creditPaymentUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ uuid: The UUID is useful for matching data with the CSV exports and building URLs into Recurly\'s UI.
    --
    -- Constraints:
    --
    -- * Maximum length of 32
    , creditPaymentVoided_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ voided_at
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON CreditPayment where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (creditPaymentAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("action" Data.Aeson.Types.ToJSON..=)) (creditPaymentAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (creditPaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applied_to_invoice" Data.Aeson.Types.ToJSON..=)) (creditPaymentApplied_to_invoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (creditPaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (creditPaymentId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (creditPaymentObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_credit_payment_id" Data.Aeson.Types.ToJSON..=)) (creditPaymentOriginal_credit_payment_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_invoice" Data.Aeson.Types.ToJSON..=)) (creditPaymentOriginal_invoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_transaction" Data.Aeson.Types.ToJSON..=)) (creditPaymentRefund_transaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uuid" Data.Aeson.Types.ToJSON..=)) (creditPaymentUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("voided_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentVoided_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (creditPaymentAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("action" Data.Aeson.Types.ToJSON..=)) (creditPaymentAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (creditPaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applied_to_invoice" Data.Aeson.Types.ToJSON..=)) (creditPaymentApplied_to_invoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (creditPaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (creditPaymentId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (creditPaymentObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_credit_payment_id" Data.Aeson.Types.ToJSON..=)) (creditPaymentOriginal_credit_payment_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_invoice" Data.Aeson.Types.ToJSON..=)) (creditPaymentOriginal_invoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_transaction" Data.Aeson.Types.ToJSON..=)) (creditPaymentRefund_transaction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uuid" Data.Aeson.Types.ToJSON..=)) (creditPaymentUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("voided_at" Data.Aeson.Types.ToJSON..=)) (creditPaymentVoided_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON CreditPayment where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "CreditPayment" (\obj -> (((((((((((((GHC.Base.pure CreditPayment GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "action")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "applied_to_invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "original_credit_payment_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "original_invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refund_transaction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "voided_at"))

-- | Create a new 'CreditPayment' with all required fields.
mkCreditPayment :: CreditPayment
mkCreditPayment =
    CreditPayment
        { creditPaymentAccount = GHC.Maybe.Nothing
        , creditPaymentAction = GHC.Maybe.Nothing
        , creditPaymentAmount = GHC.Maybe.Nothing
        , creditPaymentApplied_to_invoice = GHC.Maybe.Nothing
        , creditPaymentCreated_at = GHC.Maybe.Nothing
        , creditPaymentCurrency = GHC.Maybe.Nothing
        , creditPaymentId = GHC.Maybe.Nothing
        , creditPaymentObject = GHC.Maybe.Nothing
        , creditPaymentOriginal_credit_payment_id = GHC.Maybe.Nothing
        , creditPaymentOriginal_invoice = GHC.Maybe.Nothing
        , creditPaymentRefund_transaction = GHC.Maybe.Nothing
        , creditPaymentUpdated_at = GHC.Maybe.Nothing
        , creditPaymentUuid = GHC.Maybe.Nothing
        , creditPaymentVoided_at = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.CreditPayment.properties.action@ in the specification.

The action for which the credit was created.
-}
data CreditPaymentAction
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CreditPaymentActionOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CreditPaymentActionTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"payment"@
      CreditPaymentActionEnumPayment
    | -- | Represents the JSON value @"reduction"@
      CreditPaymentActionEnumReduction
    | -- | Represents the JSON value @"refund"@
      CreditPaymentActionEnumRefund
    | -- | Represents the JSON value @"write_off"@
      CreditPaymentActionEnumWrite_off
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CreditPaymentAction where
    toJSON (CreditPaymentActionOther val) = val
    toJSON (CreditPaymentActionTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CreditPaymentActionEnumPayment) = "payment"
    toJSON (CreditPaymentActionEnumReduction) = "reduction"
    toJSON (CreditPaymentActionEnumRefund) = "refund"
    toJSON (CreditPaymentActionEnumWrite_off) = "write_off"
instance Data.Aeson.Types.FromJSON.FromJSON CreditPaymentAction where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "payment" -> CreditPaymentActionEnumPayment
                | val GHC.Classes.== "reduction" -> CreditPaymentActionEnumReduction
                | val GHC.Classes.== "refund" -> CreditPaymentActionEnumRefund
                | val GHC.Classes.== "write_off" -> CreditPaymentActionEnumWrite_off
                | GHC.Base.otherwise -> CreditPaymentActionOther val
            )
