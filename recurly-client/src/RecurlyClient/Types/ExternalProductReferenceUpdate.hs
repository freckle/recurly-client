{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExternalProductReferenceUpdate
module RecurlyClient.Types.ExternalProductReferenceUpdate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.ExternalProductReferenceBase
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ExternalProductReferenceUpdate.allOf@ in the specification.
data ExternalProductReferenceUpdate = ExternalProductReferenceUpdate
    { externalProductReferenceUpdateExternal_connection_type :: (GHC.Maybe.Maybe ExternalProductReferenceConnectionType)
    -- ^ external_connection_type: Represents the connection type. One of the connection types of your enabled App Connectors
    , externalProductReferenceUpdateReference_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ reference_code: A code which associates the external product to a corresponding object or resource in an external platform like the Apple App Store or Google Play Store.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ExternalProductReferenceUpdate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_connection_type" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceUpdateExternal_connection_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_code" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceUpdateReference_code obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_connection_type" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceUpdateExternal_connection_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_code" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceUpdateReference_code obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ExternalProductReferenceUpdate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ExternalProductReferenceUpdate" (\obj -> (GHC.Base.pure ExternalProductReferenceUpdate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_connection_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "reference_code"))

-- | Create a new 'ExternalProductReferenceUpdate' with all required fields.
mkExternalProductReferenceUpdate :: ExternalProductReferenceUpdate
mkExternalProductReferenceUpdate =
    ExternalProductReferenceUpdate
        { externalProductReferenceUpdateExternal_connection_type = GHC.Maybe.Nothing
        , externalProductReferenceUpdateReference_code = GHC.Maybe.Nothing
        }
