{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Coupon
module RecurlyClient.Types.Coupon where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.CouponDiscount
import {-# SOURCE #-} RecurlyClient.Types.ItemMini
import {-# SOURCE #-} RecurlyClient.Types.PlanMini
import {-# SOURCE #-} RecurlyClient.Types.UniqueCouponCode
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.Coupon@ in the specification.
data Coupon = Coupon
    { couponApplies_to_all_items :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ applies_to_all_items: The coupon is valid for all items if true. If false then \`items\`
    -- will list the applicable items.
    , couponApplies_to_all_plans :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ applies_to_all_plans: The coupon is valid for all plans if true. If false then \`plans\` will list the applicable plans.
    , couponApplies_to_non_plan_charges :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ applies_to_non_plan_charges: The coupon is valid for one-time, non-plan charges if true.
    , couponCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ code: The code the customer enters to redeem the coupon.
    , couponCoupon_type :: (GHC.Maybe.Maybe CouponCoupon_type)
    -- ^ coupon_type: Whether the coupon is \"single_code\" or \"bulk\". Bulk coupons will require a \`unique_code_template\` and will generate unique codes through the \`\/generate\` endpoint.
    , couponCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , couponDiscount :: (GHC.Maybe.Maybe CouponDiscount)
    -- ^ discount: Details of the discount a coupon applies. Will contain a \`type\`
    -- property and one of the following properties: \`percent\`, \`fixed\`, \`trial\`.
    , couponDuration :: (GHC.Maybe.Maybe CouponDuration)
    -- ^ duration: - \"single_use\" coupons applies to the first invoice only.
    -- - \"temporal\" coupons will apply to invoices for the duration determined by the \`temporal_unit\` and \`temporal_amount\` attributes.
    , couponExpired_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ expired_at: The date and time the coupon was expired early or reached its \`max_redemptions\`.
    , couponFree_trial_amount :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ free_trial_amount: Sets the duration of time the \`free_trial_unit\` is for.
    --
    -- Constraints:
    --
    -- * Maxium  of 9999.0
    -- * Minimum  of 1.0
    , couponFree_trial_unit :: (GHC.Maybe.Maybe CouponFree_trial_unit)
    -- ^ free_trial_unit: Description of the unit of time the coupon is for. Used with \`free_trial_amount\` to determine the duration of time the coupon is for.
    , couponHosted_page_description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ hosted_page_description: This description will show up when a customer redeems a coupon on your Hosted Payment Pages, or if you choose to show the description on your own checkout page.
    , couponId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    , couponInvoice_description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ invoice_description: Description of the coupon on the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , couponItems :: (GHC.Maybe.Maybe [ItemMini])
    -- ^ items: A list of items for which this coupon applies. This will be
    -- \`null\` if \`applies_to_all_items=true\`.
    , couponMax_redemptions :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ max_redemptions: A maximum number of redemptions for the coupon. The coupon will expire when it hits its maximum redemptions.
    , couponMax_redemptions_per_account :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ max_redemptions_per_account: Redemptions per account is the number of times a specific account can redeem the coupon. Set redemptions per account to \`1\` if you want to keep customers from gaming the system and getting more than one discount from the coupon campaign.
    , couponName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ name: The internal name for the coupon.
    , couponObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , couponPlans :: (GHC.Maybe.Maybe [PlanMini])
    -- ^ plans: A list of plans for which this coupon applies. This will be \`null\` if \`applies_to_all_plans=true\`.
    , couponRedeem_by :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ redeem_by: The date and time the coupon will expire and can no longer be redeemed. Time is always 11:59:59, the end-of-day Pacific time.
    , couponRedemption_resource :: (GHC.Maybe.Maybe CouponRedemption_resource)
    -- ^ redemption_resource: Whether the discount is for all eligible charges on the account, or only a specific subscription.
    , couponState :: (GHC.Maybe.Maybe CouponState)
    -- ^ state: Indicates if the coupon is redeemable, and if it is not, why.
    , couponTemporal_amount :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ temporal_amount: If \`duration\` is \"temporal\" than \`temporal_amount\` is an integer which is multiplied by \`temporal_unit\` to define the duration that the coupon will be applied to invoices for.
    , couponTemporal_unit :: (GHC.Maybe.Maybe CouponTemporal_unit)
    -- ^ temporal_unit: If \`duration\` is \"temporal\" than \`temporal_unit\` is multiplied by \`temporal_amount\` to define the duration that the coupon will be applied to invoices for.
    , couponUnique_code_template :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ unique_code_template: On a bulk coupon, the template from which unique coupon codes are generated.
    , couponUnique_coupon_code :: (GHC.Maybe.Maybe CouponUnique_coupon_code)
    -- ^ unique_coupon_code: Will be populated when the Coupon being returned is a \`UniqueCouponCode\`.
    , couponUnique_coupon_codes_count :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ unique_coupon_codes_count: When this number reaches \`max_redemptions\` the coupon will no longer be redeemable.
    , couponUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON Coupon where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_all_items" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_all_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_all_plans" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_all_plans obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_non_plan_charges" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_non_plan_charges obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (couponCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_type" Data.Aeson.Types.ToJSON..=)) (couponCoupon_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (couponCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (couponDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duration" Data.Aeson.Types.ToJSON..=)) (couponDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expired_at" Data.Aeson.Types.ToJSON..=)) (couponExpired_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("free_trial_amount" Data.Aeson.Types.ToJSON..=)) (couponFree_trial_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("free_trial_unit" Data.Aeson.Types.ToJSON..=)) (couponFree_trial_unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_page_description" Data.Aeson.Types.ToJSON..=)) (couponHosted_page_description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (couponId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_description" Data.Aeson.Types.ToJSON..=)) (couponInvoice_description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("items" Data.Aeson.Types.ToJSON..=)) (couponItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("max_redemptions" Data.Aeson.Types.ToJSON..=)) (couponMax_redemptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("max_redemptions_per_account" Data.Aeson.Types.ToJSON..=)) (couponMax_redemptions_per_account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (couponName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (couponObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plans" Data.Aeson.Types.ToJSON..=)) (couponPlans obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redeem_by" Data.Aeson.Types.ToJSON..=)) (couponRedeem_by obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redemption_resource" Data.Aeson.Types.ToJSON..=)) (couponRedemption_resource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (couponState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporal_amount" Data.Aeson.Types.ToJSON..=)) (couponTemporal_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporal_unit" Data.Aeson.Types.ToJSON..=)) (couponTemporal_unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_code_template" Data.Aeson.Types.ToJSON..=)) (couponUnique_code_template obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_coupon_code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_coupon_codes_count" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codes_count obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (couponUpdated_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_all_items" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_all_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_all_plans" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_all_plans obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("applies_to_non_plan_charges" Data.Aeson.Types.ToJSON..=)) (couponApplies_to_non_plan_charges obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (couponCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_type" Data.Aeson.Types.ToJSON..=)) (couponCoupon_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (couponCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (couponDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duration" Data.Aeson.Types.ToJSON..=)) (couponDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expired_at" Data.Aeson.Types.ToJSON..=)) (couponExpired_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("free_trial_amount" Data.Aeson.Types.ToJSON..=)) (couponFree_trial_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("free_trial_unit" Data.Aeson.Types.ToJSON..=)) (couponFree_trial_unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_page_description" Data.Aeson.Types.ToJSON..=)) (couponHosted_page_description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (couponId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_description" Data.Aeson.Types.ToJSON..=)) (couponInvoice_description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("items" Data.Aeson.Types.ToJSON..=)) (couponItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("max_redemptions" Data.Aeson.Types.ToJSON..=)) (couponMax_redemptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("max_redemptions_per_account" Data.Aeson.Types.ToJSON..=)) (couponMax_redemptions_per_account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (couponName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (couponObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plans" Data.Aeson.Types.ToJSON..=)) (couponPlans obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redeem_by" Data.Aeson.Types.ToJSON..=)) (couponRedeem_by obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redemption_resource" Data.Aeson.Types.ToJSON..=)) (couponRedemption_resource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (couponState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporal_amount" Data.Aeson.Types.ToJSON..=)) (couponTemporal_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporal_unit" Data.Aeson.Types.ToJSON..=)) (couponTemporal_unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_code_template" Data.Aeson.Types.ToJSON..=)) (couponUnique_code_template obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_coupon_code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unique_coupon_codes_count" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codes_count obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (couponUpdated_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Coupon where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "Coupon" (\obj -> ((((((((((((((((((((((((((((GHC.Base.pure Coupon GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "applies_to_all_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "applies_to_all_plans")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "applies_to_non_plan_charges")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "coupon_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expired_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "free_trial_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "free_trial_unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "hosted_page_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "max_redemptions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "max_redemptions_per_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plans")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "redeem_by")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "redemption_resource")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "temporal_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "temporal_unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unique_code_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unique_coupon_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unique_coupon_codes_count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at"))

-- | Create a new 'Coupon' with all required fields.
mkCoupon :: Coupon
mkCoupon =
    Coupon
        { couponApplies_to_all_items = GHC.Maybe.Nothing
        , couponApplies_to_all_plans = GHC.Maybe.Nothing
        , couponApplies_to_non_plan_charges = GHC.Maybe.Nothing
        , couponCode = GHC.Maybe.Nothing
        , couponCoupon_type = GHC.Maybe.Nothing
        , couponCreated_at = GHC.Maybe.Nothing
        , couponDiscount = GHC.Maybe.Nothing
        , couponDuration = GHC.Maybe.Nothing
        , couponExpired_at = GHC.Maybe.Nothing
        , couponFree_trial_amount = GHC.Maybe.Nothing
        , couponFree_trial_unit = GHC.Maybe.Nothing
        , couponHosted_page_description = GHC.Maybe.Nothing
        , couponId = GHC.Maybe.Nothing
        , couponInvoice_description = GHC.Maybe.Nothing
        , couponItems = GHC.Maybe.Nothing
        , couponMax_redemptions = GHC.Maybe.Nothing
        , couponMax_redemptions_per_account = GHC.Maybe.Nothing
        , couponName = GHC.Maybe.Nothing
        , couponObject = GHC.Maybe.Nothing
        , couponPlans = GHC.Maybe.Nothing
        , couponRedeem_by = GHC.Maybe.Nothing
        , couponRedemption_resource = GHC.Maybe.Nothing
        , couponState = GHC.Maybe.Nothing
        , couponTemporal_amount = GHC.Maybe.Nothing
        , couponTemporal_unit = GHC.Maybe.Nothing
        , couponUnique_code_template = GHC.Maybe.Nothing
        , couponUnique_coupon_code = GHC.Maybe.Nothing
        , couponUnique_coupon_codes_count = GHC.Maybe.Nothing
        , couponUpdated_at = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.Coupon.properties.coupon_type@ in the specification.

Whether the coupon is \"single_code\" or \"bulk\". Bulk coupons will require a \`unique_code_template\` and will generate unique codes through the \`\/generate\` endpoint.
-}
data CouponCoupon_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponCoupon_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponCoupon_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"bulk"@
      CouponCoupon_typeEnumBulk
    | -- | Represents the JSON value @"single_code"@
      CouponCoupon_typeEnumSingle_code
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponCoupon_type where
    toJSON (CouponCoupon_typeOther val) = val
    toJSON (CouponCoupon_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponCoupon_typeEnumBulk) = "bulk"
    toJSON (CouponCoupon_typeEnumSingle_code) = "single_code"
instance Data.Aeson.Types.FromJSON.FromJSON CouponCoupon_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "bulk" -> CouponCoupon_typeEnumBulk
                | val GHC.Classes.== "single_code" -> CouponCoupon_typeEnumSingle_code
                | GHC.Base.otherwise -> CouponCoupon_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.Coupon.properties.duration@ in the specification.

- \"single_use\" coupons applies to the first invoice only.
- \"temporal\" coupons will apply to invoices for the duration determined by the \`temporal_unit\` and \`temporal_amount\` attributes.
-}
data CouponDuration
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponDurationOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponDurationTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"forever"@
      CouponDurationEnumForever
    | -- | Represents the JSON value @"single_use"@
      CouponDurationEnumSingle_use
    | -- | Represents the JSON value @"temporal"@
      CouponDurationEnumTemporal
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponDuration where
    toJSON (CouponDurationOther val) = val
    toJSON (CouponDurationTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponDurationEnumForever) = "forever"
    toJSON (CouponDurationEnumSingle_use) = "single_use"
    toJSON (CouponDurationEnumTemporal) = "temporal"
instance Data.Aeson.Types.FromJSON.FromJSON CouponDuration where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "forever" -> CouponDurationEnumForever
                | val GHC.Classes.== "single_use" -> CouponDurationEnumSingle_use
                | val GHC.Classes.== "temporal" -> CouponDurationEnumTemporal
                | GHC.Base.otherwise -> CouponDurationOther val
            )

{- | Defines the enum schema located at @components.schemas.Coupon.properties.free_trial_unit@ in the specification.

Description of the unit of time the coupon is for. Used with \`free_trial_amount\` to determine the duration of time the coupon is for.
-}
data CouponFree_trial_unit
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponFree_trial_unitOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponFree_trial_unitTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"day"@
      CouponFree_trial_unitEnumDay
    | -- | Represents the JSON value @"month"@
      CouponFree_trial_unitEnumMonth
    | -- | Represents the JSON value @"week"@
      CouponFree_trial_unitEnumWeek
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponFree_trial_unit where
    toJSON (CouponFree_trial_unitOther val) = val
    toJSON (CouponFree_trial_unitTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponFree_trial_unitEnumDay) = "day"
    toJSON (CouponFree_trial_unitEnumMonth) = "month"
    toJSON (CouponFree_trial_unitEnumWeek) = "week"
instance Data.Aeson.Types.FromJSON.FromJSON CouponFree_trial_unit where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "day" -> CouponFree_trial_unitEnumDay
                | val GHC.Classes.== "month" -> CouponFree_trial_unitEnumMonth
                | val GHC.Classes.== "week" -> CouponFree_trial_unitEnumWeek
                | GHC.Base.otherwise -> CouponFree_trial_unitOther val
            )

{- | Defines the enum schema located at @components.schemas.Coupon.properties.redemption_resource@ in the specification.

Whether the discount is for all eligible charges on the account, or only a specific subscription.
-}
data CouponRedemption_resource
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponRedemption_resourceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponRedemption_resourceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"account"@
      CouponRedemption_resourceEnumAccount
    | -- | Represents the JSON value @"subscription"@
      CouponRedemption_resourceEnumSubscription
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponRedemption_resource where
    toJSON (CouponRedemption_resourceOther val) = val
    toJSON (CouponRedemption_resourceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponRedemption_resourceEnumAccount) = "account"
    toJSON (CouponRedemption_resourceEnumSubscription) = "subscription"
instance Data.Aeson.Types.FromJSON.FromJSON CouponRedemption_resource where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "account" -> CouponRedemption_resourceEnumAccount
                | val GHC.Classes.== "subscription" -> CouponRedemption_resourceEnumSubscription
                | GHC.Base.otherwise -> CouponRedemption_resourceOther val
            )

{- | Defines the enum schema located at @components.schemas.Coupon.properties.state@ in the specification.

Indicates if the coupon is redeemable, and if it is not, why.
-}
data CouponState
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponStateOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponStateTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"expired"@
      CouponStateEnumExpired
    | -- | Represents the JSON value @"maxed_out"@
      CouponStateEnumMaxed_out
    | -- | Represents the JSON value @"redeemable"@
      CouponStateEnumRedeemable
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponState where
    toJSON (CouponStateOther val) = val
    toJSON (CouponStateTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponStateEnumExpired) = "expired"
    toJSON (CouponStateEnumMaxed_out) = "maxed_out"
    toJSON (CouponStateEnumRedeemable) = "redeemable"
instance Data.Aeson.Types.FromJSON.FromJSON CouponState where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "expired" -> CouponStateEnumExpired
                | val GHC.Classes.== "maxed_out" -> CouponStateEnumMaxed_out
                | val GHC.Classes.== "redeemable" -> CouponStateEnumRedeemable
                | GHC.Base.otherwise -> CouponStateOther val
            )

{- | Defines the enum schema located at @components.schemas.Coupon.properties.temporal_unit@ in the specification.

If \`duration\` is \"temporal\" than \`temporal_unit\` is multiplied by \`temporal_amount\` to define the duration that the coupon will be applied to invoices for.
-}
data CouponTemporal_unit
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponTemporal_unitOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponTemporal_unitTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"day"@
      CouponTemporal_unitEnumDay
    | -- | Represents the JSON value @"month"@
      CouponTemporal_unitEnumMonth
    | -- | Represents the JSON value @"week"@
      CouponTemporal_unitEnumWeek
    | -- | Represents the JSON value @"year"@
      CouponTemporal_unitEnumYear
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponTemporal_unit where
    toJSON (CouponTemporal_unitOther val) = val
    toJSON (CouponTemporal_unitTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponTemporal_unitEnumDay) = "day"
    toJSON (CouponTemporal_unitEnumMonth) = "month"
    toJSON (CouponTemporal_unitEnumWeek) = "week"
    toJSON (CouponTemporal_unitEnumYear) = "year"
instance Data.Aeson.Types.FromJSON.FromJSON CouponTemporal_unit where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "day" -> CouponTemporal_unitEnumDay
                | val GHC.Classes.== "month" -> CouponTemporal_unitEnumMonth
                | val GHC.Classes.== "week" -> CouponTemporal_unitEnumWeek
                | val GHC.Classes.== "year" -> CouponTemporal_unitEnumYear
                | GHC.Base.otherwise -> CouponTemporal_unitOther val
            )

{- | Defines the object schema located at @components.schemas.Coupon.properties.unique_coupon_code.allOf@ in the specification.

Will be populated when the Coupon being returned is a \\\`UniqueCouponCode\\\`.
-}
data CouponUnique_coupon_code = CouponUnique_coupon_code
    { couponUnique_coupon_codeBulk_coupon_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ bulk_coupon_code: The Coupon code of the parent Bulk Coupon
    , couponUnique_coupon_codeBulk_coupon_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ bulk_coupon_id: The Coupon ID of the parent Bulk Coupon
    , couponUnique_coupon_codeCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ code: The code the customer enters to redeem the coupon.
    , couponUnique_coupon_codeCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , couponUnique_coupon_codeExpired_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ expired_at: The date and time the coupon was expired early or reached its \`max_redemptions\`.
    , couponUnique_coupon_codeId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    , couponUnique_coupon_codeObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , couponUnique_coupon_codeRedeemed_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ redeemed_at: The date and time the unique coupon code was redeemed.
    , couponUnique_coupon_codeState :: (GHC.Maybe.Maybe CouponUnique_coupon_codeState)
    -- ^ state: Indicates if the unique coupon code is redeemable or why not.
    , couponUnique_coupon_codeUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON CouponUnique_coupon_code where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk_coupon_code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeBulk_coupon_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk_coupon_id" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeBulk_coupon_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expired_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeExpired_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redeemed_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeRedeemed_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeUpdated_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk_coupon_code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeBulk_coupon_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk_coupon_id" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeBulk_coupon_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expired_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeExpired_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redeemed_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeRedeemed_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (couponUnique_coupon_codeUpdated_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON CouponUnique_coupon_code where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "CouponUnique_coupon_code" (\obj -> (((((((((GHC.Base.pure CouponUnique_coupon_code GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bulk_coupon_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bulk_coupon_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expired_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "redeemed_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at"))

-- | Create a new 'CouponUnique_coupon_code' with all required fields.
mkCouponUnique_coupon_code :: CouponUnique_coupon_code
mkCouponUnique_coupon_code =
    CouponUnique_coupon_code
        { couponUnique_coupon_codeBulk_coupon_code = GHC.Maybe.Nothing
        , couponUnique_coupon_codeBulk_coupon_id = GHC.Maybe.Nothing
        , couponUnique_coupon_codeCode = GHC.Maybe.Nothing
        , couponUnique_coupon_codeCreated_at = GHC.Maybe.Nothing
        , couponUnique_coupon_codeExpired_at = GHC.Maybe.Nothing
        , couponUnique_coupon_codeId = GHC.Maybe.Nothing
        , couponUnique_coupon_codeObject = GHC.Maybe.Nothing
        , couponUnique_coupon_codeRedeemed_at = GHC.Maybe.Nothing
        , couponUnique_coupon_codeState = GHC.Maybe.Nothing
        , couponUnique_coupon_codeUpdated_at = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.Coupon.properties.unique_coupon_code.allOf.properties.state@ in the specification.

Indicates if the unique coupon code is redeemable or why not.
-}
data CouponUnique_coupon_codeState
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CouponUnique_coupon_codeStateOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CouponUnique_coupon_codeStateTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"expired"@
      CouponUnique_coupon_codeStateEnumExpired
    | -- | Represents the JSON value @"inactive"@
      CouponUnique_coupon_codeStateEnumInactive
    | -- | Represents the JSON value @"maxed_out"@
      CouponUnique_coupon_codeStateEnumMaxed_out
    | -- | Represents the JSON value @"redeemable"@
      CouponUnique_coupon_codeStateEnumRedeemable
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CouponUnique_coupon_codeState where
    toJSON (CouponUnique_coupon_codeStateOther val) = val
    toJSON (CouponUnique_coupon_codeStateTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CouponUnique_coupon_codeStateEnumExpired) = "expired"
    toJSON (CouponUnique_coupon_codeStateEnumInactive) = "inactive"
    toJSON (CouponUnique_coupon_codeStateEnumMaxed_out) = "maxed_out"
    toJSON (CouponUnique_coupon_codeStateEnumRedeemable) = "redeemable"
instance Data.Aeson.Types.FromJSON.FromJSON CouponUnique_coupon_codeState where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "expired" -> CouponUnique_coupon_codeStateEnumExpired
                | val GHC.Classes.== "inactive" -> CouponUnique_coupon_codeStateEnumInactive
                | val GHC.Classes.== "maxed_out" -> CouponUnique_coupon_codeStateEnumMaxed_out
                | val GHC.Classes.== "redeemable" -> CouponUnique_coupon_codeStateEnumRedeemable
                | GHC.Base.otherwise -> CouponUnique_coupon_codeStateOther val
            )
