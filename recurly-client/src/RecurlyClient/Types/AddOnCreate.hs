{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AddOnCreate
module RecurlyClient.Types.AddOnCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AddOnPricing
import {-# SOURCE #-} RecurlyClient.Types.PercentageTiersByCurrency
import {-# SOURCE #-} RecurlyClient.Types.Tier
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | Defines the object schema located at @components.schemas.AddOnCreate@ in the specification.

Full add-on details.
-}
data AddOnCreate = AddOnCreate
    { addOnCreateAccounting_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ accounting_code: Accounting code for invoice line items for this add-on. If no value is provided, it defaults to add-on\'s code. If \`item_code\`\/\`item_id\` is part of the request then \`accounting_code\` must be absent.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    -- * Must match pattern \'\/^[a-z0-9_+-]+\$\/\'
    , addOnCreateAdd_on_type :: (GHC.Maybe.Maybe AddOnCreateAdd_on_type)
    -- ^ add_on_type: Whether the add-on type is fixed, or usage-based.
    , addOnCreateAvalara_service_type :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ avalara_service_type: Used by Avalara for Communications taxes. The transaction type in combination with the service type describe how the add-on is taxed. Refer to [the documentation](https:\/\/help.avalara.com\/AvaTax_for_Communications\/Tax_Calculation\/AvaTax_for_Communications_Tax_Engine\/Mapping_Resources\/TM_00115_AFC_Modules_Corresponding_Transaction_Types) for more available t\/s types. If an \`Item\` is associated to the \`AddOn\`, then the \`avalara_service_type\` must be absent.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , addOnCreateAvalara_transaction_type :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ avalara_transaction_type: Used by Avalara for Communications taxes. The transaction type in combination with the service type describe how the add-on is taxed. Refer to [the documentation](https:\/\/help.avalara.com\/AvaTax_for_Communications\/Tax_Calculation\/AvaTax_for_Communications_Tax_Engine\/Mapping_Resources\/TM_00115_AFC_Modules_Corresponding_Transaction_Types) for more available t\/s types. If an \`Item\` is associated to the \`AddOn\`, then the \`avalara_transaction_type\` must be absent.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , addOnCreateCode :: Data.Text.Internal.Text
    -- ^ code: The unique identifier for the add-on within its plan. If \`item_code\`\/\`item_id\` is part of the request then \`code\` must be absent. If \`item_code\`\/\`item_id\` is not present \`code\` is required.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , addOnCreateCurrencies :: (GHC.Maybe.Maybe (GHC.Base.NonEmpty AddOnPricing))
    -- ^ currencies: * If \`item_code\`\/\`item_id\` is part of the request and the item
    -- has a default currency, then \`currencies\` is optional. If the item does
    -- not have a default currency, then \`currencies\` is required. If \`item_code\`\/\`item_id\`
    -- is not present \`currencies\` is required.
    -- * If the add-on\'s \`tier_type\` is \`tiered\`, \`volume\`, or \`stairstep\`,
    -- then \`currencies\` must be absent.
    -- * Must be absent if \`add_on_type\` is \`usage\` and \`usage_type\` is \`percentage\`.
    --
    --
    -- Constraints:
    --
    -- * Must have a minimum of 1 items
    , addOnCreateDefault_quantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ default_quantity: Default quantity for the hosted pages.
    , addOnCreateDisplay_quantity :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ display_quantity: Determines if the quantity field is displayed on the hosted pages for the add-on.
    , addOnCreateItem_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ item_code: Unique code to identify an item. Available when the \`Credit Invoices\` feature is enabled. If \`item_id\` and \`item_code\` are both present, \`item_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'\/^[a-z0-9_+-]+\$\/\'
    , addOnCreateItem_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ item_id: System-generated unique identifier for an item. Available when the \`Credit Invoices\` feature is enabled. If \`item_id\` and \`item_code\` are both present, \`item_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreateLiability_gl_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ liability_gl_account_id: The ID of a general ledger account. General ledger accounts are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreateMeasured_unit_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ measured_unit_id: System-generated unique identifier for a measured unit to be associated with the add-on. Either \`measured_unit_id\` or \`measured_unit_name\` are required when \`add_on_type\` is \`usage\`. If \`measured_unit_id\` and \`measured_unit_name\` are both present, \`measured_unit_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreateMeasured_unit_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ measured_unit_name: Name of a measured unit to be associated with the add-on. Either \`measured_unit_id\` or \`measured_unit_name\` are required when \`add_on_type\` is \`usage\`. If \`measured_unit_id\` and \`measured_unit_name\` are both present, \`measured_unit_id\` will be used.
    , addOnCreateName :: Data.Text.Internal.Text
    -- ^ name: Describes your add-on and will appear in subscribers\' invoices. If \`item_code\`\/\`item_id\` is part of the request then \`name\` must be absent. If \`item_code\`\/\`item_id\` is not present \`name\` is required.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , addOnCreateOptional :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ optional: Whether the add-on is optional for the customer to include in their purchase on the hosted payment page. If false, the add-on will be included when a subscription is created through the Recurly UI. However, the add-on will not be included when a subscription is created through the API.
    , addOnCreatePercentage_tiers :: (GHC.Maybe.Maybe [PercentageTiersByCurrency])
    -- ^ percentage_tiers: Array of objects which must have at least one set of tiers
    -- per currency and the currency code. The tier_type must be \`volume\` or \`tiered\`,
    -- if not, it must be absent. There must be one tier without an \`ending_amount\` value
    -- which represents the final tier. This feature is currently in development and
    -- requires approval and enablement, please contact support.
    , addOnCreatePerformance_obligation_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ performance_obligation_id: The ID of a performance obligation. Performance obligations are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreatePlan_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreateRevenue_gl_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ revenue_gl_account_id: The ID of a general ledger account. General ledger accounts are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , addOnCreateRevenue_schedule_type :: (GHC.Maybe.Maybe AddOnCreateRevenue_schedule_type)
    -- ^ revenue_schedule_type: When this add-on is invoiced, the line item will use this revenue schedule. If \`item_code\`\/\`item_id\` is part of the request then \`revenue_schedule_type\` must be absent in the request as the value will be set from the item.
    , addOnCreateTax_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ tax_code: Optional field used by Avalara, Vertex, and Recurly\'s In-the-Box tax solution to determine taxation rules. You can pass in specific tax codes using any of these tax integrations. For Recurly\'s In-the-Box tax offering you can also choose to instead use simple values of \`unknown\`, \`physical\`, or \`digital\` tax codes. If \`item_code\`\/\`item_id\` is part of the request then \`tax_code\` must be absent.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , addOnCreateTier_type :: (GHC.Maybe.Maybe AddOnCreateTier_type)
    -- ^ tier_type: The pricing model for the add-on.  For more information,
    -- [click here](https:\/\/docs.recurly.com\/docs\/billing-models\#section-quantity-based). See our
    -- [Guide](https:\/\/recurly.com\/developers\/guides\/item-addon-guide.html) for an overview of how
    -- to configure quantity-based pricing models.
    , addOnCreateTiers :: (GHC.Maybe.Maybe [Tier])
    -- ^ tiers: If the tier_type is \`flat\`, then \`tiers\` must be absent. The \`tiers\` object
    -- must include one to many tiers with \`ending_quantity\` and \`unit_amount\` for
    -- the desired \`currencies\`. There must be one tier without an \`ending_quantity\` value
    -- which represents the final tier.
    , addOnCreateUsage_calculation_type :: (GHC.Maybe.Maybe AddOnCreateUsage_calculation_type)
    -- ^ usage_calculation_type: The type of calculation to be employed for an add-on.  Cumulative billing will sum all usage records created in the current billing cycle.  Last-in-period billing will apply only the most recent usage record in the billing period.  If no value is specified, cumulative billing will be used.
    , addOnCreateUsage_percentage :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ usage_percentage: The percentage taken of the monetary amount of usage tracked. This can be up to 4 decimal places. A value between 0.0 and 100.0. Required if \`add_on_type\` is usage, \`tier_type\` is \`flat\` and \`usage_type\` is percentage. Must be omitted otherwise.
    , addOnCreateUsage_timeframe :: (GHC.Maybe.Maybe AddOnCreateUsage_timeframe)
    -- ^ usage_timeframe: The time at which usage totals are reset for billing purposes.
    -- Allows for \`tiered\` add-ons to accumulate usage over the course of multiple
    -- billing periods.
    , addOnCreateUsage_type :: (GHC.Maybe.Maybe AddOnCreateUsage_type)
    -- ^ usage_type: Type of usage, required if \`add_on_type\` is \`usage\`. See our
    -- [Guide](https:\/\/recurly.com\/developers\/guides\/usage-based-billing-guide.html) for an
    -- overview of how to configure usage add-ons.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accounting_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateAccounting_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAdd_on_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_service_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAvalara_service_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_transaction_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAvalara_transaction_type obj) : ["code" Data.Aeson.Types.ToJSON..= addOnCreateCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currencies" Data.Aeson.Types.ToJSON..=)) (addOnCreateCurrencies obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_quantity" Data.Aeson.Types.ToJSON..=)) (addOnCreateDefault_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_quantity" Data.Aeson.Types.ToJSON..=)) (addOnCreateDisplay_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateItem_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateItem_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability_gl_account_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateLiability_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("measured_unit_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateMeasured_unit_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("measured_unit_name" Data.Aeson.Types.ToJSON..=)) (addOnCreateMeasured_unit_name obj) : ["name" Data.Aeson.Types.ToJSON..= addOnCreateName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("optional" Data.Aeson.Types.ToJSON..=)) (addOnCreateOptional obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percentage_tiers" Data.Aeson.Types.ToJSON..=)) (addOnCreatePercentage_tiers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("performance_obligation_id" Data.Aeson.Types.ToJSON..=)) (addOnCreatePerformance_obligation_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (addOnCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_gl_account_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateRevenue_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateTax_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tier_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateTier_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tiers" Data.Aeson.Types.ToJSON..=)) (addOnCreateTiers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_calculation_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_calculation_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_percentage" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_percentage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_timeframe" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_timeframe obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_type obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accounting_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateAccounting_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAdd_on_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_service_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAvalara_service_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_transaction_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateAvalara_transaction_type obj) : ["code" Data.Aeson.Types.ToJSON..= addOnCreateCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currencies" Data.Aeson.Types.ToJSON..=)) (addOnCreateCurrencies obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_quantity" Data.Aeson.Types.ToJSON..=)) (addOnCreateDefault_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_quantity" Data.Aeson.Types.ToJSON..=)) (addOnCreateDisplay_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateItem_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateItem_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability_gl_account_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateLiability_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("measured_unit_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateMeasured_unit_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("measured_unit_name" Data.Aeson.Types.ToJSON..=)) (addOnCreateMeasured_unit_name obj) : ["name" Data.Aeson.Types.ToJSON..= addOnCreateName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("optional" Data.Aeson.Types.ToJSON..=)) (addOnCreateOptional obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percentage_tiers" Data.Aeson.Types.ToJSON..=)) (addOnCreatePercentage_tiers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("performance_obligation_id" Data.Aeson.Types.ToJSON..=)) (addOnCreatePerformance_obligation_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (addOnCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_gl_account_id" Data.Aeson.Types.ToJSON..=)) (addOnCreateRevenue_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (addOnCreateTax_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tier_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateTier_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tiers" Data.Aeson.Types.ToJSON..=)) (addOnCreateTiers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_calculation_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_calculation_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_percentage" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_percentage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_timeframe" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_timeframe obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage_type" Data.Aeson.Types.ToJSON..=)) (addOnCreateUsage_type obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "AddOnCreate" (\obj -> ((((((((((((((((((((((((((GHC.Base.pure AddOnCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "accounting_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_on_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "avalara_service_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "avalara_transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currencies")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "display_quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "item_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "item_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "liability_gl_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "measured_unit_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "measured_unit_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "optional")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "percentage_tiers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "performance_obligation_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_gl_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tier_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tiers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "usage_calculation_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "usage_percentage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "usage_timeframe")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "usage_type"))

-- | Create a new 'AddOnCreate' with all required fields.
mkAddOnCreate ::
    -- | 'addOnCreateCode'
    Data.Text.Internal.Text ->
    -- | 'addOnCreateName'
    Data.Text.Internal.Text ->
    AddOnCreate
mkAddOnCreate addOnCreateCode addOnCreateName =
    AddOnCreate
        { addOnCreateAccounting_code = GHC.Maybe.Nothing
        , addOnCreateAdd_on_type = GHC.Maybe.Nothing
        , addOnCreateAvalara_service_type = GHC.Maybe.Nothing
        , addOnCreateAvalara_transaction_type = GHC.Maybe.Nothing
        , addOnCreateCode = addOnCreateCode
        , addOnCreateCurrencies = GHC.Maybe.Nothing
        , addOnCreateDefault_quantity = GHC.Maybe.Nothing
        , addOnCreateDisplay_quantity = GHC.Maybe.Nothing
        , addOnCreateItem_code = GHC.Maybe.Nothing
        , addOnCreateItem_id = GHC.Maybe.Nothing
        , addOnCreateLiability_gl_account_id = GHC.Maybe.Nothing
        , addOnCreateMeasured_unit_id = GHC.Maybe.Nothing
        , addOnCreateMeasured_unit_name = GHC.Maybe.Nothing
        , addOnCreateName = addOnCreateName
        , addOnCreateOptional = GHC.Maybe.Nothing
        , addOnCreatePercentage_tiers = GHC.Maybe.Nothing
        , addOnCreatePerformance_obligation_id = GHC.Maybe.Nothing
        , addOnCreatePlan_id = GHC.Maybe.Nothing
        , addOnCreateRevenue_gl_account_id = GHC.Maybe.Nothing
        , addOnCreateRevenue_schedule_type = GHC.Maybe.Nothing
        , addOnCreateTax_code = GHC.Maybe.Nothing
        , addOnCreateTier_type = GHC.Maybe.Nothing
        , addOnCreateTiers = GHC.Maybe.Nothing
        , addOnCreateUsage_calculation_type = GHC.Maybe.Nothing
        , addOnCreateUsage_percentage = GHC.Maybe.Nothing
        , addOnCreateUsage_timeframe = GHC.Maybe.Nothing
        , addOnCreateUsage_type = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.add_on_type@ in the specification.

Whether the add-on type is fixed, or usage-based.
-}
data AddOnCreateAdd_on_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateAdd_on_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateAdd_on_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"fixed"@
      AddOnCreateAdd_on_typeEnumFixed
    | -- | Represents the JSON value @"usage"@
      AddOnCreateAdd_on_typeEnumUsage
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateAdd_on_type where
    toJSON (AddOnCreateAdd_on_typeOther val) = val
    toJSON (AddOnCreateAdd_on_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateAdd_on_typeEnumFixed) = "fixed"
    toJSON (AddOnCreateAdd_on_typeEnumUsage) = "usage"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateAdd_on_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "fixed" -> AddOnCreateAdd_on_typeEnumFixed
                | val GHC.Classes.== "usage" -> AddOnCreateAdd_on_typeEnumUsage
                | GHC.Base.otherwise -> AddOnCreateAdd_on_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.revenue_schedule_type@ in the specification.

When this add-on is invoiced, the line item will use this revenue schedule. If \`item_code\`\/\`item_id\` is part of the request then \`revenue_schedule_type\` must be absent in the request as the value will be set from the item.
-}
data AddOnCreateRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_range_end"@
      AddOnCreateRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      AddOnCreateRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      AddOnCreateRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      AddOnCreateRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateRevenue_schedule_type where
    toJSON (AddOnCreateRevenue_schedule_typeOther val) = val
    toJSON (AddOnCreateRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (AddOnCreateRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (AddOnCreateRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (AddOnCreateRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_range_end" -> AddOnCreateRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> AddOnCreateRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> AddOnCreateRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> AddOnCreateRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> AddOnCreateRevenue_schedule_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.tier_type@ in the specification.

The pricing model for the add-on.  For more information,
[click here](https:\/\/docs.recurly.com\/docs\/billing-models\#section-quantity-based). See our
[Guide](https:\/\/recurly.com\/developers\/guides\/item-addon-guide.html) for an overview of how
to configure quantity-based pricing models.
-}
data AddOnCreateTier_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateTier_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateTier_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"flat"@
      AddOnCreateTier_typeEnumFlat
    | -- | Represents the JSON value @"tiered"@
      AddOnCreateTier_typeEnumTiered
    | -- | Represents the JSON value @"stairstep"@
      AddOnCreateTier_typeEnumStairstep
    | -- | Represents the JSON value @"volume"@
      AddOnCreateTier_typeEnumVolume
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateTier_type where
    toJSON (AddOnCreateTier_typeOther val) = val
    toJSON (AddOnCreateTier_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateTier_typeEnumFlat) = "flat"
    toJSON (AddOnCreateTier_typeEnumTiered) = "tiered"
    toJSON (AddOnCreateTier_typeEnumStairstep) = "stairstep"
    toJSON (AddOnCreateTier_typeEnumVolume) = "volume"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateTier_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "flat" -> AddOnCreateTier_typeEnumFlat
                | val GHC.Classes.== "tiered" -> AddOnCreateTier_typeEnumTiered
                | val GHC.Classes.== "stairstep" -> AddOnCreateTier_typeEnumStairstep
                | val GHC.Classes.== "volume" -> AddOnCreateTier_typeEnumVolume
                | GHC.Base.otherwise -> AddOnCreateTier_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.usage_calculation_type@ in the specification.

The type of calculation to be employed for an add-on.  Cumulative billing will sum all usage records created in the current billing cycle.  Last-in-period billing will apply only the most recent usage record in the billing period.  If no value is specified, cumulative billing will be used.
-}
data AddOnCreateUsage_calculation_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateUsage_calculation_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateUsage_calculation_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"cumulative"@
      AddOnCreateUsage_calculation_typeEnumCumulative
    | -- | Represents the JSON value @"last_in_period"@
      AddOnCreateUsage_calculation_typeEnumLast_in_period
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateUsage_calculation_type where
    toJSON (AddOnCreateUsage_calculation_typeOther val) = val
    toJSON (AddOnCreateUsage_calculation_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateUsage_calculation_typeEnumCumulative) = "cumulative"
    toJSON (AddOnCreateUsage_calculation_typeEnumLast_in_period) = "last_in_period"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateUsage_calculation_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "cumulative" -> AddOnCreateUsage_calculation_typeEnumCumulative
                | val GHC.Classes.== "last_in_period" -> AddOnCreateUsage_calculation_typeEnumLast_in_period
                | GHC.Base.otherwise -> AddOnCreateUsage_calculation_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.usage_timeframe@ in the specification.

The time at which usage totals are reset for billing purposes.
Allows for \`tiered\` add-ons to accumulate usage over the course of multiple
billing periods.
-}
data AddOnCreateUsage_timeframe
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateUsage_timeframeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateUsage_timeframeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"billing_period"@
      AddOnCreateUsage_timeframeEnumBilling_period
    | -- | Represents the JSON value @"subscription_term"@
      AddOnCreateUsage_timeframeEnumSubscription_term
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateUsage_timeframe where
    toJSON (AddOnCreateUsage_timeframeOther val) = val
    toJSON (AddOnCreateUsage_timeframeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateUsage_timeframeEnumBilling_period) = "billing_period"
    toJSON (AddOnCreateUsage_timeframeEnumSubscription_term) = "subscription_term"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateUsage_timeframe where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "billing_period" -> AddOnCreateUsage_timeframeEnumBilling_period
                | val GHC.Classes.== "subscription_term" -> AddOnCreateUsage_timeframeEnumSubscription_term
                | GHC.Base.otherwise -> AddOnCreateUsage_timeframeOther val
            )

{- | Defines the enum schema located at @components.schemas.AddOnCreate.properties.usage_type@ in the specification.

Type of usage, required if \`add_on_type\` is \`usage\`. See our
[Guide](https:\/\/recurly.com\/developers\/guides\/usage-based-billing-guide.html) for an
overview of how to configure usage add-ons.
-}
data AddOnCreateUsage_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AddOnCreateUsage_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AddOnCreateUsage_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"price"@
      AddOnCreateUsage_typeEnumPrice
    | -- | Represents the JSON value @"percentage"@
      AddOnCreateUsage_typeEnumPercentage
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AddOnCreateUsage_type where
    toJSON (AddOnCreateUsage_typeOther val) = val
    toJSON (AddOnCreateUsage_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AddOnCreateUsage_typeEnumPrice) = "price"
    toJSON (AddOnCreateUsage_typeEnumPercentage) = "percentage"
instance Data.Aeson.Types.FromJSON.FromJSON AddOnCreateUsage_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "price" -> AddOnCreateUsage_typeEnumPrice
                | val GHC.Classes.== "percentage" -> AddOnCreateUsage_typeEnumPercentage
                | GHC.Base.otherwise -> AddOnCreateUsage_typeOther val
            )
