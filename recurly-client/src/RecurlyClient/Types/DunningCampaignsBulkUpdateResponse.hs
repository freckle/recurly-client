{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema DunningCampaignsBulkUpdateResponse
module RecurlyClient.Types.DunningCampaignsBulkUpdateResponse where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.Plan
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.DunningCampaignsBulkUpdateResponse@ in the specification.
data DunningCampaignsBulkUpdateResponse = DunningCampaignsBulkUpdateResponse
    { dunningCampaignsBulkUpdateResponseObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , dunningCampaignsBulkUpdateResponsePlans :: (GHC.Maybe.Maybe [Plan])
    -- ^ plans: An array containing all of the \`Plan\` resources that have been updated.
    --
    -- Constraints:
    --
    -- * Must have a maximum of 200 items
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON DunningCampaignsBulkUpdateResponse where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (dunningCampaignsBulkUpdateResponseObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plans" Data.Aeson.Types.ToJSON..=)) (dunningCampaignsBulkUpdateResponsePlans obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (dunningCampaignsBulkUpdateResponseObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plans" Data.Aeson.Types.ToJSON..=)) (dunningCampaignsBulkUpdateResponsePlans obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DunningCampaignsBulkUpdateResponse where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "DunningCampaignsBulkUpdateResponse" (\obj -> (GHC.Base.pure DunningCampaignsBulkUpdateResponse GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plans"))

-- | Create a new 'DunningCampaignsBulkUpdateResponse' with all required fields.
mkDunningCampaignsBulkUpdateResponse :: DunningCampaignsBulkUpdateResponse
mkDunningCampaignsBulkUpdateResponse =
    DunningCampaignsBulkUpdateResponse
        { dunningCampaignsBulkUpdateResponseObject = GHC.Maybe.Nothing
        , dunningCampaignsBulkUpdateResponsePlans = GHC.Maybe.Nothing
        }
