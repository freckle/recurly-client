{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SubscriptionPurchase
module RecurlyClient.Types.SubscriptionPurchase where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionAddOnCreate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionRampInterval
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionShippingPurchase
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SubscriptionPurchase@ in the specification.
data SubscriptionPurchase = SubscriptionPurchase
    { subscriptionPurchaseAdd_ons :: (GHC.Maybe.Maybe [SubscriptionAddOnCreate])
    -- ^ add_ons
    , subscriptionPurchaseAuto_renew :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ auto_renew: Whether the subscription renews at the end of its term.
    , subscriptionPurchaseBulk :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ bulk: Optional field to be used only when needing to bypass the 60 second limit on creating subscriptions. Should only be used when creating subscriptions in bulk from the API.
    , subscriptionPurchaseCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , subscriptionPurchaseNext_bill_date :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ next_bill_date: If present, this sets the date the subscription\'s next billing period will start (\`current_period_ends_at\`). This can be used to align the subscriptionâ€™s billing to a specific day of the month. The initial invoice will be prorated for the period between the subscription\'s activation date and the billing period end date. Subsequent periods will be based off the plan interval. For a subscription with a trial period, this will change when the trial expires.
    , subscriptionPurchasePlan_code :: Data.Text.Internal.Text
    -- ^ plan_code
    , subscriptionPurchasePlan_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , subscriptionPurchaseQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity: Optionally override the default quantity of 1.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , subscriptionPurchaseRamp_intervals :: (GHC.Maybe.Maybe [SubscriptionRampInterval])
    -- ^ ramp_intervals: The new set of ramp intervals for the subscription.
    , subscriptionPurchaseRenewal_billing_cycles :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ renewal_billing_cycles: If \`auto_renew=true\`, when a term completes, \`total_billing_cycles\` takes this value as the length of subsequent terms. Defaults to the plan\'s \`total_billing_cycles\`.
    , subscriptionPurchaseRevenue_schedule_type :: (GHC.Maybe.Maybe SubscriptionPurchaseRevenue_schedule_type)
    -- ^ revenue_schedule_type
    , subscriptionPurchaseShipping :: (GHC.Maybe.Maybe SubscriptionShippingPurchase)
    -- ^ shipping
    , subscriptionPurchaseStarts_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ starts_at: If set, the subscription will begin in the future on this date. The subscription will apply the setup fee and trial period, unless the plan has no trial.
    , subscriptionPurchaseTax_inclusive :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_inclusive: Determines whether or not tax is included in the unit amount. The Tax Inclusive Pricing feature (separate from the Mixed Tax Pricing feature) must be enabled to use this flag.
    , subscriptionPurchaseTotal_billing_cycles :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ total_billing_cycles: The number of cycles\/billing periods in a term. When \`remaining_billing_cycles=0\`, if \`auto_renew=true\` the subscription will renew and a new term will begin, otherwise the subscription will expire.
    --
    -- Constraints:
    --
    -- * Minimum  of 1.0
    , subscriptionPurchaseTrial_ends_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ trial_ends_at: If set, overrides the default trial behavior for the subscription. When the current date time or a past date time is provided the subscription will begin with no trial phase (overriding any plan default trial). When a future date time is provided the subscription will begin with a trial phase ending at the specified date time.
    , subscriptionPurchaseUnit_amount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ unit_amount: Override the unit amount of the subscription plan by setting this value. If not provided, the subscription will inherit the price from the subscription plan for the provided currency.
    --
    -- Constraints:
    --
    -- * Maxium  of 1000000.0
    -- * Minimum  of 0.0
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionPurchase where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseBulk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_bill_date" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseNext_bill_date obj) : ["plan_code" Data.Aeson.Types.ToJSON..= subscriptionPurchasePlan_code obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchasePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("renewal_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRenewal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("starts_at" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseStarts_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTotal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseUnit_amount obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseBulk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_bill_date" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseNext_bill_date obj) : ["plan_code" Data.Aeson.Types.ToJSON..= subscriptionPurchasePlan_code obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchasePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("renewal_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRenewal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("starts_at" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseStarts_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTotal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionPurchaseUnit_amount obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionPurchase where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionPurchase" (\obj -> ((((((((((((((((GHC.Base.pure SubscriptionPurchase GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_ons")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "auto_renew")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bulk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "next_bill_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "plan_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ramp_intervals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "renewal_billing_cycles")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "starts_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "total_billing_cycles")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_ends_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount"))

-- | Create a new 'SubscriptionPurchase' with all required fields.
mkSubscriptionPurchase ::
    -- | 'subscriptionPurchasePlan_code'
    Data.Text.Internal.Text ->
    SubscriptionPurchase
mkSubscriptionPurchase subscriptionPurchasePlan_code =
    SubscriptionPurchase
        { subscriptionPurchaseAdd_ons = GHC.Maybe.Nothing
        , subscriptionPurchaseAuto_renew = GHC.Maybe.Nothing
        , subscriptionPurchaseBulk = GHC.Maybe.Nothing
        , subscriptionPurchaseCustom_fields = GHC.Maybe.Nothing
        , subscriptionPurchaseNext_bill_date = GHC.Maybe.Nothing
        , subscriptionPurchasePlan_code = subscriptionPurchasePlan_code
        , subscriptionPurchasePlan_id = GHC.Maybe.Nothing
        , subscriptionPurchaseQuantity = GHC.Maybe.Nothing
        , subscriptionPurchaseRamp_intervals = GHC.Maybe.Nothing
        , subscriptionPurchaseRenewal_billing_cycles = GHC.Maybe.Nothing
        , subscriptionPurchaseRevenue_schedule_type = GHC.Maybe.Nothing
        , subscriptionPurchaseShipping = GHC.Maybe.Nothing
        , subscriptionPurchaseStarts_at = GHC.Maybe.Nothing
        , subscriptionPurchaseTax_inclusive = GHC.Maybe.Nothing
        , subscriptionPurchaseTotal_billing_cycles = GHC.Maybe.Nothing
        , subscriptionPurchaseTrial_ends_at = GHC.Maybe.Nothing
        , subscriptionPurchaseUnit_amount = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.SubscriptionPurchase.properties.revenue_schedule_type@ in the specification.
data SubscriptionPurchaseRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionPurchaseRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionPurchaseRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_range_end"@
      SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      SubscriptionPurchaseRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      SubscriptionPurchaseRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionPurchaseRevenue_schedule_type where
    toJSON (SubscriptionPurchaseRevenue_schedule_typeOther val) = val
    toJSON (SubscriptionPurchaseRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (SubscriptionPurchaseRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (SubscriptionPurchaseRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionPurchaseRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_range_end" -> SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> SubscriptionPurchaseRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> SubscriptionPurchaseRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> SubscriptionPurchaseRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> SubscriptionPurchaseRevenue_schedule_typeOther val
            )
