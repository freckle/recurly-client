{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AccountResponse
module RecurlyClient.Types.AccountResponse where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.Address
import {-# SOURCE #-} RecurlyClient.Types.BillingInfo
import {-# SOURCE #-} RecurlyClient.Types.ExternalAccount
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AccountResponse@ in the specification.
data AccountResponse = AccountResponse
    { accountResponseAddress :: (GHC.Maybe.Maybe Address)
    -- ^ address
    , accountResponseBill_to :: (GHC.Maybe.Maybe AccountResponseBill_to)
    -- ^ bill_to: An enumerable describing the billing behavior of the account, specifically whether the account is self-paying or will rely on the parent account to pay.
    --
    -- Constraints:
    --
    -- * Maximum length of 6
    , accountResponseBilling_info :: (GHC.Maybe.Maybe BillingInfo)
    -- ^ billing_info
    , accountResponseCc_emails :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ cc_emails: Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the \`email\` field also receives.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountResponseCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ code: The unique identifier of the account. This cannot be changed once the account is created.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , accountResponseCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ company
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , accountResponseCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , accountResponseDunning_campaign_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ dunning_campaign_id: Unique ID to identify a dunning campaign. Used to specify if a non-default dunning campaign should be assigned to this account. For sites without multiple dunning campaigns enabled, the default dunning campaign will always be used.
    , accountResponseEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ email: The email address used for communicating with this customer. The customer will also use this email address to log into your hosted account management pages. This value does not need to be unique.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountResponseEntity_use_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ entity_use_code: The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.
    , accountResponseExemption_certificate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ exemption_certificate: The tax exemption certificate number for the account. If the merchant has an integration for the Vertex tax provider, this optional value will be sent in any tax calculation requests for the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    , accountResponseExternal_accounts :: (GHC.Maybe.Maybe [ExternalAccount])
    -- ^ external_accounts: The external accounts belonging to this account
    , accountResponseFirst_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountResponseInvoice_template_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ invoice_template_id: Unique ID to identify an invoice template. Available when the site is on a Pro or Elite plan. Used to specify if a non-default invoice template will be used to generate invoices for the account. For sites without multiple invoice templates enabled, the default template will always be used.
    , accountResponseLast_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountResponseOverride_business_entity_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ override_business_entity_id: Unique ID to identify the business entity assigned to the account. Available when the \`Multiple Business Entities\` feature is enabled.
    , accountResponseParent_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ parent_account_id: The UUID of the parent account associated with this account.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , accountResponsePreferred_locale :: (GHC.Maybe.Maybe AccountResponsePreferred_locale)
    -- ^ preferred_locale: Used to determine the language and locale of emails sent on behalf of the merchant to the customer.
    , accountResponsePreferred_time_zone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ preferred_time_zone: The [IANA time zone name](https:\/\/docs.recurly.com\/docs\/email-time-zones-and-time-stamps\#supported-api-iana-time-zone-names) used to determine the time zone of emails sent on behalf of the merchant to the customer.
    , accountResponseTax_exempt :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_exempt: The tax status of the account. \`true\` exempts tax on the account, \`false\` applies tax on the account.
    , accountResponseUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ username: A secondary value for the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountResponseVat_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ vat_number: The VAT number of the account (to avoid having the VAT applied). This is only used for manually collected invoices.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON AccountResponse where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (accountResponseAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_to" Data.Aeson.Types.ToJSON..=)) (accountResponseBill_to obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (accountResponseBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cc_emails" Data.Aeson.Types.ToJSON..=)) (accountResponseCc_emails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (accountResponseCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (accountResponseCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (accountResponseCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dunning_campaign_id" Data.Aeson.Types.ToJSON..=)) (accountResponseDunning_campaign_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (accountResponseEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("entity_use_code" Data.Aeson.Types.ToJSON..=)) (accountResponseEntity_use_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exemption_certificate" Data.Aeson.Types.ToJSON..=)) (accountResponseExemption_certificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (accountResponseExternal_accounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (accountResponseFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_template_id" Data.Aeson.Types.ToJSON..=)) (accountResponseInvoice_template_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (accountResponseLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_business_entity_id" Data.Aeson.Types.ToJSON..=)) (accountResponseOverride_business_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_id" Data.Aeson.Types.ToJSON..=)) (accountResponseParent_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (accountResponsePreferred_locale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_time_zone" Data.Aeson.Types.ToJSON..=)) (accountResponsePreferred_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (accountResponseTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (accountResponseUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (accountResponseVat_number obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (accountResponseAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_to" Data.Aeson.Types.ToJSON..=)) (accountResponseBill_to obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (accountResponseBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cc_emails" Data.Aeson.Types.ToJSON..=)) (accountResponseCc_emails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (accountResponseCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (accountResponseCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (accountResponseCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dunning_campaign_id" Data.Aeson.Types.ToJSON..=)) (accountResponseDunning_campaign_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (accountResponseEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("entity_use_code" Data.Aeson.Types.ToJSON..=)) (accountResponseEntity_use_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exemption_certificate" Data.Aeson.Types.ToJSON..=)) (accountResponseExemption_certificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (accountResponseExternal_accounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (accountResponseFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_template_id" Data.Aeson.Types.ToJSON..=)) (accountResponseInvoice_template_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (accountResponseLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_business_entity_id" Data.Aeson.Types.ToJSON..=)) (accountResponseOverride_business_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_id" Data.Aeson.Types.ToJSON..=)) (accountResponseParent_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (accountResponsePreferred_locale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_time_zone" Data.Aeson.Types.ToJSON..=)) (accountResponsePreferred_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (accountResponseTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (accountResponseUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (accountResponseVat_number obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AccountResponse where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountResponse" (\obj -> (((((((((((((((((((((GHC.Base.pure AccountResponse GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bill_to")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cc_emails")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dunning_campaign_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "entity_use_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "exemption_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_accounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_template_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "override_business_entity_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "parent_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preferred_locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preferred_time_zone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_number"))

-- | Create a new 'AccountResponse' with all required fields.
mkAccountResponse :: AccountResponse
mkAccountResponse =
    AccountResponse
        { accountResponseAddress = GHC.Maybe.Nothing
        , accountResponseBill_to = GHC.Maybe.Nothing
        , accountResponseBilling_info = GHC.Maybe.Nothing
        , accountResponseCc_emails = GHC.Maybe.Nothing
        , accountResponseCode = GHC.Maybe.Nothing
        , accountResponseCompany = GHC.Maybe.Nothing
        , accountResponseCustom_fields = GHC.Maybe.Nothing
        , accountResponseDunning_campaign_id = GHC.Maybe.Nothing
        , accountResponseEmail = GHC.Maybe.Nothing
        , accountResponseEntity_use_code = GHC.Maybe.Nothing
        , accountResponseExemption_certificate = GHC.Maybe.Nothing
        , accountResponseExternal_accounts = GHC.Maybe.Nothing
        , accountResponseFirst_name = GHC.Maybe.Nothing
        , accountResponseInvoice_template_id = GHC.Maybe.Nothing
        , accountResponseLast_name = GHC.Maybe.Nothing
        , accountResponseOverride_business_entity_id = GHC.Maybe.Nothing
        , accountResponseParent_account_id = GHC.Maybe.Nothing
        , accountResponsePreferred_locale = GHC.Maybe.Nothing
        , accountResponsePreferred_time_zone = GHC.Maybe.Nothing
        , accountResponseTax_exempt = GHC.Maybe.Nothing
        , accountResponseUsername = GHC.Maybe.Nothing
        , accountResponseVat_number = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.AccountResponse.properties.bill_to@ in the specification.

An enumerable describing the billing behavior of the account, specifically whether the account is self-paying or will rely on the parent account to pay.
-}
data AccountResponseBill_to
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AccountResponseBill_toOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AccountResponseBill_toTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"parent"@
      AccountResponseBill_toEnumParent
    | -- | Represents the JSON value @"self"@
      AccountResponseBill_toEnumSelf
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AccountResponseBill_to where
    toJSON (AccountResponseBill_toOther val) = val
    toJSON (AccountResponseBill_toTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AccountResponseBill_toEnumParent) = "parent"
    toJSON (AccountResponseBill_toEnumSelf) = "self"
instance Data.Aeson.Types.FromJSON.FromJSON AccountResponseBill_to where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "parent" -> AccountResponseBill_toEnumParent
                | val GHC.Classes.== "self" -> AccountResponseBill_toEnumSelf
                | GHC.Base.otherwise -> AccountResponseBill_toOther val
            )

{- | Defines the enum schema located at @components.schemas.AccountResponse.properties.preferred_locale@ in the specification.

Used to determine the language and locale of emails sent on behalf of the merchant to the customer.
-}
data AccountResponsePreferred_locale
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AccountResponsePreferred_localeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AccountResponsePreferred_localeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"da-DK"@
      AccountResponsePreferred_localeEnumDa_DK
    | -- | Represents the JSON value @"de-CH"@
      AccountResponsePreferred_localeEnumDe_CH
    | -- | Represents the JSON value @"de-DE"@
      AccountResponsePreferred_localeEnumDe_DE
    | -- | Represents the JSON value @"en-AU"@
      AccountResponsePreferred_localeEnumEn_AU
    | -- | Represents the JSON value @"en-CA"@
      AccountResponsePreferred_localeEnumEn_CA
    | -- | Represents the JSON value @"en-GB"@
      AccountResponsePreferred_localeEnumEn_GB
    | -- | Represents the JSON value @"en-IE"@
      AccountResponsePreferred_localeEnumEn_IE
    | -- | Represents the JSON value @"en-NZ"@
      AccountResponsePreferred_localeEnumEn_NZ
    | -- | Represents the JSON value @"en-US"@
      AccountResponsePreferred_localeEnumEn_US
    | -- | Represents the JSON value @"es-ES"@
      AccountResponsePreferred_localeEnumEs_ES
    | -- | Represents the JSON value @"es-MX"@
      AccountResponsePreferred_localeEnumEs_MX
    | -- | Represents the JSON value @"es-US"@
      AccountResponsePreferred_localeEnumEs_US
    | -- | Represents the JSON value @"fi-FI"@
      AccountResponsePreferred_localeEnumFi_FI
    | -- | Represents the JSON value @"fr-BE"@
      AccountResponsePreferred_localeEnumFr_BE
    | -- | Represents the JSON value @"fr-CA"@
      AccountResponsePreferred_localeEnumFr_CA
    | -- | Represents the JSON value @"fr-CH"@
      AccountResponsePreferred_localeEnumFr_CH
    | -- | Represents the JSON value @"fr-FR"@
      AccountResponsePreferred_localeEnumFr_FR
    | -- | Represents the JSON value @"hi-IN"@
      AccountResponsePreferred_localeEnumHi_IN
    | -- | Represents the JSON value @"it-IT"@
      AccountResponsePreferred_localeEnumIt_IT
    | -- | Represents the JSON value @"ja-JP"@
      AccountResponsePreferred_localeEnumJa_JP
    | -- | Represents the JSON value @"ko-KR"@
      AccountResponsePreferred_localeEnumKo_KR
    | -- | Represents the JSON value @"nl-BE"@
      AccountResponsePreferred_localeEnumNl_BE
    | -- | Represents the JSON value @"nl-NL"@
      AccountResponsePreferred_localeEnumNl_NL
    | -- | Represents the JSON value @"pl-PL"@
      AccountResponsePreferred_localeEnumPl_PL
    | -- | Represents the JSON value @"pt-BR"@
      AccountResponsePreferred_localeEnumPt_BR
    | -- | Represents the JSON value @"pt-PT"@
      AccountResponsePreferred_localeEnumPt_PT
    | -- | Represents the JSON value @"ro-RO"@
      AccountResponsePreferred_localeEnumRo_RO
    | -- | Represents the JSON value @"ru-RU"@
      AccountResponsePreferred_localeEnumRu_RU
    | -- | Represents the JSON value @"sk-SK"@
      AccountResponsePreferred_localeEnumSk_SK
    | -- | Represents the JSON value @"sv-SE"@
      AccountResponsePreferred_localeEnumSv_SE
    | -- | Represents the JSON value @"tr-TR"@
      AccountResponsePreferred_localeEnumTr_TR
    | -- | Represents the JSON value @"zh-CN"@
      AccountResponsePreferred_localeEnumZh_CN
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AccountResponsePreferred_locale where
    toJSON (AccountResponsePreferred_localeOther val) = val
    toJSON (AccountResponsePreferred_localeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AccountResponsePreferred_localeEnumDa_DK) = "da-DK"
    toJSON (AccountResponsePreferred_localeEnumDe_CH) = "de-CH"
    toJSON (AccountResponsePreferred_localeEnumDe_DE) = "de-DE"
    toJSON (AccountResponsePreferred_localeEnumEn_AU) = "en-AU"
    toJSON (AccountResponsePreferred_localeEnumEn_CA) = "en-CA"
    toJSON (AccountResponsePreferred_localeEnumEn_GB) = "en-GB"
    toJSON (AccountResponsePreferred_localeEnumEn_IE) = "en-IE"
    toJSON (AccountResponsePreferred_localeEnumEn_NZ) = "en-NZ"
    toJSON (AccountResponsePreferred_localeEnumEn_US) = "en-US"
    toJSON (AccountResponsePreferred_localeEnumEs_ES) = "es-ES"
    toJSON (AccountResponsePreferred_localeEnumEs_MX) = "es-MX"
    toJSON (AccountResponsePreferred_localeEnumEs_US) = "es-US"
    toJSON (AccountResponsePreferred_localeEnumFi_FI) = "fi-FI"
    toJSON (AccountResponsePreferred_localeEnumFr_BE) = "fr-BE"
    toJSON (AccountResponsePreferred_localeEnumFr_CA) = "fr-CA"
    toJSON (AccountResponsePreferred_localeEnumFr_CH) = "fr-CH"
    toJSON (AccountResponsePreferred_localeEnumFr_FR) = "fr-FR"
    toJSON (AccountResponsePreferred_localeEnumHi_IN) = "hi-IN"
    toJSON (AccountResponsePreferred_localeEnumIt_IT) = "it-IT"
    toJSON (AccountResponsePreferred_localeEnumJa_JP) = "ja-JP"
    toJSON (AccountResponsePreferred_localeEnumKo_KR) = "ko-KR"
    toJSON (AccountResponsePreferred_localeEnumNl_BE) = "nl-BE"
    toJSON (AccountResponsePreferred_localeEnumNl_NL) = "nl-NL"
    toJSON (AccountResponsePreferred_localeEnumPl_PL) = "pl-PL"
    toJSON (AccountResponsePreferred_localeEnumPt_BR) = "pt-BR"
    toJSON (AccountResponsePreferred_localeEnumPt_PT) = "pt-PT"
    toJSON (AccountResponsePreferred_localeEnumRo_RO) = "ro-RO"
    toJSON (AccountResponsePreferred_localeEnumRu_RU) = "ru-RU"
    toJSON (AccountResponsePreferred_localeEnumSk_SK) = "sk-SK"
    toJSON (AccountResponsePreferred_localeEnumSv_SE) = "sv-SE"
    toJSON (AccountResponsePreferred_localeEnumTr_TR) = "tr-TR"
    toJSON (AccountResponsePreferred_localeEnumZh_CN) = "zh-CN"
instance Data.Aeson.Types.FromJSON.FromJSON AccountResponsePreferred_locale where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "da-DK" -> AccountResponsePreferred_localeEnumDa_DK
                | val GHC.Classes.== "de-CH" -> AccountResponsePreferred_localeEnumDe_CH
                | val GHC.Classes.== "de-DE" -> AccountResponsePreferred_localeEnumDe_DE
                | val GHC.Classes.== "en-AU" -> AccountResponsePreferred_localeEnumEn_AU
                | val GHC.Classes.== "en-CA" -> AccountResponsePreferred_localeEnumEn_CA
                | val GHC.Classes.== "en-GB" -> AccountResponsePreferred_localeEnumEn_GB
                | val GHC.Classes.== "en-IE" -> AccountResponsePreferred_localeEnumEn_IE
                | val GHC.Classes.== "en-NZ" -> AccountResponsePreferred_localeEnumEn_NZ
                | val GHC.Classes.== "en-US" -> AccountResponsePreferred_localeEnumEn_US
                | val GHC.Classes.== "es-ES" -> AccountResponsePreferred_localeEnumEs_ES
                | val GHC.Classes.== "es-MX" -> AccountResponsePreferred_localeEnumEs_MX
                | val GHC.Classes.== "es-US" -> AccountResponsePreferred_localeEnumEs_US
                | val GHC.Classes.== "fi-FI" -> AccountResponsePreferred_localeEnumFi_FI
                | val GHC.Classes.== "fr-BE" -> AccountResponsePreferred_localeEnumFr_BE
                | val GHC.Classes.== "fr-CA" -> AccountResponsePreferred_localeEnumFr_CA
                | val GHC.Classes.== "fr-CH" -> AccountResponsePreferred_localeEnumFr_CH
                | val GHC.Classes.== "fr-FR" -> AccountResponsePreferred_localeEnumFr_FR
                | val GHC.Classes.== "hi-IN" -> AccountResponsePreferred_localeEnumHi_IN
                | val GHC.Classes.== "it-IT" -> AccountResponsePreferred_localeEnumIt_IT
                | val GHC.Classes.== "ja-JP" -> AccountResponsePreferred_localeEnumJa_JP
                | val GHC.Classes.== "ko-KR" -> AccountResponsePreferred_localeEnumKo_KR
                | val GHC.Classes.== "nl-BE" -> AccountResponsePreferred_localeEnumNl_BE
                | val GHC.Classes.== "nl-NL" -> AccountResponsePreferred_localeEnumNl_NL
                | val GHC.Classes.== "pl-PL" -> AccountResponsePreferred_localeEnumPl_PL
                | val GHC.Classes.== "pt-BR" -> AccountResponsePreferred_localeEnumPt_BR
                | val GHC.Classes.== "pt-PT" -> AccountResponsePreferred_localeEnumPt_PT
                | val GHC.Classes.== "ro-RO" -> AccountResponsePreferred_localeEnumRo_RO
                | val GHC.Classes.== "ru-RU" -> AccountResponsePreferred_localeEnumRu_RU
                | val GHC.Classes.== "sk-SK" -> AccountResponsePreferred_localeEnumSk_SK
                | val GHC.Classes.== "sv-SE" -> AccountResponsePreferred_localeEnumSv_SE
                | val GHC.Classes.== "tr-TR" -> AccountResponsePreferred_localeEnumTr_TR
                | val GHC.Classes.== "zh-CN" -> AccountResponsePreferred_localeEnumZh_CN
                | GHC.Base.otherwise -> AccountResponsePreferred_localeOther val
            )
