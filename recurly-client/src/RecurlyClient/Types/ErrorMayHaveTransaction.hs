{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ErrorMayHaveTransaction
module RecurlyClient.Types.ErrorMayHaveTransaction where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.Error
import {-# SOURCE #-} RecurlyClient.Types.TransactionFraudInfo
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ErrorMayHaveTransaction.allOf@ in the specification.
data ErrorMayHaveTransaction = ErrorMayHaveTransaction
    { errorMayHaveTransactionMessage :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ message
    , errorMayHaveTransactionParams :: (GHC.Maybe.Maybe [ErrorMayHaveTransactionParams])
    -- ^ params
    , errorMayHaveTransactionTransaction_error :: (GHC.Maybe.Maybe ErrorMayHaveTransactionTransaction_error)
    -- ^ transaction_error: This is only included on errors with \`type=transaction\`.
    , errorMayHaveTransactionType :: (GHC.Maybe.Maybe ErrorMayHaveTransactionType)
    -- ^ type
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransaction where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("params" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionParams obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_error" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_error obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionType obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("params" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionParams obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_error" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_error obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransaction where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ErrorMayHaveTransaction" (\obj -> (((GHC.Base.pure ErrorMayHaveTransaction GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "params")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type"))

-- | Create a new 'ErrorMayHaveTransaction' with all required fields.
mkErrorMayHaveTransaction :: ErrorMayHaveTransaction
mkErrorMayHaveTransaction =
    ErrorMayHaveTransaction
        { errorMayHaveTransactionMessage = GHC.Maybe.Nothing
        , errorMayHaveTransactionParams = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_error = GHC.Maybe.Nothing
        , errorMayHaveTransactionType = GHC.Maybe.Nothing
        }

-- | Defines the object schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.params.items@ in the specification.
data ErrorMayHaveTransactionParams = ErrorMayHaveTransactionParams
    { errorMayHaveTransactionParamsParam :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ param
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionParams where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("param" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionParamsParam obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("param" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionParamsParam obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionParams where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ErrorMayHaveTransactionParams" (\obj -> GHC.Base.pure ErrorMayHaveTransactionParams GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "param"))

-- | Create a new 'ErrorMayHaveTransactionParams' with all required fields.
mkErrorMayHaveTransactionParams :: ErrorMayHaveTransactionParams
mkErrorMayHaveTransactionParams = ErrorMayHaveTransactionParams{errorMayHaveTransactionParamsParam = GHC.Maybe.Nothing}

{- | Defines the object schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.transaction_error@ in the specification.

This is only included on errors with \`type=transaction\`.
-}
data ErrorMayHaveTransactionTransaction_error = ErrorMayHaveTransactionTransaction_error
    { errorMayHaveTransactionTransaction_errorCategory :: (GHC.Maybe.Maybe ErrorMayHaveTransactionTransaction_errorCategory)
    -- ^ category
    , errorMayHaveTransactionTransaction_errorCode :: (GHC.Maybe.Maybe ErrorMayHaveTransactionTransaction_errorCode)
    -- ^ code
    , errorMayHaveTransactionTransaction_errorDecline_code :: (GHC.Maybe.Maybe ErrorMayHaveTransactionTransaction_errorDecline_code)
    -- ^ decline_code
    , errorMayHaveTransactionTransaction_errorFraud_info :: (GHC.Maybe.Maybe TransactionFraudInfo)
    -- ^ fraud_info
    , errorMayHaveTransactionTransaction_errorMerchant_advice :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ merchant_advice
    , errorMayHaveTransactionTransaction_errorMessage :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ message
    , errorMayHaveTransactionTransaction_errorObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , errorMayHaveTransactionTransaction_errorThree_d_secure_action_token_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ three_d_secure_action_token_id: Returned when 3-D Secure authentication is required for a transaction. Pass this value to Recurly.js so it can continue the challenge flow.
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    , errorMayHaveTransactionTransaction_errorTransaction_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ transaction_id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionTransaction_error where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("category" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorCategory obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_code" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorDecline_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraud_info" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorFraud_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchant_advice" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorMerchant_advice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_token_id" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorThree_d_secure_action_token_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorTransaction_id obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("category" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorCategory obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_code" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorDecline_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraud_info" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorFraud_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchant_advice" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorMerchant_advice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_token_id" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorThree_d_secure_action_token_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (errorMayHaveTransactionTransaction_errorTransaction_id obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionTransaction_error where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ErrorMayHaveTransactionTransaction_error" (\obj -> ((((((((GHC.Base.pure ErrorMayHaveTransactionTransaction_error GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "category")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "decline_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fraud_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "merchant_advice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "three_d_secure_action_token_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_id"))

-- | Create a new 'ErrorMayHaveTransactionTransaction_error' with all required fields.
mkErrorMayHaveTransactionTransaction_error :: ErrorMayHaveTransactionTransaction_error
mkErrorMayHaveTransactionTransaction_error =
    ErrorMayHaveTransactionTransaction_error
        { errorMayHaveTransactionTransaction_errorCategory = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorCode = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorDecline_code = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorFraud_info = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorMerchant_advice = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorMessage = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorObject = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorThree_d_secure_action_token_id = GHC.Maybe.Nothing
        , errorMayHaveTransactionTransaction_errorTransaction_id = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.transaction_error.properties.category@ in the specification.
data ErrorMayHaveTransactionTransaction_errorCategory
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ErrorMayHaveTransactionTransaction_errorCategoryOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ErrorMayHaveTransactionTransaction_errorCategoryTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"three_d_secure_required"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_required
    | -- | Represents the JSON value @"three_d_secure_action_required"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_action_required
    | -- | Represents the JSON value @"amazon"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumAmazon
    | -- | Represents the JSON value @"api_error"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumApi_error
    | -- | Represents the JSON value @"approved"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumApproved
    | -- | Represents the JSON value @"communication"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumCommunication
    | -- | Represents the JSON value @"configuration"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumConfiguration
    | -- | Represents the JSON value @"duplicate"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumDuplicate
    | -- | Represents the JSON value @"fraud"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumFraud
    | -- | Represents the JSON value @"hard"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumHard
    | -- | Represents the JSON value @"invalid"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumInvalid
    | -- | Represents the JSON value @"not_enabled"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_enabled
    | -- | Represents the JSON value @"not_supported"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_supported
    | -- | Represents the JSON value @"recurly"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumRecurly
    | -- | Represents the JSON value @"referral"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumReferral
    | -- | Represents the JSON value @"skles"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumSkles
    | -- | Represents the JSON value @"soft"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumSoft
    | -- | Represents the JSON value @"unknown"@
      ErrorMayHaveTransactionTransaction_errorCategoryEnumUnknown
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionTransaction_errorCategory where
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryOther val) = val
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_required) = "three_d_secure_required"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_action_required) = "three_d_secure_action_required"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumAmazon) = "amazon"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumApi_error) = "api_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumApproved) = "approved"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumCommunication) = "communication"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumConfiguration) = "configuration"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumDuplicate) = "duplicate"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumFraud) = "fraud"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumHard) = "hard"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumInvalid) = "invalid"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_enabled) = "not_enabled"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_supported) = "not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumRecurly) = "recurly"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumReferral) = "referral"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumSkles) = "skles"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumSoft) = "soft"
    toJSON (ErrorMayHaveTransactionTransaction_errorCategoryEnumUnknown) = "unknown"
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionTransaction_errorCategory where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "three_d_secure_required" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_required
                | val GHC.Classes.== "three_d_secure_action_required" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumThree_d_secure_action_required
                | val GHC.Classes.== "amazon" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumAmazon
                | val GHC.Classes.== "api_error" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumApi_error
                | val GHC.Classes.== "approved" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumApproved
                | val GHC.Classes.== "communication" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumCommunication
                | val GHC.Classes.== "configuration" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumConfiguration
                | val GHC.Classes.== "duplicate" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumDuplicate
                | val GHC.Classes.== "fraud" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumFraud
                | val GHC.Classes.== "hard" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumHard
                | val GHC.Classes.== "invalid" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumInvalid
                | val GHC.Classes.== "not_enabled" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_enabled
                | val GHC.Classes.== "not_supported" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumNot_supported
                | val GHC.Classes.== "recurly" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumRecurly
                | val GHC.Classes.== "referral" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumReferral
                | val GHC.Classes.== "skles" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumSkles
                | val GHC.Classes.== "soft" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumSoft
                | val GHC.Classes.== "unknown" -> ErrorMayHaveTransactionTransaction_errorCategoryEnumUnknown
                | GHC.Base.otherwise -> ErrorMayHaveTransactionTransaction_errorCategoryOther val
            )

-- | Defines the enum schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.transaction_error.properties.code@ in the specification.
data ErrorMayHaveTransactionTransaction_errorCode
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ErrorMayHaveTransactionTransaction_errorCodeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ErrorMayHaveTransactionTransaction_errorCodeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"ach_cancel"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_cancel
    | -- | Represents the JSON value @"ach_chargeback"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_chargeback
    | -- | Represents the JSON value @"ach_credit_return"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_credit_return
    | -- | Represents the JSON value @"ach_exception"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_exception
    | -- | Represents the JSON value @"ach_return"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_return
    | -- | Represents the JSON value @"ach_transactions_not_supported"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_transactions_not_supported
    | -- | Represents the JSON value @"ach_validation_exception"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAch_validation_exception
    | -- | Represents the JSON value @"amazon_amount_exceeded"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_amount_exceeded
    | -- | Represents the JSON value @"amazon_declined_review"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_declined_review
    | -- | Represents the JSON value @"amazon_invalid_authorization_status"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_authorization_status
    | -- | Represents the JSON value @"amazon_invalid_close_attempt"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_close_attempt
    | -- | Represents the JSON value @"amazon_invalid_create_order_reference"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_create_order_reference
    | -- | Represents the JSON value @"amazon_invalid_order_status"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_order_status
    | -- | Represents the JSON value @"amazon_not_authorized"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_not_authorized
    | -- | Represents the JSON value @"amazon_order_not_modifiable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_order_not_modifiable
    | -- | Represents the JSON value @"amazon_transaction_count_exceeded"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_transaction_count_exceeded
    | -- | Represents the JSON value @"api_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumApi_error
    | -- | Represents the JSON value @"approved"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumApproved
    | -- | Represents the JSON value @"approved_fraud_review"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumApproved_fraud_review
    | -- | Represents the JSON value @"authorization_already_captured"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_already_captured
    | -- | Represents the JSON value @"authorization_amount_depleted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_amount_depleted
    | -- | Represents the JSON value @"authorization_expired"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_expired
    | -- | Represents the JSON value @"batch_processing_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumBatch_processing_error
    | -- | Represents the JSON value @"billing_agreement_already_accepted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_already_accepted
    | -- | Represents the JSON value @"billing_agreement_not_accepted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_accepted
    | -- | Represents the JSON value @"billing_agreement_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_found
    | -- | Represents the JSON value @"billing_agreement_replaced"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_replaced
    | -- | Represents the JSON value @"call_issuer"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer
    | -- | Represents the JSON value @"call_issuer_update_cardholder_data"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer_update_cardholder_data
    | -- | Represents the JSON value @"cancelled"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCancelled
    | -- | Represents the JSON value @"cannot_refund_unsettled_transactions"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCannot_refund_unsettled_transactions
    | -- | Represents the JSON value @"card_not_activated"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCard_not_activated
    | -- | Represents the JSON value @"card_type_not_accepted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCard_type_not_accepted
    | -- | Represents the JSON value @"cardholder_requested_stop"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCardholder_requested_stop
    | -- | Represents the JSON value @"contact_gateway"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumContact_gateway
    | -- | Represents the JSON value @"contract_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumContract_not_found
    | -- | Represents the JSON value @"currency_not_supported"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCurrency_not_supported
    | -- | Represents the JSON value @"customer_canceled_transaction"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCustomer_canceled_transaction
    | -- | Represents the JSON value @"cvv_required"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumCvv_required
    | -- | Represents the JSON value @"declined"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined
    | -- | Represents the JSON value @"declined_card_number"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_card_number
    | -- | Represents the JSON value @"declined_exception"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_exception
    | -- | Represents the JSON value @"declined_expiration_date"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_expiration_date
    | -- | Represents the JSON value @"declined_missing_data"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_missing_data
    | -- | Represents the JSON value @"declined_saveable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_saveable
    | -- | Represents the JSON value @"declined_security_code"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_security_code
    | -- | Represents the JSON value @"deposit_referenced_chargeback"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDeposit_referenced_chargeback
    | -- | Represents the JSON value @"direct_debit_type_not_accepted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDirect_debit_type_not_accepted
    | -- | Represents the JSON value @"duplicate_transaction"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumDuplicate_transaction
    | -- | Represents the JSON value @"exceeds_daily_limit"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_daily_limit
    | -- | Represents the JSON value @"exceeds_max_amount"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_max_amount
    | -- | Represents the JSON value @"expired_card"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumExpired_card
    | -- | Represents the JSON value @"finbot_disconnect"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_disconnect
    | -- | Represents the JSON value @"finbot_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_unavailable
    | -- | Represents the JSON value @"fraud_address"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address
    | -- | Represents the JSON value @"fraud_address_recurly"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address_recurly
    | -- | Represents the JSON value @"fraud_advanced_verification"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_advanced_verification
    | -- | Represents the JSON value @"fraud_gateway"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_gateway
    | -- | Represents the JSON value @"fraud_generic"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_generic
    | -- | Represents the JSON value @"fraud_ip_address"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_ip_address
    | -- | Represents the JSON value @"fraud_manual_decision"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_manual_decision
    | -- | Represents the JSON value @"fraud_risk_check"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_risk_check
    | -- | Represents the JSON value @"fraud_security_code"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_security_code
    | -- | Represents the JSON value @"fraud_stolen_card"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_stolen_card
    | -- | Represents the JSON value @"fraud_too_many_attempts"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_too_many_attempts
    | -- | Represents the JSON value @"fraud_velocity"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_velocity
    | -- | Represents the JSON value @"gateway_account_setup_incomplete"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_account_setup_incomplete
    | -- | Represents the JSON value @"gateway_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_error
    | -- | Represents the JSON value @"gateway_rate_limited"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_rate_limited
    | -- | Represents the JSON value @"gateway_timeout"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_timeout
    | -- | Represents the JSON value @"gateway_token_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_token_not_found
    | -- | Represents the JSON value @"gateway_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_unavailable
    | -- | Represents the JSON value @"gateway_validation_exception"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_validation_exception
    | -- | Represents the JSON value @"insufficient_funds"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInsufficient_funds
    | -- | Represents the JSON value @"invalid_account_number"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_account_number
    | -- | Represents the JSON value @"invalid_amount"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_amount
    | -- | Represents the JSON value @"invalid_billing_agreement_status"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_billing_agreement_status
    | -- | Represents the JSON value @"invalid_card_number"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_card_number
    | -- | Represents the JSON value @"invalid_data"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_data
    | -- | Represents the JSON value @"invalid_email"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_email
    | -- | Represents the JSON value @"invalid_gateway_access_token"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_access_token
    | -- | Represents the JSON value @"invalid_gateway_configuration"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_configuration
    | -- | Represents the JSON value @"invalid_issuer"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_issuer
    | -- | Represents the JSON value @"invalid_login"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_login
    | -- | Represents the JSON value @"invalid_merchant_type"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_merchant_type
    | -- | Represents the JSON value @"invalid_name"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_name
    | -- | Represents the JSON value @"invalid_payment_method"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method
    | -- | Represents the JSON value @"invalid_payment_method_hard"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method_hard
    | -- | Represents the JSON value @"invalid_transaction"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_transaction
    | -- | Represents the JSON value @"issuer_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumIssuer_unavailable
    | -- | Represents the JSON value @"lifecycle_decline"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumLifecycle_decline
    | -- | Represents the JSON value @"merch_max_transaction_limit_exceeded"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumMerch_max_transaction_limit_exceeded
    | -- | Represents the JSON value @"moneybot_disconnect"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_disconnect
    | -- | Represents the JSON value @"moneybot_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_unavailable
    | -- | Represents the JSON value @"no_billing_information"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumNo_billing_information
    | -- | Represents the JSON value @"no_gateway"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway
    | -- | Represents the JSON value @"no_gateway_found_for_transaction_amount"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway_found_for_transaction_amount
    | -- | Represents the JSON value @"partial_approval"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_approval
    | -- | Represents the JSON value @"partial_credits_not_supported"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_credits_not_supported
    | -- | Represents the JSON value @"payer_authentication_rejected"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPayer_authentication_rejected
    | -- | Represents the JSON value @"payment_cannot_void_authorization"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_cannot_void_authorization
    | -- | Represents the JSON value @"payment_not_accepted"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_not_accepted
    | -- | Represents the JSON value @"paypal_account_issue"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_account_issue
    | -- | Represents the JSON value @"paypal_cannot_pay_self"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_cannot_pay_self
    | -- | Represents the JSON value @"paypal_declined_use_alternate"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_declined_use_alternate
    | -- | Represents the JSON value @"paypal_expired_reference_id"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_expired_reference_id
    | -- | Represents the JSON value @"paypal_hard_decline"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_hard_decline
    | -- | Represents the JSON value @"paypal_invalid_billing_agreement"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_invalid_billing_agreement
    | -- | Represents the JSON value @"paypal_primary_declined"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_primary_declined
    | -- | Represents the JSON value @"processor_not_available"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_not_available
    | -- | Represents the JSON value @"processor_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_unavailable
    | -- | Represents the JSON value @"recurly_credentials_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_credentials_not_found
    | -- | Represents the JSON value @"recurly_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_error
    | -- | Represents the JSON value @"recurly_failed_to_get_token"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_failed_to_get_token
    | -- | Represents the JSON value @"recurly_token_mismatch"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_mismatch
    | -- | Represents the JSON value @"recurly_token_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_not_found
    | -- | Represents the JSON value @"reference_transactions_not_enabled"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumReference_transactions_not_enabled
    | -- | Represents the JSON value @"restricted_card"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card
    | -- | Represents the JSON value @"restricted_card_chargeback"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card_chargeback
    | -- | Represents the JSON value @"rjs_token_expired"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRjs_token_expired
    | -- | Represents the JSON value @"roku_invalid_card_number"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_card_number
    | -- | Represents the JSON value @"roku_invalid_cib"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_cib
    | -- | Represents the JSON value @"roku_invalid_payment_method"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_payment_method
    | -- | Represents the JSON value @"roku_zip_code_mismatch"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_zip_code_mismatch
    | -- | Represents the JSON value @"simultaneous"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumSimultaneous
    | -- | Represents the JSON value @"ssl_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumSsl_error
    | -- | Represents the JSON value @"temporary_hold"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTemporary_hold
    | -- | Represents the JSON value @"three_d_secure_action_required"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_required
    | -- | Represents the JSON value @"three_d_secure_action_result_token_mismatch"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_result_token_mismatch
    | -- | Represents the JSON value @"three_d_secure_authentication"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_authentication
    | -- | Represents the JSON value @"three_d_secure_connection_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_connection_error
    | -- | Represents the JSON value @"three_d_secure_credential_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_credential_error
    | -- | Represents the JSON value @"three_d_secure_not_supported"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_not_supported
    | -- | Represents the JSON value @"too_busy"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumToo_busy
    | -- | Represents the JSON value @"too_many_attempts"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumToo_many_attempts
    | -- | Represents the JSON value @"total_credit_exceeds_capture"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTotal_credit_exceeds_capture
    | -- | Represents the JSON value @"transaction_already_refunded"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_refunded
    | -- | Represents the JSON value @"transaction_already_voided"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_voided
    | -- | Represents the JSON value @"transaction_cannot_be_authorized"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_authorized
    | -- | Represents the JSON value @"transaction_cannot_be_refunded"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded
    | -- | Represents the JSON value @"transaction_cannot_be_refunded_currently"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded_currently
    | -- | Represents the JSON value @"transaction_cannot_be_voided"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_voided
    | -- | Represents the JSON value @"transaction_failed_to_settle"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_failed_to_settle
    | -- | Represents the JSON value @"transaction_not_found"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_not_found
    | -- | Represents the JSON value @"transaction_service_v2_disconnect"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_disconnect
    | -- | Represents the JSON value @"transaction_service_v2_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_unavailable
    | -- | Represents the JSON value @"transaction_settled"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_settled
    | -- | Represents the JSON value @"transaction_stale_at_gateway"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_stale_at_gateway
    | -- | Represents the JSON value @"try_again"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumTry_again
    | -- | Represents the JSON value @"unknown"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumUnknown
    | -- | Represents the JSON value @"unmapped_partner_error"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumUnmapped_partner_error
    | -- | Represents the JSON value @"vaultly_service_unavailable"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumVaultly_service_unavailable
    | -- | Represents the JSON value @"zero_dollar_auth_not_supported"@
      ErrorMayHaveTransactionTransaction_errorCodeEnumZero_dollar_auth_not_supported
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionTransaction_errorCode where
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeOther val) = val
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_cancel) = "ach_cancel"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_chargeback) = "ach_chargeback"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_credit_return) = "ach_credit_return"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_exception) = "ach_exception"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_return) = "ach_return"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_transactions_not_supported) = "ach_transactions_not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAch_validation_exception) = "ach_validation_exception"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_amount_exceeded) = "amazon_amount_exceeded"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_declined_review) = "amazon_declined_review"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_authorization_status) = "amazon_invalid_authorization_status"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_close_attempt) = "amazon_invalid_close_attempt"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_create_order_reference) = "amazon_invalid_create_order_reference"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_order_status) = "amazon_invalid_order_status"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_not_authorized) = "amazon_not_authorized"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_order_not_modifiable) = "amazon_order_not_modifiable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_transaction_count_exceeded) = "amazon_transaction_count_exceeded"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumApi_error) = "api_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumApproved) = "approved"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumApproved_fraud_review) = "approved_fraud_review"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_already_captured) = "authorization_already_captured"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_amount_depleted) = "authorization_amount_depleted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_expired) = "authorization_expired"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumBatch_processing_error) = "batch_processing_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_already_accepted) = "billing_agreement_already_accepted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_accepted) = "billing_agreement_not_accepted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_found) = "billing_agreement_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_replaced) = "billing_agreement_replaced"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer) = "call_issuer"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer_update_cardholder_data) = "call_issuer_update_cardholder_data"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCancelled) = "cancelled"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCannot_refund_unsettled_transactions) = "cannot_refund_unsettled_transactions"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCard_not_activated) = "card_not_activated"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCard_type_not_accepted) = "card_type_not_accepted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCardholder_requested_stop) = "cardholder_requested_stop"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumContact_gateway) = "contact_gateway"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumContract_not_found) = "contract_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCurrency_not_supported) = "currency_not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCustomer_canceled_transaction) = "customer_canceled_transaction"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumCvv_required) = "cvv_required"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined) = "declined"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_card_number) = "declined_card_number"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_exception) = "declined_exception"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_expiration_date) = "declined_expiration_date"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_missing_data) = "declined_missing_data"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_saveable) = "declined_saveable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_security_code) = "declined_security_code"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDeposit_referenced_chargeback) = "deposit_referenced_chargeback"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDirect_debit_type_not_accepted) = "direct_debit_type_not_accepted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumDuplicate_transaction) = "duplicate_transaction"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_daily_limit) = "exceeds_daily_limit"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_max_amount) = "exceeds_max_amount"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumExpired_card) = "expired_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_disconnect) = "finbot_disconnect"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_unavailable) = "finbot_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address) = "fraud_address"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address_recurly) = "fraud_address_recurly"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_advanced_verification) = "fraud_advanced_verification"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_gateway) = "fraud_gateway"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_generic) = "fraud_generic"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_ip_address) = "fraud_ip_address"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_manual_decision) = "fraud_manual_decision"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_risk_check) = "fraud_risk_check"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_security_code) = "fraud_security_code"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_stolen_card) = "fraud_stolen_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_too_many_attempts) = "fraud_too_many_attempts"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_velocity) = "fraud_velocity"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_account_setup_incomplete) = "gateway_account_setup_incomplete"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_error) = "gateway_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_rate_limited) = "gateway_rate_limited"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_timeout) = "gateway_timeout"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_token_not_found) = "gateway_token_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_unavailable) = "gateway_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_validation_exception) = "gateway_validation_exception"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInsufficient_funds) = "insufficient_funds"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_account_number) = "invalid_account_number"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_amount) = "invalid_amount"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_billing_agreement_status) = "invalid_billing_agreement_status"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_card_number) = "invalid_card_number"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_data) = "invalid_data"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_email) = "invalid_email"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_access_token) = "invalid_gateway_access_token"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_configuration) = "invalid_gateway_configuration"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_issuer) = "invalid_issuer"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_login) = "invalid_login"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_merchant_type) = "invalid_merchant_type"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_name) = "invalid_name"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method) = "invalid_payment_method"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method_hard) = "invalid_payment_method_hard"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_transaction) = "invalid_transaction"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumIssuer_unavailable) = "issuer_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumLifecycle_decline) = "lifecycle_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumMerch_max_transaction_limit_exceeded) = "merch_max_transaction_limit_exceeded"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_disconnect) = "moneybot_disconnect"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_unavailable) = "moneybot_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumNo_billing_information) = "no_billing_information"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway) = "no_gateway"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway_found_for_transaction_amount) = "no_gateway_found_for_transaction_amount"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_approval) = "partial_approval"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_credits_not_supported) = "partial_credits_not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPayer_authentication_rejected) = "payer_authentication_rejected"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_cannot_void_authorization) = "payment_cannot_void_authorization"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_not_accepted) = "payment_not_accepted"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_account_issue) = "paypal_account_issue"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_cannot_pay_self) = "paypal_cannot_pay_self"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_declined_use_alternate) = "paypal_declined_use_alternate"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_expired_reference_id) = "paypal_expired_reference_id"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_hard_decline) = "paypal_hard_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_invalid_billing_agreement) = "paypal_invalid_billing_agreement"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_primary_declined) = "paypal_primary_declined"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_not_available) = "processor_not_available"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_unavailable) = "processor_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_credentials_not_found) = "recurly_credentials_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_error) = "recurly_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_failed_to_get_token) = "recurly_failed_to_get_token"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_mismatch) = "recurly_token_mismatch"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_not_found) = "recurly_token_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumReference_transactions_not_enabled) = "reference_transactions_not_enabled"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card) = "restricted_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card_chargeback) = "restricted_card_chargeback"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRjs_token_expired) = "rjs_token_expired"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_card_number) = "roku_invalid_card_number"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_cib) = "roku_invalid_cib"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_payment_method) = "roku_invalid_payment_method"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_zip_code_mismatch) = "roku_zip_code_mismatch"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumSimultaneous) = "simultaneous"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumSsl_error) = "ssl_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTemporary_hold) = "temporary_hold"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_required) = "three_d_secure_action_required"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_result_token_mismatch) = "three_d_secure_action_result_token_mismatch"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_authentication) = "three_d_secure_authentication"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_connection_error) = "three_d_secure_connection_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_credential_error) = "three_d_secure_credential_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_not_supported) = "three_d_secure_not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumToo_busy) = "too_busy"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumToo_many_attempts) = "too_many_attempts"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTotal_credit_exceeds_capture) = "total_credit_exceeds_capture"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_refunded) = "transaction_already_refunded"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_voided) = "transaction_already_voided"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_authorized) = "transaction_cannot_be_authorized"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded) = "transaction_cannot_be_refunded"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded_currently) = "transaction_cannot_be_refunded_currently"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_voided) = "transaction_cannot_be_voided"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_failed_to_settle) = "transaction_failed_to_settle"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_not_found) = "transaction_not_found"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_disconnect) = "transaction_service_v2_disconnect"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_unavailable) = "transaction_service_v2_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_settled) = "transaction_settled"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_stale_at_gateway) = "transaction_stale_at_gateway"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumTry_again) = "try_again"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumUnknown) = "unknown"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumUnmapped_partner_error) = "unmapped_partner_error"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumVaultly_service_unavailable) = "vaultly_service_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorCodeEnumZero_dollar_auth_not_supported) = "zero_dollar_auth_not_supported"
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionTransaction_errorCode where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "ach_cancel" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_cancel
                | val GHC.Classes.== "ach_chargeback" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_chargeback
                | val GHC.Classes.== "ach_credit_return" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_credit_return
                | val GHC.Classes.== "ach_exception" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_exception
                | val GHC.Classes.== "ach_return" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_return
                | val GHC.Classes.== "ach_transactions_not_supported" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_transactions_not_supported
                | val GHC.Classes.== "ach_validation_exception" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAch_validation_exception
                | val GHC.Classes.== "amazon_amount_exceeded" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_amount_exceeded
                | val GHC.Classes.== "amazon_declined_review" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_declined_review
                | val GHC.Classes.== "amazon_invalid_authorization_status" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_authorization_status
                | val GHC.Classes.== "amazon_invalid_close_attempt" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_close_attempt
                | val GHC.Classes.== "amazon_invalid_create_order_reference" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_create_order_reference
                | val GHC.Classes.== "amazon_invalid_order_status" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_invalid_order_status
                | val GHC.Classes.== "amazon_not_authorized" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_not_authorized
                | val GHC.Classes.== "amazon_order_not_modifiable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_order_not_modifiable
                | val GHC.Classes.== "amazon_transaction_count_exceeded" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAmazon_transaction_count_exceeded
                | val GHC.Classes.== "api_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumApi_error
                | val GHC.Classes.== "approved" -> ErrorMayHaveTransactionTransaction_errorCodeEnumApproved
                | val GHC.Classes.== "approved_fraud_review" -> ErrorMayHaveTransactionTransaction_errorCodeEnumApproved_fraud_review
                | val GHC.Classes.== "authorization_already_captured" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_already_captured
                | val GHC.Classes.== "authorization_amount_depleted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_amount_depleted
                | val GHC.Classes.== "authorization_expired" -> ErrorMayHaveTransactionTransaction_errorCodeEnumAuthorization_expired
                | val GHC.Classes.== "batch_processing_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumBatch_processing_error
                | val GHC.Classes.== "billing_agreement_already_accepted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_already_accepted
                | val GHC.Classes.== "billing_agreement_not_accepted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_accepted
                | val GHC.Classes.== "billing_agreement_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_not_found
                | val GHC.Classes.== "billing_agreement_replaced" -> ErrorMayHaveTransactionTransaction_errorCodeEnumBilling_agreement_replaced
                | val GHC.Classes.== "call_issuer" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer
                | val GHC.Classes.== "call_issuer_update_cardholder_data" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCall_issuer_update_cardholder_data
                | val GHC.Classes.== "cancelled" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCancelled
                | val GHC.Classes.== "cannot_refund_unsettled_transactions" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCannot_refund_unsettled_transactions
                | val GHC.Classes.== "card_not_activated" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCard_not_activated
                | val GHC.Classes.== "card_type_not_accepted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCard_type_not_accepted
                | val GHC.Classes.== "cardholder_requested_stop" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCardholder_requested_stop
                | val GHC.Classes.== "contact_gateway" -> ErrorMayHaveTransactionTransaction_errorCodeEnumContact_gateway
                | val GHC.Classes.== "contract_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumContract_not_found
                | val GHC.Classes.== "currency_not_supported" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCurrency_not_supported
                | val GHC.Classes.== "customer_canceled_transaction" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCustomer_canceled_transaction
                | val GHC.Classes.== "cvv_required" -> ErrorMayHaveTransactionTransaction_errorCodeEnumCvv_required
                | val GHC.Classes.== "declined" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined
                | val GHC.Classes.== "declined_card_number" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_card_number
                | val GHC.Classes.== "declined_exception" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_exception
                | val GHC.Classes.== "declined_expiration_date" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_expiration_date
                | val GHC.Classes.== "declined_missing_data" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_missing_data
                | val GHC.Classes.== "declined_saveable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_saveable
                | val GHC.Classes.== "declined_security_code" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeclined_security_code
                | val GHC.Classes.== "deposit_referenced_chargeback" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDeposit_referenced_chargeback
                | val GHC.Classes.== "direct_debit_type_not_accepted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDirect_debit_type_not_accepted
                | val GHC.Classes.== "duplicate_transaction" -> ErrorMayHaveTransactionTransaction_errorCodeEnumDuplicate_transaction
                | val GHC.Classes.== "exceeds_daily_limit" -> ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_daily_limit
                | val GHC.Classes.== "exceeds_max_amount" -> ErrorMayHaveTransactionTransaction_errorCodeEnumExceeds_max_amount
                | val GHC.Classes.== "expired_card" -> ErrorMayHaveTransactionTransaction_errorCodeEnumExpired_card
                | val GHC.Classes.== "finbot_disconnect" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_disconnect
                | val GHC.Classes.== "finbot_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFinbot_unavailable
                | val GHC.Classes.== "fraud_address" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address
                | val GHC.Classes.== "fraud_address_recurly" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_address_recurly
                | val GHC.Classes.== "fraud_advanced_verification" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_advanced_verification
                | val GHC.Classes.== "fraud_gateway" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_gateway
                | val GHC.Classes.== "fraud_generic" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_generic
                | val GHC.Classes.== "fraud_ip_address" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_ip_address
                | val GHC.Classes.== "fraud_manual_decision" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_manual_decision
                | val GHC.Classes.== "fraud_risk_check" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_risk_check
                | val GHC.Classes.== "fraud_security_code" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_security_code
                | val GHC.Classes.== "fraud_stolen_card" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_stolen_card
                | val GHC.Classes.== "fraud_too_many_attempts" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_too_many_attempts
                | val GHC.Classes.== "fraud_velocity" -> ErrorMayHaveTransactionTransaction_errorCodeEnumFraud_velocity
                | val GHC.Classes.== "gateway_account_setup_incomplete" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_account_setup_incomplete
                | val GHC.Classes.== "gateway_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_error
                | val GHC.Classes.== "gateway_rate_limited" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_rate_limited
                | val GHC.Classes.== "gateway_timeout" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_timeout
                | val GHC.Classes.== "gateway_token_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_token_not_found
                | val GHC.Classes.== "gateway_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_unavailable
                | val GHC.Classes.== "gateway_validation_exception" -> ErrorMayHaveTransactionTransaction_errorCodeEnumGateway_validation_exception
                | val GHC.Classes.== "insufficient_funds" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInsufficient_funds
                | val GHC.Classes.== "invalid_account_number" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_account_number
                | val GHC.Classes.== "invalid_amount" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_amount
                | val GHC.Classes.== "invalid_billing_agreement_status" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_billing_agreement_status
                | val GHC.Classes.== "invalid_card_number" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_card_number
                | val GHC.Classes.== "invalid_data" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_data
                | val GHC.Classes.== "invalid_email" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_email
                | val GHC.Classes.== "invalid_gateway_access_token" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_access_token
                | val GHC.Classes.== "invalid_gateway_configuration" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_gateway_configuration
                | val GHC.Classes.== "invalid_issuer" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_issuer
                | val GHC.Classes.== "invalid_login" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_login
                | val GHC.Classes.== "invalid_merchant_type" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_merchant_type
                | val GHC.Classes.== "invalid_name" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_name
                | val GHC.Classes.== "invalid_payment_method" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method
                | val GHC.Classes.== "invalid_payment_method_hard" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_payment_method_hard
                | val GHC.Classes.== "invalid_transaction" -> ErrorMayHaveTransactionTransaction_errorCodeEnumInvalid_transaction
                | val GHC.Classes.== "issuer_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumIssuer_unavailable
                | val GHC.Classes.== "lifecycle_decline" -> ErrorMayHaveTransactionTransaction_errorCodeEnumLifecycle_decline
                | val GHC.Classes.== "merch_max_transaction_limit_exceeded" -> ErrorMayHaveTransactionTransaction_errorCodeEnumMerch_max_transaction_limit_exceeded
                | val GHC.Classes.== "moneybot_disconnect" -> ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_disconnect
                | val GHC.Classes.== "moneybot_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumMoneybot_unavailable
                | val GHC.Classes.== "no_billing_information" -> ErrorMayHaveTransactionTransaction_errorCodeEnumNo_billing_information
                | val GHC.Classes.== "no_gateway" -> ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway
                | val GHC.Classes.== "no_gateway_found_for_transaction_amount" -> ErrorMayHaveTransactionTransaction_errorCodeEnumNo_gateway_found_for_transaction_amount
                | val GHC.Classes.== "partial_approval" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_approval
                | val GHC.Classes.== "partial_credits_not_supported" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPartial_credits_not_supported
                | val GHC.Classes.== "payer_authentication_rejected" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPayer_authentication_rejected
                | val GHC.Classes.== "payment_cannot_void_authorization" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_cannot_void_authorization
                | val GHC.Classes.== "payment_not_accepted" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPayment_not_accepted
                | val GHC.Classes.== "paypal_account_issue" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_account_issue
                | val GHC.Classes.== "paypal_cannot_pay_self" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_cannot_pay_self
                | val GHC.Classes.== "paypal_declined_use_alternate" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_declined_use_alternate
                | val GHC.Classes.== "paypal_expired_reference_id" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_expired_reference_id
                | val GHC.Classes.== "paypal_hard_decline" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_hard_decline
                | val GHC.Classes.== "paypal_invalid_billing_agreement" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_invalid_billing_agreement
                | val GHC.Classes.== "paypal_primary_declined" -> ErrorMayHaveTransactionTransaction_errorCodeEnumPaypal_primary_declined
                | val GHC.Classes.== "processor_not_available" -> ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_not_available
                | val GHC.Classes.== "processor_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumProcessor_unavailable
                | val GHC.Classes.== "recurly_credentials_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_credentials_not_found
                | val GHC.Classes.== "recurly_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_error
                | val GHC.Classes.== "recurly_failed_to_get_token" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_failed_to_get_token
                | val GHC.Classes.== "recurly_token_mismatch" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_mismatch
                | val GHC.Classes.== "recurly_token_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRecurly_token_not_found
                | val GHC.Classes.== "reference_transactions_not_enabled" -> ErrorMayHaveTransactionTransaction_errorCodeEnumReference_transactions_not_enabled
                | val GHC.Classes.== "restricted_card" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card
                | val GHC.Classes.== "restricted_card_chargeback" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRestricted_card_chargeback
                | val GHC.Classes.== "rjs_token_expired" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRjs_token_expired
                | val GHC.Classes.== "roku_invalid_card_number" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_card_number
                | val GHC.Classes.== "roku_invalid_cib" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_cib
                | val GHC.Classes.== "roku_invalid_payment_method" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_invalid_payment_method
                | val GHC.Classes.== "roku_zip_code_mismatch" -> ErrorMayHaveTransactionTransaction_errorCodeEnumRoku_zip_code_mismatch
                | val GHC.Classes.== "simultaneous" -> ErrorMayHaveTransactionTransaction_errorCodeEnumSimultaneous
                | val GHC.Classes.== "ssl_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumSsl_error
                | val GHC.Classes.== "temporary_hold" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTemporary_hold
                | val GHC.Classes.== "three_d_secure_action_required" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_required
                | val GHC.Classes.== "three_d_secure_action_result_token_mismatch" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_action_result_token_mismatch
                | val GHC.Classes.== "three_d_secure_authentication" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_authentication
                | val GHC.Classes.== "three_d_secure_connection_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_connection_error
                | val GHC.Classes.== "three_d_secure_credential_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_credential_error
                | val GHC.Classes.== "three_d_secure_not_supported" -> ErrorMayHaveTransactionTransaction_errorCodeEnumThree_d_secure_not_supported
                | val GHC.Classes.== "too_busy" -> ErrorMayHaveTransactionTransaction_errorCodeEnumToo_busy
                | val GHC.Classes.== "too_many_attempts" -> ErrorMayHaveTransactionTransaction_errorCodeEnumToo_many_attempts
                | val GHC.Classes.== "total_credit_exceeds_capture" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTotal_credit_exceeds_capture
                | val GHC.Classes.== "transaction_already_refunded" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_refunded
                | val GHC.Classes.== "transaction_already_voided" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_already_voided
                | val GHC.Classes.== "transaction_cannot_be_authorized" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_authorized
                | val GHC.Classes.== "transaction_cannot_be_refunded" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded
                | val GHC.Classes.== "transaction_cannot_be_refunded_currently" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_refunded_currently
                | val GHC.Classes.== "transaction_cannot_be_voided" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_cannot_be_voided
                | val GHC.Classes.== "transaction_failed_to_settle" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_failed_to_settle
                | val GHC.Classes.== "transaction_not_found" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_not_found
                | val GHC.Classes.== "transaction_service_v2_disconnect" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_disconnect
                | val GHC.Classes.== "transaction_service_v2_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_service_v2_unavailable
                | val GHC.Classes.== "transaction_settled" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_settled
                | val GHC.Classes.== "transaction_stale_at_gateway" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTransaction_stale_at_gateway
                | val GHC.Classes.== "try_again" -> ErrorMayHaveTransactionTransaction_errorCodeEnumTry_again
                | val GHC.Classes.== "unknown" -> ErrorMayHaveTransactionTransaction_errorCodeEnumUnknown
                | val GHC.Classes.== "unmapped_partner_error" -> ErrorMayHaveTransactionTransaction_errorCodeEnumUnmapped_partner_error
                | val GHC.Classes.== "vaultly_service_unavailable" -> ErrorMayHaveTransactionTransaction_errorCodeEnumVaultly_service_unavailable
                | val GHC.Classes.== "zero_dollar_auth_not_supported" -> ErrorMayHaveTransactionTransaction_errorCodeEnumZero_dollar_auth_not_supported
                | GHC.Base.otherwise -> ErrorMayHaveTransactionTransaction_errorCodeOther val
            )

-- | Defines the enum schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.transaction_error.properties.decline_code@ in the specification.
data ErrorMayHaveTransactionTransaction_errorDecline_code
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ErrorMayHaveTransactionTransaction_errorDecline_codeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ErrorMayHaveTransactionTransaction_errorDecline_codeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"account_closed"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumAccount_closed
    | -- | Represents the JSON value @"call_issuer"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCall_issuer
    | -- | Represents the JSON value @"card_not_activated"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_activated
    | -- | Represents the JSON value @"card_not_supported"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_supported
    | -- | Represents the JSON value @"cardholder_requested_stop"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCardholder_requested_stop
    | -- | Represents the JSON value @"do_not_honor"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_honor
    | -- | Represents the JSON value @"do_not_try_again"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_try_again
    | -- | Represents the JSON value @"exceeds_daily_limit"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExceeds_daily_limit
    | -- | Represents the JSON value @"generic_decline"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumGeneric_decline
    | -- | Represents the JSON value @"expired_card"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExpired_card
    | -- | Represents the JSON value @"fraudulent"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumFraudulent
    | -- | Represents the JSON value @"insufficient_funds"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInsufficient_funds
    | -- | Represents the JSON value @"incorrect_address"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_address
    | -- | Represents the JSON value @"incorrect_security_code"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_security_code
    | -- | Represents the JSON value @"invalid_amount"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_amount
    | -- | Represents the JSON value @"invalid_number"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_number
    | -- | Represents the JSON value @"invalid_transaction"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_transaction
    | -- | Represents the JSON value @"issuer_unavailable"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIssuer_unavailable
    | -- | Represents the JSON value @"lifecycle_decline"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLifecycle_decline
    | -- | Represents the JSON value @"lost_card"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLost_card
    | -- | Represents the JSON value @"pickup_card"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPickup_card
    | -- | Represents the JSON value @"policy_decline"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPolicy_decline
    | -- | Represents the JSON value @"restricted_card"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card
    | -- | Represents the JSON value @"restricted_card_chargeback"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card_chargeback
    | -- | Represents the JSON value @"security_decline"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumSecurity_decline
    | -- | Represents the JSON value @"stolen_card"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumStolen_card
    | -- | Represents the JSON value @"try_again"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumTry_again
    | -- | Represents the JSON value @"update_cardholder_data"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumUpdate_cardholder_data
    | -- | Represents the JSON value @"requires_3d_secure"@
      ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRequires_3d_secure
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionTransaction_errorDecline_code where
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeOther val) = val
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumAccount_closed) = "account_closed"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCall_issuer) = "call_issuer"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_activated) = "card_not_activated"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_supported) = "card_not_supported"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCardholder_requested_stop) = "cardholder_requested_stop"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_honor) = "do_not_honor"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_try_again) = "do_not_try_again"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExceeds_daily_limit) = "exceeds_daily_limit"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumGeneric_decline) = "generic_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExpired_card) = "expired_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumFraudulent) = "fraudulent"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInsufficient_funds) = "insufficient_funds"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_address) = "incorrect_address"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_security_code) = "incorrect_security_code"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_amount) = "invalid_amount"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_number) = "invalid_number"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_transaction) = "invalid_transaction"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIssuer_unavailable) = "issuer_unavailable"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLifecycle_decline) = "lifecycle_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLost_card) = "lost_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPickup_card) = "pickup_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPolicy_decline) = "policy_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card) = "restricted_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card_chargeback) = "restricted_card_chargeback"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumSecurity_decline) = "security_decline"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumStolen_card) = "stolen_card"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumTry_again) = "try_again"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumUpdate_cardholder_data) = "update_cardholder_data"
    toJSON (ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRequires_3d_secure) = "requires_3d_secure"
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionTransaction_errorDecline_code where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "account_closed" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumAccount_closed
                | val GHC.Classes.== "call_issuer" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCall_issuer
                | val GHC.Classes.== "card_not_activated" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_activated
                | val GHC.Classes.== "card_not_supported" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCard_not_supported
                | val GHC.Classes.== "cardholder_requested_stop" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumCardholder_requested_stop
                | val GHC.Classes.== "do_not_honor" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_honor
                | val GHC.Classes.== "do_not_try_again" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumDo_not_try_again
                | val GHC.Classes.== "exceeds_daily_limit" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExceeds_daily_limit
                | val GHC.Classes.== "generic_decline" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumGeneric_decline
                | val GHC.Classes.== "expired_card" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumExpired_card
                | val GHC.Classes.== "fraudulent" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumFraudulent
                | val GHC.Classes.== "insufficient_funds" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInsufficient_funds
                | val GHC.Classes.== "incorrect_address" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_address
                | val GHC.Classes.== "incorrect_security_code" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIncorrect_security_code
                | val GHC.Classes.== "invalid_amount" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_amount
                | val GHC.Classes.== "invalid_number" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_number
                | val GHC.Classes.== "invalid_transaction" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumInvalid_transaction
                | val GHC.Classes.== "issuer_unavailable" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumIssuer_unavailable
                | val GHC.Classes.== "lifecycle_decline" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLifecycle_decline
                | val GHC.Classes.== "lost_card" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumLost_card
                | val GHC.Classes.== "pickup_card" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPickup_card
                | val GHC.Classes.== "policy_decline" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumPolicy_decline
                | val GHC.Classes.== "restricted_card" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card
                | val GHC.Classes.== "restricted_card_chargeback" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRestricted_card_chargeback
                | val GHC.Classes.== "security_decline" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumSecurity_decline
                | val GHC.Classes.== "stolen_card" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumStolen_card
                | val GHC.Classes.== "try_again" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumTry_again
                | val GHC.Classes.== "update_cardholder_data" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumUpdate_cardholder_data
                | val GHC.Classes.== "requires_3d_secure" -> ErrorMayHaveTransactionTransaction_errorDecline_codeEnumRequires_3d_secure
                | GHC.Base.otherwise -> ErrorMayHaveTransactionTransaction_errorDecline_codeOther val
            )

-- | Defines the enum schema located at @components.schemas.ErrorMayHaveTransaction.allOf.properties.type@ in the specification.
data ErrorMayHaveTransactionType
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ErrorMayHaveTransactionTypeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ErrorMayHaveTransactionTypeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"bad_request"@
      ErrorMayHaveTransactionTypeEnumBad_request
    | -- | Represents the JSON value @"immutable_subscription"@
      ErrorMayHaveTransactionTypeEnumImmutable_subscription
    | -- | Represents the JSON value @"internal_server_error"@
      ErrorMayHaveTransactionTypeEnumInternal_server_error
    | -- | Represents the JSON value @"invalid_api_key"@
      ErrorMayHaveTransactionTypeEnumInvalid_api_key
    | -- | Represents the JSON value @"invalid_api_version"@
      ErrorMayHaveTransactionTypeEnumInvalid_api_version
    | -- | Represents the JSON value @"invalid_content_type"@
      ErrorMayHaveTransactionTypeEnumInvalid_content_type
    | -- | Represents the JSON value @"invalid_permissions"@
      ErrorMayHaveTransactionTypeEnumInvalid_permissions
    | -- | Represents the JSON value @"invalid_token"@
      ErrorMayHaveTransactionTypeEnumInvalid_token
    | -- | Represents the JSON value @"missing_feature"@
      ErrorMayHaveTransactionTypeEnumMissing_feature
    | -- | Represents the JSON value @"not_found"@
      ErrorMayHaveTransactionTypeEnumNot_found
    | -- | Represents the JSON value @"rate_limited"@
      ErrorMayHaveTransactionTypeEnumRate_limited
    | -- | Represents the JSON value @"service_not_available"@
      ErrorMayHaveTransactionTypeEnumService_not_available
    | -- | Represents the JSON value @"simultaneous_request"@
      ErrorMayHaveTransactionTypeEnumSimultaneous_request
    | -- | Represents the JSON value @"tax_service_error"@
      ErrorMayHaveTransactionTypeEnumTax_service_error
    | -- | Represents the JSON value @"transaction"@
      ErrorMayHaveTransactionTypeEnumTransaction
    | -- | Represents the JSON value @"unauthorized"@
      ErrorMayHaveTransactionTypeEnumUnauthorized
    | -- | Represents the JSON value @"unavailable_in_api_version"@
      ErrorMayHaveTransactionTypeEnumUnavailable_in_api_version
    | -- | Represents the JSON value @"unknown_api_version"@
      ErrorMayHaveTransactionTypeEnumUnknown_api_version
    | -- | Represents the JSON value @"validation"@
      ErrorMayHaveTransactionTypeEnumValidation
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ErrorMayHaveTransactionType where
    toJSON (ErrorMayHaveTransactionTypeOther val) = val
    toJSON (ErrorMayHaveTransactionTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ErrorMayHaveTransactionTypeEnumBad_request) = "bad_request"
    toJSON (ErrorMayHaveTransactionTypeEnumImmutable_subscription) = "immutable_subscription"
    toJSON (ErrorMayHaveTransactionTypeEnumInternal_server_error) = "internal_server_error"
    toJSON (ErrorMayHaveTransactionTypeEnumInvalid_api_key) = "invalid_api_key"
    toJSON (ErrorMayHaveTransactionTypeEnumInvalid_api_version) = "invalid_api_version"
    toJSON (ErrorMayHaveTransactionTypeEnumInvalid_content_type) = "invalid_content_type"
    toJSON (ErrorMayHaveTransactionTypeEnumInvalid_permissions) = "invalid_permissions"
    toJSON (ErrorMayHaveTransactionTypeEnumInvalid_token) = "invalid_token"
    toJSON (ErrorMayHaveTransactionTypeEnumMissing_feature) = "missing_feature"
    toJSON (ErrorMayHaveTransactionTypeEnumNot_found) = "not_found"
    toJSON (ErrorMayHaveTransactionTypeEnumRate_limited) = "rate_limited"
    toJSON (ErrorMayHaveTransactionTypeEnumService_not_available) = "service_not_available"
    toJSON (ErrorMayHaveTransactionTypeEnumSimultaneous_request) = "simultaneous_request"
    toJSON (ErrorMayHaveTransactionTypeEnumTax_service_error) = "tax_service_error"
    toJSON (ErrorMayHaveTransactionTypeEnumTransaction) = "transaction"
    toJSON (ErrorMayHaveTransactionTypeEnumUnauthorized) = "unauthorized"
    toJSON (ErrorMayHaveTransactionTypeEnumUnavailable_in_api_version) = "unavailable_in_api_version"
    toJSON (ErrorMayHaveTransactionTypeEnumUnknown_api_version) = "unknown_api_version"
    toJSON (ErrorMayHaveTransactionTypeEnumValidation) = "validation"
instance Data.Aeson.Types.FromJSON.FromJSON ErrorMayHaveTransactionType where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "bad_request" -> ErrorMayHaveTransactionTypeEnumBad_request
                | val GHC.Classes.== "immutable_subscription" -> ErrorMayHaveTransactionTypeEnumImmutable_subscription
                | val GHC.Classes.== "internal_server_error" -> ErrorMayHaveTransactionTypeEnumInternal_server_error
                | val GHC.Classes.== "invalid_api_key" -> ErrorMayHaveTransactionTypeEnumInvalid_api_key
                | val GHC.Classes.== "invalid_api_version" -> ErrorMayHaveTransactionTypeEnumInvalid_api_version
                | val GHC.Classes.== "invalid_content_type" -> ErrorMayHaveTransactionTypeEnumInvalid_content_type
                | val GHC.Classes.== "invalid_permissions" -> ErrorMayHaveTransactionTypeEnumInvalid_permissions
                | val GHC.Classes.== "invalid_token" -> ErrorMayHaveTransactionTypeEnumInvalid_token
                | val GHC.Classes.== "missing_feature" -> ErrorMayHaveTransactionTypeEnumMissing_feature
                | val GHC.Classes.== "not_found" -> ErrorMayHaveTransactionTypeEnumNot_found
                | val GHC.Classes.== "rate_limited" -> ErrorMayHaveTransactionTypeEnumRate_limited
                | val GHC.Classes.== "service_not_available" -> ErrorMayHaveTransactionTypeEnumService_not_available
                | val GHC.Classes.== "simultaneous_request" -> ErrorMayHaveTransactionTypeEnumSimultaneous_request
                | val GHC.Classes.== "tax_service_error" -> ErrorMayHaveTransactionTypeEnumTax_service_error
                | val GHC.Classes.== "transaction" -> ErrorMayHaveTransactionTypeEnumTransaction
                | val GHC.Classes.== "unauthorized" -> ErrorMayHaveTransactionTypeEnumUnauthorized
                | val GHC.Classes.== "unavailable_in_api_version" -> ErrorMayHaveTransactionTypeEnumUnavailable_in_api_version
                | val GHC.Classes.== "unknown_api_version" -> ErrorMayHaveTransactionTypeEnumUnknown_api_version
                | val GHC.Classes.== "validation" -> ErrorMayHaveTransactionTypeEnumValidation
                | GHC.Base.otherwise -> ErrorMayHaveTransactionTypeOther val
            )
