{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AccountCreate
module RecurlyClient.Types.AccountCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AccountAcquisitionUpdate
import {-# SOURCE #-} RecurlyClient.Types.AccountUpdate
import {-# SOURCE #-} RecurlyClient.Types.Address
import {-# SOURCE #-} RecurlyClient.Types.BillingInfoCreate
import {-# SOURCE #-} RecurlyClient.Types.ExternalAccountCreate
import {-# SOURCE #-} RecurlyClient.Types.ShippingAddressCreate
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AccountCreate.allOf@ in the specification.
data AccountCreate = AccountCreate
    { accountCreateAcquisition :: (GHC.Maybe.Maybe AccountAcquisitionUpdate)
    -- ^ acquisition
    , accountCreateAddress :: (GHC.Maybe.Maybe Address)
    -- ^ address
    , accountCreateBill_to :: (GHC.Maybe.Maybe AccountCreateBill_to)
    -- ^ bill_to: An enumerable describing the billing behavior of the account, specifically whether the account is self-paying or will rely on the parent account to pay.
    --
    -- Constraints:
    --
    -- * Maximum length of 6
    , accountCreateBilling_info :: (GHC.Maybe.Maybe BillingInfoCreate)
    -- ^ billing_info
    , accountCreateCc_emails :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ cc_emails: Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the \`email\` field also receives.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountCreateCode :: Data.Text.Internal.Text
    -- ^ code: The unique identifier of the account. This cannot be changed once the account is created.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , accountCreateCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ company
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    , accountCreateCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , accountCreateDunning_campaign_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ dunning_campaign_id: Unique ID to identify a dunning campaign. Used to specify if a non-default dunning campaign should be assigned to this account. For sites without multiple dunning campaigns enabled, the default dunning campaign will always be used.
    , accountCreateEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ email: The email address used for communicating with this customer. The customer will also use this email address to log into your hosted account management pages. This value does not need to be unique.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountCreateEntity_use_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ entity_use_code: The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.
    , accountCreateExemption_certificate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ exemption_certificate: The tax exemption certificate number for the account. If the merchant has an integration for the Vertex tax provider, this optional value will be sent in any tax calculation requests for the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    , accountCreateExternal_accounts :: (GHC.Maybe.Maybe [ExternalAccountCreate])
    -- ^ external_accounts
    , accountCreateFirst_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountCreateInvoice_template_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ invoice_template_id: Unique ID to identify an invoice template.  Available when the site is on a Pro or Elite plan.  Used to specify which invoice template, if any, should be used to generate invoices for the account.
    , accountCreateLast_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountCreateOverride_business_entity_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ override_business_entity_id: Unique ID to identify the business entity assigned to the account. Available when the \`Multiple Business Entities\` feature is enabled.
    , accountCreateParent_account_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ parent_account_code: The account code of the parent account to be associated with this account. Passing an empty value removes any existing parent association from this account. If both \`parent_account_code\` and \`parent_account_id\` are passed, the non-blank value in \`parent_account_id\` will be used. Only one level of parent child relationship is allowed. You cannot assign a parent account that itself has a parent account.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , accountCreateParent_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ parent_account_id: The UUID of the parent account to be associated with this account. Passing an empty value removes any existing parent association from this account. If both \`parent_account_code\` and \`parent_account_id\` are passed, the non-blank value in \`parent_account_id\` will be used. Only one level of parent child relationship is allowed. You cannot assign a parent account that itself has a parent account.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , accountCreatePreferred_locale :: (GHC.Maybe.Maybe AccountCreatePreferred_locale)
    -- ^ preferred_locale: Used to determine the language and locale of emails sent on behalf of the merchant to the customer. The list of locales is restricted to those the merchant has enabled on the site.
    , accountCreatePreferred_time_zone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ preferred_time_zone: Used to determine the time zone of emails sent on behalf of the merchant to the customer. Must be a [supported IANA time zone name](https:\/\/docs.recurly.com\/docs\/email-time-zones-and-time-stamps\#supported-api-iana-time-zone-names)
    , accountCreateShipping_addresses :: (GHC.Maybe.Maybe [ShippingAddressCreate])
    -- ^ shipping_addresses
    , accountCreateTax_exempt :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_exempt: The tax status of the account. \`true\` exempts tax on the account, \`false\` applies tax on the account.
    , accountCreateTransaction_type :: (GHC.Maybe.Maybe AccountCreateTransaction_type)
    -- ^ transaction_type: An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
    , accountCreateUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ username: A secondary value for the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , accountCreateVat_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ vat_number: The VAT number of the account (to avoid having the VAT applied). This is only used for manually collected invoices.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON AccountCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acquisition" Data.Aeson.Types.ToJSON..=)) (accountCreateAcquisition obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (accountCreateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_to" Data.Aeson.Types.ToJSON..=)) (accountCreateBill_to obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (accountCreateBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cc_emails" Data.Aeson.Types.ToJSON..=)) (accountCreateCc_emails obj) : ["code" Data.Aeson.Types.ToJSON..= accountCreateCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (accountCreateCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (accountCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dunning_campaign_id" Data.Aeson.Types.ToJSON..=)) (accountCreateDunning_campaign_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (accountCreateEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("entity_use_code" Data.Aeson.Types.ToJSON..=)) (accountCreateEntity_use_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exemption_certificate" Data.Aeson.Types.ToJSON..=)) (accountCreateExemption_certificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (accountCreateExternal_accounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (accountCreateFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_template_id" Data.Aeson.Types.ToJSON..=)) (accountCreateInvoice_template_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (accountCreateLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_business_entity_id" Data.Aeson.Types.ToJSON..=)) (accountCreateOverride_business_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_code" Data.Aeson.Types.ToJSON..=)) (accountCreateParent_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_id" Data.Aeson.Types.ToJSON..=)) (accountCreateParent_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (accountCreatePreferred_locale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_time_zone" Data.Aeson.Types.ToJSON..=)) (accountCreatePreferred_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_addresses" Data.Aeson.Types.ToJSON..=)) (accountCreateShipping_addresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (accountCreateTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (accountCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (accountCreateUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (accountCreateVat_number obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acquisition" Data.Aeson.Types.ToJSON..=)) (accountCreateAcquisition obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (accountCreateAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_to" Data.Aeson.Types.ToJSON..=)) (accountCreateBill_to obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (accountCreateBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cc_emails" Data.Aeson.Types.ToJSON..=)) (accountCreateCc_emails obj) : ["code" Data.Aeson.Types.ToJSON..= accountCreateCode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (accountCreateCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (accountCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dunning_campaign_id" Data.Aeson.Types.ToJSON..=)) (accountCreateDunning_campaign_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (accountCreateEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("entity_use_code" Data.Aeson.Types.ToJSON..=)) (accountCreateEntity_use_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exemption_certificate" Data.Aeson.Types.ToJSON..=)) (accountCreateExemption_certificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (accountCreateExternal_accounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (accountCreateFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_template_id" Data.Aeson.Types.ToJSON..=)) (accountCreateInvoice_template_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (accountCreateLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_business_entity_id" Data.Aeson.Types.ToJSON..=)) (accountCreateOverride_business_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_code" Data.Aeson.Types.ToJSON..=)) (accountCreateParent_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent_account_id" Data.Aeson.Types.ToJSON..=)) (accountCreateParent_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locale" Data.Aeson.Types.ToJSON..=)) (accountCreatePreferred_locale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_time_zone" Data.Aeson.Types.ToJSON..=)) (accountCreatePreferred_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_addresses" Data.Aeson.Types.ToJSON..=)) (accountCreateShipping_addresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (accountCreateTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (accountCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (accountCreateUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (accountCreateVat_number obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON AccountCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountCreate" (\obj -> (((((((((((((((((((((((((GHC.Base.pure AccountCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "acquisition")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bill_to")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cc_emails")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dunning_campaign_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "entity_use_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "exemption_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_accounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_template_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "override_business_entity_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "parent_account_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "parent_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preferred_locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preferred_time_zone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping_addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_number"))

-- | Create a new 'AccountCreate' with all required fields.
mkAccountCreate ::
    -- | 'accountCreateCode'
    Data.Text.Internal.Text ->
    AccountCreate
mkAccountCreate accountCreateCode =
    AccountCreate
        { accountCreateAcquisition = GHC.Maybe.Nothing
        , accountCreateAddress = GHC.Maybe.Nothing
        , accountCreateBill_to = GHC.Maybe.Nothing
        , accountCreateBilling_info = GHC.Maybe.Nothing
        , accountCreateCc_emails = GHC.Maybe.Nothing
        , accountCreateCode = accountCreateCode
        , accountCreateCompany = GHC.Maybe.Nothing
        , accountCreateCustom_fields = GHC.Maybe.Nothing
        , accountCreateDunning_campaign_id = GHC.Maybe.Nothing
        , accountCreateEmail = GHC.Maybe.Nothing
        , accountCreateEntity_use_code = GHC.Maybe.Nothing
        , accountCreateExemption_certificate = GHC.Maybe.Nothing
        , accountCreateExternal_accounts = GHC.Maybe.Nothing
        , accountCreateFirst_name = GHC.Maybe.Nothing
        , accountCreateInvoice_template_id = GHC.Maybe.Nothing
        , accountCreateLast_name = GHC.Maybe.Nothing
        , accountCreateOverride_business_entity_id = GHC.Maybe.Nothing
        , accountCreateParent_account_code = GHC.Maybe.Nothing
        , accountCreateParent_account_id = GHC.Maybe.Nothing
        , accountCreatePreferred_locale = GHC.Maybe.Nothing
        , accountCreatePreferred_time_zone = GHC.Maybe.Nothing
        , accountCreateShipping_addresses = GHC.Maybe.Nothing
        , accountCreateTax_exempt = GHC.Maybe.Nothing
        , accountCreateTransaction_type = GHC.Maybe.Nothing
        , accountCreateUsername = GHC.Maybe.Nothing
        , accountCreateVat_number = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.AccountCreate.allOf.properties.bill_to@ in the specification.

An enumerable describing the billing behavior of the account, specifically whether the account is self-paying or will rely on the parent account to pay.
-}
data AccountCreateBill_to
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AccountCreateBill_toOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AccountCreateBill_toTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"parent"@
      AccountCreateBill_toEnumParent
    | -- | Represents the JSON value @"self"@
      AccountCreateBill_toEnumSelf
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AccountCreateBill_to where
    toJSON (AccountCreateBill_toOther val) = val
    toJSON (AccountCreateBill_toTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AccountCreateBill_toEnumParent) = "parent"
    toJSON (AccountCreateBill_toEnumSelf) = "self"
instance Data.Aeson.Types.FromJSON.FromJSON AccountCreateBill_to where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "parent" -> AccountCreateBill_toEnumParent
                | val GHC.Classes.== "self" -> AccountCreateBill_toEnumSelf
                | GHC.Base.otherwise -> AccountCreateBill_toOther val
            )

{- | Defines the enum schema located at @components.schemas.AccountCreate.allOf.properties.preferred_locale@ in the specification.

Used to determine the language and locale of emails sent on behalf of the merchant to the customer. The list of locales is restricted to those the merchant has enabled on the site.
-}
data AccountCreatePreferred_locale
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AccountCreatePreferred_localeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AccountCreatePreferred_localeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"da-DK"@
      AccountCreatePreferred_localeEnumDa_DK
    | -- | Represents the JSON value @"de-CH"@
      AccountCreatePreferred_localeEnumDe_CH
    | -- | Represents the JSON value @"de-DE"@
      AccountCreatePreferred_localeEnumDe_DE
    | -- | Represents the JSON value @"en-AU"@
      AccountCreatePreferred_localeEnumEn_AU
    | -- | Represents the JSON value @"en-CA"@
      AccountCreatePreferred_localeEnumEn_CA
    | -- | Represents the JSON value @"en-GB"@
      AccountCreatePreferred_localeEnumEn_GB
    | -- | Represents the JSON value @"en-IE"@
      AccountCreatePreferred_localeEnumEn_IE
    | -- | Represents the JSON value @"en-NZ"@
      AccountCreatePreferred_localeEnumEn_NZ
    | -- | Represents the JSON value @"en-US"@
      AccountCreatePreferred_localeEnumEn_US
    | -- | Represents the JSON value @"es-ES"@
      AccountCreatePreferred_localeEnumEs_ES
    | -- | Represents the JSON value @"es-MX"@
      AccountCreatePreferred_localeEnumEs_MX
    | -- | Represents the JSON value @"es-US"@
      AccountCreatePreferred_localeEnumEs_US
    | -- | Represents the JSON value @"fi-FI"@
      AccountCreatePreferred_localeEnumFi_FI
    | -- | Represents the JSON value @"fr-BE"@
      AccountCreatePreferred_localeEnumFr_BE
    | -- | Represents the JSON value @"fr-CA"@
      AccountCreatePreferred_localeEnumFr_CA
    | -- | Represents the JSON value @"fr-CH"@
      AccountCreatePreferred_localeEnumFr_CH
    | -- | Represents the JSON value @"fr-FR"@
      AccountCreatePreferred_localeEnumFr_FR
    | -- | Represents the JSON value @"hi-IN"@
      AccountCreatePreferred_localeEnumHi_IN
    | -- | Represents the JSON value @"it-IT"@
      AccountCreatePreferred_localeEnumIt_IT
    | -- | Represents the JSON value @"ja-JP"@
      AccountCreatePreferred_localeEnumJa_JP
    | -- | Represents the JSON value @"ko-KR"@
      AccountCreatePreferred_localeEnumKo_KR
    | -- | Represents the JSON value @"nl-BE"@
      AccountCreatePreferred_localeEnumNl_BE
    | -- | Represents the JSON value @"nl-NL"@
      AccountCreatePreferred_localeEnumNl_NL
    | -- | Represents the JSON value @"pl-PL"@
      AccountCreatePreferred_localeEnumPl_PL
    | -- | Represents the JSON value @"pt-BR"@
      AccountCreatePreferred_localeEnumPt_BR
    | -- | Represents the JSON value @"pt-PT"@
      AccountCreatePreferred_localeEnumPt_PT
    | -- | Represents the JSON value @"ro-RO"@
      AccountCreatePreferred_localeEnumRo_RO
    | -- | Represents the JSON value @"ru-RU"@
      AccountCreatePreferred_localeEnumRu_RU
    | -- | Represents the JSON value @"sk-SK"@
      AccountCreatePreferred_localeEnumSk_SK
    | -- | Represents the JSON value @"sv-SE"@
      AccountCreatePreferred_localeEnumSv_SE
    | -- | Represents the JSON value @"tr-TR"@
      AccountCreatePreferred_localeEnumTr_TR
    | -- | Represents the JSON value @"zh-CN"@
      AccountCreatePreferred_localeEnumZh_CN
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AccountCreatePreferred_locale where
    toJSON (AccountCreatePreferred_localeOther val) = val
    toJSON (AccountCreatePreferred_localeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AccountCreatePreferred_localeEnumDa_DK) = "da-DK"
    toJSON (AccountCreatePreferred_localeEnumDe_CH) = "de-CH"
    toJSON (AccountCreatePreferred_localeEnumDe_DE) = "de-DE"
    toJSON (AccountCreatePreferred_localeEnumEn_AU) = "en-AU"
    toJSON (AccountCreatePreferred_localeEnumEn_CA) = "en-CA"
    toJSON (AccountCreatePreferred_localeEnumEn_GB) = "en-GB"
    toJSON (AccountCreatePreferred_localeEnumEn_IE) = "en-IE"
    toJSON (AccountCreatePreferred_localeEnumEn_NZ) = "en-NZ"
    toJSON (AccountCreatePreferred_localeEnumEn_US) = "en-US"
    toJSON (AccountCreatePreferred_localeEnumEs_ES) = "es-ES"
    toJSON (AccountCreatePreferred_localeEnumEs_MX) = "es-MX"
    toJSON (AccountCreatePreferred_localeEnumEs_US) = "es-US"
    toJSON (AccountCreatePreferred_localeEnumFi_FI) = "fi-FI"
    toJSON (AccountCreatePreferred_localeEnumFr_BE) = "fr-BE"
    toJSON (AccountCreatePreferred_localeEnumFr_CA) = "fr-CA"
    toJSON (AccountCreatePreferred_localeEnumFr_CH) = "fr-CH"
    toJSON (AccountCreatePreferred_localeEnumFr_FR) = "fr-FR"
    toJSON (AccountCreatePreferred_localeEnumHi_IN) = "hi-IN"
    toJSON (AccountCreatePreferred_localeEnumIt_IT) = "it-IT"
    toJSON (AccountCreatePreferred_localeEnumJa_JP) = "ja-JP"
    toJSON (AccountCreatePreferred_localeEnumKo_KR) = "ko-KR"
    toJSON (AccountCreatePreferred_localeEnumNl_BE) = "nl-BE"
    toJSON (AccountCreatePreferred_localeEnumNl_NL) = "nl-NL"
    toJSON (AccountCreatePreferred_localeEnumPl_PL) = "pl-PL"
    toJSON (AccountCreatePreferred_localeEnumPt_BR) = "pt-BR"
    toJSON (AccountCreatePreferred_localeEnumPt_PT) = "pt-PT"
    toJSON (AccountCreatePreferred_localeEnumRo_RO) = "ro-RO"
    toJSON (AccountCreatePreferred_localeEnumRu_RU) = "ru-RU"
    toJSON (AccountCreatePreferred_localeEnumSk_SK) = "sk-SK"
    toJSON (AccountCreatePreferred_localeEnumSv_SE) = "sv-SE"
    toJSON (AccountCreatePreferred_localeEnumTr_TR) = "tr-TR"
    toJSON (AccountCreatePreferred_localeEnumZh_CN) = "zh-CN"
instance Data.Aeson.Types.FromJSON.FromJSON AccountCreatePreferred_locale where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "da-DK" -> AccountCreatePreferred_localeEnumDa_DK
                | val GHC.Classes.== "de-CH" -> AccountCreatePreferred_localeEnumDe_CH
                | val GHC.Classes.== "de-DE" -> AccountCreatePreferred_localeEnumDe_DE
                | val GHC.Classes.== "en-AU" -> AccountCreatePreferred_localeEnumEn_AU
                | val GHC.Classes.== "en-CA" -> AccountCreatePreferred_localeEnumEn_CA
                | val GHC.Classes.== "en-GB" -> AccountCreatePreferred_localeEnumEn_GB
                | val GHC.Classes.== "en-IE" -> AccountCreatePreferred_localeEnumEn_IE
                | val GHC.Classes.== "en-NZ" -> AccountCreatePreferred_localeEnumEn_NZ
                | val GHC.Classes.== "en-US" -> AccountCreatePreferred_localeEnumEn_US
                | val GHC.Classes.== "es-ES" -> AccountCreatePreferred_localeEnumEs_ES
                | val GHC.Classes.== "es-MX" -> AccountCreatePreferred_localeEnumEs_MX
                | val GHC.Classes.== "es-US" -> AccountCreatePreferred_localeEnumEs_US
                | val GHC.Classes.== "fi-FI" -> AccountCreatePreferred_localeEnumFi_FI
                | val GHC.Classes.== "fr-BE" -> AccountCreatePreferred_localeEnumFr_BE
                | val GHC.Classes.== "fr-CA" -> AccountCreatePreferred_localeEnumFr_CA
                | val GHC.Classes.== "fr-CH" -> AccountCreatePreferred_localeEnumFr_CH
                | val GHC.Classes.== "fr-FR" -> AccountCreatePreferred_localeEnumFr_FR
                | val GHC.Classes.== "hi-IN" -> AccountCreatePreferred_localeEnumHi_IN
                | val GHC.Classes.== "it-IT" -> AccountCreatePreferred_localeEnumIt_IT
                | val GHC.Classes.== "ja-JP" -> AccountCreatePreferred_localeEnumJa_JP
                | val GHC.Classes.== "ko-KR" -> AccountCreatePreferred_localeEnumKo_KR
                | val GHC.Classes.== "nl-BE" -> AccountCreatePreferred_localeEnumNl_BE
                | val GHC.Classes.== "nl-NL" -> AccountCreatePreferred_localeEnumNl_NL
                | val GHC.Classes.== "pl-PL" -> AccountCreatePreferred_localeEnumPl_PL
                | val GHC.Classes.== "pt-BR" -> AccountCreatePreferred_localeEnumPt_BR
                | val GHC.Classes.== "pt-PT" -> AccountCreatePreferred_localeEnumPt_PT
                | val GHC.Classes.== "ro-RO" -> AccountCreatePreferred_localeEnumRo_RO
                | val GHC.Classes.== "ru-RU" -> AccountCreatePreferred_localeEnumRu_RU
                | val GHC.Classes.== "sk-SK" -> AccountCreatePreferred_localeEnumSk_SK
                | val GHC.Classes.== "sv-SE" -> AccountCreatePreferred_localeEnumSv_SE
                | val GHC.Classes.== "tr-TR" -> AccountCreatePreferred_localeEnumTr_TR
                | val GHC.Classes.== "zh-CN" -> AccountCreatePreferred_localeEnumZh_CN
                | GHC.Base.otherwise -> AccountCreatePreferred_localeOther val
            )

{- | Defines the enum schema located at @components.schemas.AccountCreate.allOf.properties.transaction_type@ in the specification.

An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
-}
data AccountCreateTransaction_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      AccountCreateTransaction_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      AccountCreateTransaction_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"moto"@
      AccountCreateTransaction_typeEnumMoto
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON AccountCreateTransaction_type where
    toJSON (AccountCreateTransaction_typeOther val) = val
    toJSON (AccountCreateTransaction_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (AccountCreateTransaction_typeEnumMoto) = "moto"
instance Data.Aeson.Types.FromJSON.FromJSON AccountCreateTransaction_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "moto" -> AccountCreateTransaction_typeEnumMoto
                | GHC.Base.otherwise -> AccountCreateTransaction_typeOther val
            )
