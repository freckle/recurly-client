{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema LineItem
module RecurlyClient.Types.LineItem where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AccountMini
import {-# SOURCE #-} RecurlyClient.Types.ShippingAddress
import {-# SOURCE #-} RecurlyClient.Types.TaxInfo
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.LineItem@ in the specification.
data LineItem = LineItem
    { lineItemAccount :: (GHC.Maybe.Maybe AccountMini)
    -- ^ account
    , lineItemAccounting_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ accounting_code: Internal accounting code to help you reconcile your revenue to the correct ledger. Line items created as part of a subscription invoice will use the plan or add-on\'s accounting code, otherwise the value will only be present if you define an accounting code when creating the line item.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    , lineItemAdd_on_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ add_on_code: If the line item is a charge or credit for an add-on, this is its code.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , lineItemAdd_on_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ add_on_id: If the line item is a charge or credit for an add-on this is its ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemAmount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ amount: \`(quantity * unit_amount) - (discount + tax)\`
    , lineItemAvalara_service_type :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ avalara_service_type: Used by Avalara for Communications taxes. The transaction type in combination with the service type describe how the line item is taxed. Refer to [the documentation](https:\/\/help.avalara.com\/AvaTax_for_Communications\/Tax_Calculation\/AvaTax_for_Communications_Tax_Engine\/Mapping_Resources\/TM_00115_AFC_Modules_Corresponding_Transaction_Types) for more available t\/s types.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , lineItemAvalara_transaction_type :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ avalara_transaction_type: Used by Avalara for Communications taxes. The transaction type in combination with the service type describe how the line item is taxed. Refer to [the documentation](https:\/\/help.avalara.com\/AvaTax_for_Communications\/Tax_Calculation\/AvaTax_for_Communications_Tax_Engine\/Mapping_Resources\/TM_00115_AFC_Modules_Corresponding_Transaction_Types) for more available t\/s types.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , lineItemBill_for_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ bill_for_account_id: The UUID of the account responsible for originating the line item.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at: When the line item was created.
    , lineItemCredit_applied :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ credit_applied: The amount of credit from this line item that was applied to the invoice.
    , lineItemCredit_reason_code :: (GHC.Maybe.Maybe LineItemCredit_reason_code)
    -- ^ credit_reason_code: The reason the credit was given when line item is \`type=credit\`.
    , lineItemCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ currency: 3-letter ISO 4217 currency code.
    --
    -- Constraints:
    --
    -- * Maximum length of 3
    , lineItemCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , lineItemDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ description: Description that appears on the invoice. For subscription related items this will be filled in automatically.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , lineItemDestination_tax_address_source :: (GHC.Maybe.Maybe LineItemDestination_tax_address_source)
    -- ^ destination_tax_address_source: The source of the address that will be used as the destinaion in determining taxes. Available only when the site is on an Elite plan. A value of \"destination\" refers to the \"Customer tax address\". A value of \"origin\" refers to the \"Business entity tax address\".
    , lineItemDiscount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ discount: The discount applied to the line item.
    , lineItemEnd_date :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ end_date: If this date is provided, it indicates the end of a time range.
    , lineItemExternal_sku :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ external_sku: Optional Stock Keeping Unit assigned to an item. Available when the Credit Invoices feature is enabled.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , lineItemId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemInvoice_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ invoice_id: Once the line item has been invoiced this will be the invoice\'s ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemInvoice_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ invoice_number: Once the line item has been invoiced this will be the invoice\'s number. If VAT taxation and the Country Invoice Sequencing feature are enabled, invoices will have country-specific invoice numbers for invoices billed to EU countries (ex: FR1001). Non-EU invoices will continue to use the site-level invoice number sequence.
    , lineItemItem_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ item_code: Unique code to identify an item. Available when the Credit Invoices feature is enabled.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'\/^[a-z0-9_+-]+\$\/\'
    , lineItemItem_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ item_id: System-generated unique identifier for an item. Available when the Credit Invoices feature is enabled.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemLegacy_category :: (GHC.Maybe.Maybe LineItemLegacy_category)
    -- ^ legacy_category: Category to describe the role of a line item on a legacy invoice:
    -- - \"charges\" refers to charges being billed for on this invoice.
    -- - \"credits\" refers to refund or proration credits. This portion of the invoice can be considered a credit memo.
    -- - \"applied_credits\" refers to previous credits applied to this invoice. See their original_line_item_id to determine where the credit first originated.
    -- - \"carryforwards\" can be ignored. They exist to consume any remaining credit balance. A new credit with the same amount will be created and placed back on the account.
    , lineItemLiability_gl_account_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ liability_gl_account_code: Unique code to identify the ledger account. Each code must start
    -- with a letter or number. The following special characters are
    -- allowed: \`-_.,:\`
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    -- * Must match pattern \'\/^[A-Za-z0-9](( *)?[\\-A-Za-z0-9_.,:])*\$\/\'
    , lineItemObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , lineItemOrigin :: (GHC.Maybe.Maybe LineItemOrigin)
    -- ^ origin: A credit created from an original charge will have the value of the charge\'s origin.
    , lineItemOrigin_tax_address_source :: (GHC.Maybe.Maybe LineItemOrigin_tax_address_source)
    -- ^ origin_tax_address_source: The source of the address that will be used as the origin in determining taxes. Available only when the site is on an Elite plan. A value of \"origin\" refers to the \"Business entity tax address\". A value of \"destination\" refers to the \"Customer tax address\".
    , lineItemOriginal_line_item_invoice_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ original_line_item_invoice_id: The invoice where the credit originated. Will only have a value if the line item is a credit created from a previous credit, or if the credit was created from a charge refund.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemPerformance_obligation_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ performance_obligation_id: The ID of a performance obligation. Performance obligations are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemPlan_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_code: If the line item is a charge or credit for a plan or add-on, this is the plan\'s code.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , lineItemPlan_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_id: If the line item is a charge or credit for a plan or add-on, this is the plan\'s ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemPrevious_line_item_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ previous_line_item_id: Will only have a value if the line item is a credit created from a previous credit, or if the credit was created from a charge refund.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemProduct_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ product_code: For plan-related line items this will be the plan\'s code, for add-on related line items it will be the add-on\'s code. For item-related line items it will be the item\'s \`external_sku\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , lineItemProration_rate :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ proration_rate: When a line item has been prorated, this is the rate of the proration. Proration rates were made available for line items created after March 30, 2017. For line items created prior to that date, the proration rate will be \`null\`, even if the line item was prorated.
    --
    -- Constraints:
    --
    -- * Maxium  of 1.0
    -- * Minimum  of 0.0
    , lineItemQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity: This number will be multiplied by the unit amount to compute the subtotal before any discounts or taxes.
    , lineItemQuantity_decimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ quantity_decimal: A floating-point alternative to Quantity. If this value is present, it will be used in place of Quantity for calculations, and Quantity will be the rounded integer value of this number. This field supports up to 9 decimal places. The Decimal Quantity feature must be enabled to utilize this field.
    , lineItemRefund :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ refund
    , lineItemRefunded_quantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ refunded_quantity: For refund charges, the quantity being refunded. For non-refund charges, the total quantity refunded (possibly over multiple refunds).
    , lineItemRefunded_quantity_decimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ refunded_quantity_decimal: A floating-point alternative to Refunded Quantity. For refund charges, the quantity being refunded. For non-refund charges, the total quantity refunded (possibly over multiple refunds). The Decimal Quantity feature must be enabled to utilize this field.
    , lineItemRevenue_gl_account_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ revenue_gl_account_code: Unique code to identify the ledger account. Each code must start
    -- with a letter or number. The following special characters are
    -- allowed: \`-_.,:\`
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    -- * Must match pattern \'\/^[A-Za-z0-9](( *)?[\\-A-Za-z0-9_.,:])*\$\/\'
    , lineItemRevenue_schedule_type :: (GHC.Maybe.Maybe LineItemRevenue_schedule_type)
    -- ^ revenue_schedule_type
    , lineItemShipping_address :: (GHC.Maybe.Maybe ShippingAddress)
    -- ^ shipping_address
    , lineItemStart_date :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ start_date: If an end date is present, this is value indicates the beginning of a billing time range. If no end date is present it indicates billing for a specific date.
    , lineItemState :: (GHC.Maybe.Maybe LineItemState)
    -- ^ state: Pending line items are charges or credits on an account that have not been applied to an invoice yet. Invoiced line items will always have an \`invoice_id\` value.
    , lineItemSubscription_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ subscription_id: If the line item is a charge or credit for a subscription, this is its ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , lineItemSubtotal :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ subtotal: \`quantity * unit_amount\`
    , lineItemTax :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ tax: The tax amount for the line item.
    , lineItemTax_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ tax_code: Optional field used by Avalara, Vertex, and Recurly\'s In-the-Box tax solution to determine taxation rules. You can pass in specific tax codes using any of these tax integrations. For Recurly\'s In-the-Box tax offering you can also choose to instead use simple values of \`unknown\`, \`physical\`, or \`digital\` tax codes.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , lineItemTax_exempt :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_exempt: \`true\` exempts tax on charges, \`false\` applies tax on charges. If not defined, then defaults to the Plan and Site settings. This attribute does not work for credits (negative line items). Credits are always applied post-tax. Pre-tax discounts should use the Coupons feature.
    , lineItemTax_inclusive :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_inclusive: Determines whether or not tax is included in the unit amount. The Tax Inclusive Pricing feature (separate from the Mixed Tax Pricing feature) must be enabled to utilize this flag.
    , lineItemTax_info :: (GHC.Maybe.Maybe TaxInfo)
    -- ^ tax_info: Only for merchants using Recurly\'s In-The-Box taxes.
    , lineItemTaxable :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ taxable: \`true\` if the line item is taxable, \`false\` if it is not.
    , lineItemType :: (GHC.Maybe.Maybe LineItemType)
    -- ^ type: Charges are positive line items that debit the account. Credits are negative line items that credit the account.
    , lineItemUnit_amount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ unit_amount: Positive amount for a charge, negative amount for a credit.
    , lineItemUnit_amount_decimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ unit_amount_decimal: Positive amount for a charge, negative amount for a credit.
    , lineItemUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at: When the line item was last changed.
    , lineItemUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ uuid: The UUID is useful for matching data with the CSV exports and building URLs into Recurly\'s UI.
    --
    -- Constraints:
    --
    -- * Maximum length of 32
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON LineItem where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (lineItemAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accounting_code" Data.Aeson.Types.ToJSON..=)) (lineItemAccounting_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_code" Data.Aeson.Types.ToJSON..=)) (lineItemAdd_on_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_id" Data.Aeson.Types.ToJSON..=)) (lineItemAdd_on_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (lineItemAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_service_type" Data.Aeson.Types.ToJSON..=)) (lineItemAvalara_service_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_transaction_type" Data.Aeson.Types.ToJSON..=)) (lineItemAvalara_transaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_for_account_id" Data.Aeson.Types.ToJSON..=)) (lineItemBill_for_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (lineItemCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_applied" Data.Aeson.Types.ToJSON..=)) (lineItemCredit_applied obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_reason_code" Data.Aeson.Types.ToJSON..=)) (lineItemCredit_reason_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (lineItemCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (lineItemCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (lineItemDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_tax_address_source" Data.Aeson.Types.ToJSON..=)) (lineItemDestination_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (lineItemDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_date" Data.Aeson.Types.ToJSON..=)) (lineItemEnd_date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_sku" Data.Aeson.Types.ToJSON..=)) (lineItemExternal_sku obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (lineItemId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_id" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_number" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_code" Data.Aeson.Types.ToJSON..=)) (lineItemItem_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_id" Data.Aeson.Types.ToJSON..=)) (lineItemItem_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_category" Data.Aeson.Types.ToJSON..=)) (lineItemLegacy_category obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability_gl_account_code" Data.Aeson.Types.ToJSON..=)) (lineItemLiability_gl_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (lineItemObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin" Data.Aeson.Types.ToJSON..=)) (lineItemOrigin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin_tax_address_source" Data.Aeson.Types.ToJSON..=)) (lineItemOrigin_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_line_item_invoice_id" Data.Aeson.Types.ToJSON..=)) (lineItemOriginal_line_item_invoice_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("performance_obligation_id" Data.Aeson.Types.ToJSON..=)) (lineItemPerformance_obligation_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_code" Data.Aeson.Types.ToJSON..=)) (lineItemPlan_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (lineItemPlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("previous_line_item_id" Data.Aeson.Types.ToJSON..=)) (lineItemPrevious_line_item_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_code" Data.Aeson.Types.ToJSON..=)) (lineItemProduct_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_rate" Data.Aeson.Types.ToJSON..=)) (lineItemProration_rate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund" Data.Aeson.Types.ToJSON..=)) (lineItemRefund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_quantity" Data.Aeson.Types.ToJSON..=)) (lineItemRefunded_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_quantity_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemRefunded_quantity_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_gl_account_code" Data.Aeson.Types.ToJSON..=)) (lineItemRevenue_gl_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (lineItemRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (lineItemShipping_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_date" Data.Aeson.Types.ToJSON..=)) (lineItemStart_date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (lineItemState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_id" Data.Aeson.Types.ToJSON..=)) (lineItemSubscription_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subtotal" Data.Aeson.Types.ToJSON..=)) (lineItemSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (lineItemTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (lineItemTax_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (lineItemTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (lineItemTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_info" Data.Aeson.Types.ToJSON..=)) (lineItemTax_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxable" Data.Aeson.Types.ToJSON..=)) (lineItemTaxable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (lineItemUnit_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemUnit_amount_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (lineItemUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uuid" Data.Aeson.Types.ToJSON..=)) (lineItemUuid obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (lineItemAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accounting_code" Data.Aeson.Types.ToJSON..=)) (lineItemAccounting_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_code" Data.Aeson.Types.ToJSON..=)) (lineItemAdd_on_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_on_id" Data.Aeson.Types.ToJSON..=)) (lineItemAdd_on_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (lineItemAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_service_type" Data.Aeson.Types.ToJSON..=)) (lineItemAvalara_service_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avalara_transaction_type" Data.Aeson.Types.ToJSON..=)) (lineItemAvalara_transaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bill_for_account_id" Data.Aeson.Types.ToJSON..=)) (lineItemBill_for_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (lineItemCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_applied" Data.Aeson.Types.ToJSON..=)) (lineItemCredit_applied obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_reason_code" Data.Aeson.Types.ToJSON..=)) (lineItemCredit_reason_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (lineItemCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (lineItemCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (lineItemDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_tax_address_source" Data.Aeson.Types.ToJSON..=)) (lineItemDestination_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (lineItemDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_date" Data.Aeson.Types.ToJSON..=)) (lineItemEnd_date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_sku" Data.Aeson.Types.ToJSON..=)) (lineItemExternal_sku obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (lineItemId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_id" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_number" Data.Aeson.Types.ToJSON..=)) (lineItemInvoice_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_code" Data.Aeson.Types.ToJSON..=)) (lineItemItem_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("item_id" Data.Aeson.Types.ToJSON..=)) (lineItemItem_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_category" Data.Aeson.Types.ToJSON..=)) (lineItemLegacy_category obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability_gl_account_code" Data.Aeson.Types.ToJSON..=)) (lineItemLiability_gl_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (lineItemObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin" Data.Aeson.Types.ToJSON..=)) (lineItemOrigin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin_tax_address_source" Data.Aeson.Types.ToJSON..=)) (lineItemOrigin_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_line_item_invoice_id" Data.Aeson.Types.ToJSON..=)) (lineItemOriginal_line_item_invoice_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("performance_obligation_id" Data.Aeson.Types.ToJSON..=)) (lineItemPerformance_obligation_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_code" Data.Aeson.Types.ToJSON..=)) (lineItemPlan_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (lineItemPlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("previous_line_item_id" Data.Aeson.Types.ToJSON..=)) (lineItemPrevious_line_item_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_code" Data.Aeson.Types.ToJSON..=)) (lineItemProduct_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_rate" Data.Aeson.Types.ToJSON..=)) (lineItemProration_rate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemQuantity_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund" Data.Aeson.Types.ToJSON..=)) (lineItemRefund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_quantity" Data.Aeson.Types.ToJSON..=)) (lineItemRefunded_quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_quantity_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemRefunded_quantity_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_gl_account_code" Data.Aeson.Types.ToJSON..=)) (lineItemRevenue_gl_account_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (lineItemRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (lineItemShipping_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_date" Data.Aeson.Types.ToJSON..=)) (lineItemStart_date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (lineItemState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_id" Data.Aeson.Types.ToJSON..=)) (lineItemSubscription_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subtotal" Data.Aeson.Types.ToJSON..=)) (lineItemSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (lineItemTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (lineItemTax_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (lineItemTax_exempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (lineItemTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_info" Data.Aeson.Types.ToJSON..=)) (lineItemTax_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxable" Data.Aeson.Types.ToJSON..=)) (lineItemTaxable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (lineItemType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (lineItemUnit_amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (lineItemUnit_amount_decimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (lineItemUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uuid" Data.Aeson.Types.ToJSON..=)) (lineItemUuid obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON LineItem where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "LineItem" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure LineItem GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "accounting_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_on_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_on_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "avalara_service_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "avalara_transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bill_for_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "credit_applied")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "credit_reason_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "destination_tax_address_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "end_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_sku")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "item_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "item_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "legacy_category")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "liability_gl_account_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "origin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "origin_tax_address_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "original_line_item_invoice_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "performance_obligation_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "previous_line_item_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "proration_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refund")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refunded_quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refunded_quantity_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_gl_account_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "start_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscription_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "taxable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "uuid"))

-- | Create a new 'LineItem' with all required fields.
mkLineItem :: LineItem
mkLineItem =
    LineItem
        { lineItemAccount = GHC.Maybe.Nothing
        , lineItemAccounting_code = GHC.Maybe.Nothing
        , lineItemAdd_on_code = GHC.Maybe.Nothing
        , lineItemAdd_on_id = GHC.Maybe.Nothing
        , lineItemAmount = GHC.Maybe.Nothing
        , lineItemAvalara_service_type = GHC.Maybe.Nothing
        , lineItemAvalara_transaction_type = GHC.Maybe.Nothing
        , lineItemBill_for_account_id = GHC.Maybe.Nothing
        , lineItemCreated_at = GHC.Maybe.Nothing
        , lineItemCredit_applied = GHC.Maybe.Nothing
        , lineItemCredit_reason_code = GHC.Maybe.Nothing
        , lineItemCurrency = GHC.Maybe.Nothing
        , lineItemCustom_fields = GHC.Maybe.Nothing
        , lineItemDescription = GHC.Maybe.Nothing
        , lineItemDestination_tax_address_source = GHC.Maybe.Nothing
        , lineItemDiscount = GHC.Maybe.Nothing
        , lineItemEnd_date = GHC.Maybe.Nothing
        , lineItemExternal_sku = GHC.Maybe.Nothing
        , lineItemId = GHC.Maybe.Nothing
        , lineItemInvoice_id = GHC.Maybe.Nothing
        , lineItemInvoice_number = GHC.Maybe.Nothing
        , lineItemItem_code = GHC.Maybe.Nothing
        , lineItemItem_id = GHC.Maybe.Nothing
        , lineItemLegacy_category = GHC.Maybe.Nothing
        , lineItemLiability_gl_account_code = GHC.Maybe.Nothing
        , lineItemObject = GHC.Maybe.Nothing
        , lineItemOrigin = GHC.Maybe.Nothing
        , lineItemOrigin_tax_address_source = GHC.Maybe.Nothing
        , lineItemOriginal_line_item_invoice_id = GHC.Maybe.Nothing
        , lineItemPerformance_obligation_id = GHC.Maybe.Nothing
        , lineItemPlan_code = GHC.Maybe.Nothing
        , lineItemPlan_id = GHC.Maybe.Nothing
        , lineItemPrevious_line_item_id = GHC.Maybe.Nothing
        , lineItemProduct_code = GHC.Maybe.Nothing
        , lineItemProration_rate = GHC.Maybe.Nothing
        , lineItemQuantity = GHC.Maybe.Nothing
        , lineItemQuantity_decimal = GHC.Maybe.Nothing
        , lineItemRefund = GHC.Maybe.Nothing
        , lineItemRefunded_quantity = GHC.Maybe.Nothing
        , lineItemRefunded_quantity_decimal = GHC.Maybe.Nothing
        , lineItemRevenue_gl_account_code = GHC.Maybe.Nothing
        , lineItemRevenue_schedule_type = GHC.Maybe.Nothing
        , lineItemShipping_address = GHC.Maybe.Nothing
        , lineItemStart_date = GHC.Maybe.Nothing
        , lineItemState = GHC.Maybe.Nothing
        , lineItemSubscription_id = GHC.Maybe.Nothing
        , lineItemSubtotal = GHC.Maybe.Nothing
        , lineItemTax = GHC.Maybe.Nothing
        , lineItemTax_code = GHC.Maybe.Nothing
        , lineItemTax_exempt = GHC.Maybe.Nothing
        , lineItemTax_inclusive = GHC.Maybe.Nothing
        , lineItemTax_info = GHC.Maybe.Nothing
        , lineItemTaxable = GHC.Maybe.Nothing
        , lineItemType = GHC.Maybe.Nothing
        , lineItemUnit_amount = GHC.Maybe.Nothing
        , lineItemUnit_amount_decimal = GHC.Maybe.Nothing
        , lineItemUpdated_at = GHC.Maybe.Nothing
        , lineItemUuid = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.LineItem.properties.credit_reason_code@ in the specification.

The reason the credit was given when line item is \`type=credit\`.
-}
data LineItemCredit_reason_code
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemCredit_reason_codeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemCredit_reason_codeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"general"@
      LineItemCredit_reason_codeEnumGeneral
    | -- | Represents the JSON value @"gift_card"@
      LineItemCredit_reason_codeEnumGift_card
    | -- | Represents the JSON value @"promotional"@
      LineItemCredit_reason_codeEnumPromotional
    | -- | Represents the JSON value @"refund"@
      LineItemCredit_reason_codeEnumRefund
    | -- | Represents the JSON value @"service"@
      LineItemCredit_reason_codeEnumService
    | -- | Represents the JSON value @"write_off"@
      LineItemCredit_reason_codeEnumWrite_off
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemCredit_reason_code where
    toJSON (LineItemCredit_reason_codeOther val) = val
    toJSON (LineItemCredit_reason_codeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemCredit_reason_codeEnumGeneral) = "general"
    toJSON (LineItemCredit_reason_codeEnumGift_card) = "gift_card"
    toJSON (LineItemCredit_reason_codeEnumPromotional) = "promotional"
    toJSON (LineItemCredit_reason_codeEnumRefund) = "refund"
    toJSON (LineItemCredit_reason_codeEnumService) = "service"
    toJSON (LineItemCredit_reason_codeEnumWrite_off) = "write_off"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemCredit_reason_code where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "general" -> LineItemCredit_reason_codeEnumGeneral
                | val GHC.Classes.== "gift_card" -> LineItemCredit_reason_codeEnumGift_card
                | val GHC.Classes.== "promotional" -> LineItemCredit_reason_codeEnumPromotional
                | val GHC.Classes.== "refund" -> LineItemCredit_reason_codeEnumRefund
                | val GHC.Classes.== "service" -> LineItemCredit_reason_codeEnumService
                | val GHC.Classes.== "write_off" -> LineItemCredit_reason_codeEnumWrite_off
                | GHC.Base.otherwise -> LineItemCredit_reason_codeOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.destination_tax_address_source@ in the specification.

The source of the address that will be used as the destinaion in determining taxes. Available only when the site is on an Elite plan. A value of \"destination\" refers to the \"Customer tax address\". A value of \"origin\" refers to the \"Business entity tax address\".
-}
data LineItemDestination_tax_address_source
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemDestination_tax_address_sourceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemDestination_tax_address_sourceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"destination"@
      LineItemDestination_tax_address_sourceEnumDestination
    | -- | Represents the JSON value @"origin"@
      LineItemDestination_tax_address_sourceEnumOrigin
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemDestination_tax_address_source where
    toJSON (LineItemDestination_tax_address_sourceOther val) = val
    toJSON (LineItemDestination_tax_address_sourceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemDestination_tax_address_sourceEnumDestination) = "destination"
    toJSON (LineItemDestination_tax_address_sourceEnumOrigin) = "origin"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemDestination_tax_address_source where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "destination" -> LineItemDestination_tax_address_sourceEnumDestination
                | val GHC.Classes.== "origin" -> LineItemDestination_tax_address_sourceEnumOrigin
                | GHC.Base.otherwise -> LineItemDestination_tax_address_sourceOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.legacy_category@ in the specification.

Category to describe the role of a line item on a legacy invoice:
- \"charges\" refers to charges being billed for on this invoice.
- \"credits\" refers to refund or proration credits. This portion of the invoice can be considered a credit memo.
- \"applied_credits\" refers to previous credits applied to this invoice. See their original_line_item_id to determine where the credit first originated.
- \"carryforwards\" can be ignored. They exist to consume any remaining credit balance. A new credit with the same amount will be created and placed back on the account.
-}
data LineItemLegacy_category
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemLegacy_categoryOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemLegacy_categoryTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"applied_credit"@
      LineItemLegacy_categoryEnumApplied_credit
    | -- | Represents the JSON value @"carryforward"@
      LineItemLegacy_categoryEnumCarryforward
    | -- | Represents the JSON value @"charge"@
      LineItemLegacy_categoryEnumCharge
    | -- | Represents the JSON value @"credit"@
      LineItemLegacy_categoryEnumCredit
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemLegacy_category where
    toJSON (LineItemLegacy_categoryOther val) = val
    toJSON (LineItemLegacy_categoryTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemLegacy_categoryEnumApplied_credit) = "applied_credit"
    toJSON (LineItemLegacy_categoryEnumCarryforward) = "carryforward"
    toJSON (LineItemLegacy_categoryEnumCharge) = "charge"
    toJSON (LineItemLegacy_categoryEnumCredit) = "credit"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemLegacy_category where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "applied_credit" -> LineItemLegacy_categoryEnumApplied_credit
                | val GHC.Classes.== "carryforward" -> LineItemLegacy_categoryEnumCarryforward
                | val GHC.Classes.== "charge" -> LineItemLegacy_categoryEnumCharge
                | val GHC.Classes.== "credit" -> LineItemLegacy_categoryEnumCredit
                | GHC.Base.otherwise -> LineItemLegacy_categoryOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.origin@ in the specification.

A credit created from an original charge will have the value of the charge\'s origin.
-}
data LineItemOrigin
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemOriginOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemOriginTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"add_on"@
      LineItemOriginEnumAdd_on
    | -- | Represents the JSON value @"add_on_trial"@
      LineItemOriginEnumAdd_on_trial
    | -- | Represents the JSON value @"carryforward"@
      LineItemOriginEnumCarryforward
    | -- | Represents the JSON value @"coupon"@
      LineItemOriginEnumCoupon
    | -- | Represents the JSON value @"credit"@
      LineItemOriginEnumCredit
    | -- | Represents the JSON value @"debit"@
      LineItemOriginEnumDebit
    | -- | Represents the JSON value @"one_time"@
      LineItemOriginEnumOne_time
    | -- | Represents the JSON value @"plan"@
      LineItemOriginEnumPlan
    | -- | Represents the JSON value @"plan_trial"@
      LineItemOriginEnumPlan_trial
    | -- | Represents the JSON value @"setup_fee"@
      LineItemOriginEnumSetup_fee
    | -- | Represents the JSON value @"prepayment"@
      LineItemOriginEnumPrepayment
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemOrigin where
    toJSON (LineItemOriginOther val) = val
    toJSON (LineItemOriginTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemOriginEnumAdd_on) = "add_on"
    toJSON (LineItemOriginEnumAdd_on_trial) = "add_on_trial"
    toJSON (LineItemOriginEnumCarryforward) = "carryforward"
    toJSON (LineItemOriginEnumCoupon) = "coupon"
    toJSON (LineItemOriginEnumCredit) = "credit"
    toJSON (LineItemOriginEnumDebit) = "debit"
    toJSON (LineItemOriginEnumOne_time) = "one_time"
    toJSON (LineItemOriginEnumPlan) = "plan"
    toJSON (LineItemOriginEnumPlan_trial) = "plan_trial"
    toJSON (LineItemOriginEnumSetup_fee) = "setup_fee"
    toJSON (LineItemOriginEnumPrepayment) = "prepayment"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemOrigin where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "add_on" -> LineItemOriginEnumAdd_on
                | val GHC.Classes.== "add_on_trial" -> LineItemOriginEnumAdd_on_trial
                | val GHC.Classes.== "carryforward" -> LineItemOriginEnumCarryforward
                | val GHC.Classes.== "coupon" -> LineItemOriginEnumCoupon
                | val GHC.Classes.== "credit" -> LineItemOriginEnumCredit
                | val GHC.Classes.== "debit" -> LineItemOriginEnumDebit
                | val GHC.Classes.== "one_time" -> LineItemOriginEnumOne_time
                | val GHC.Classes.== "plan" -> LineItemOriginEnumPlan
                | val GHC.Classes.== "plan_trial" -> LineItemOriginEnumPlan_trial
                | val GHC.Classes.== "setup_fee" -> LineItemOriginEnumSetup_fee
                | val GHC.Classes.== "prepayment" -> LineItemOriginEnumPrepayment
                | GHC.Base.otherwise -> LineItemOriginOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.origin_tax_address_source@ in the specification.

The source of the address that will be used as the origin in determining taxes. Available only when the site is on an Elite plan. A value of \"origin\" refers to the \"Business entity tax address\". A value of \"destination\" refers to the \"Customer tax address\".
-}
data LineItemOrigin_tax_address_source
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemOrigin_tax_address_sourceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemOrigin_tax_address_sourceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"origin"@
      LineItemOrigin_tax_address_sourceEnumOrigin
    | -- | Represents the JSON value @"destination"@
      LineItemOrigin_tax_address_sourceEnumDestination
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemOrigin_tax_address_source where
    toJSON (LineItemOrigin_tax_address_sourceOther val) = val
    toJSON (LineItemOrigin_tax_address_sourceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemOrigin_tax_address_sourceEnumOrigin) = "origin"
    toJSON (LineItemOrigin_tax_address_sourceEnumDestination) = "destination"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemOrigin_tax_address_source where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "origin" -> LineItemOrigin_tax_address_sourceEnumOrigin
                | val GHC.Classes.== "destination" -> LineItemOrigin_tax_address_sourceEnumDestination
                | GHC.Base.otherwise -> LineItemOrigin_tax_address_sourceOther val
            )

-- | Defines the enum schema located at @components.schemas.LineItem.properties.revenue_schedule_type@ in the specification.
data LineItemRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_invoice"@
      LineItemRevenue_schedule_typeEnumAt_invoice
    | -- | Represents the JSON value @"at_range_end"@
      LineItemRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      LineItemRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      LineItemRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      LineItemRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemRevenue_schedule_type where
    toJSON (LineItemRevenue_schedule_typeOther val) = val
    toJSON (LineItemRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemRevenue_schedule_typeEnumAt_invoice) = "at_invoice"
    toJSON (LineItemRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (LineItemRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (LineItemRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (LineItemRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_invoice" -> LineItemRevenue_schedule_typeEnumAt_invoice
                | val GHC.Classes.== "at_range_end" -> LineItemRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> LineItemRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> LineItemRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> LineItemRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> LineItemRevenue_schedule_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.state@ in the specification.

Pending line items are charges or credits on an account that have not been applied to an invoice yet. Invoiced line items will always have an \`invoice_id\` value.
-}
data LineItemState
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemStateOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemStateTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"invoiced"@
      LineItemStateEnumInvoiced
    | -- | Represents the JSON value @"pending"@
      LineItemStateEnumPending
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemState where
    toJSON (LineItemStateOther val) = val
    toJSON (LineItemStateTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemStateEnumInvoiced) = "invoiced"
    toJSON (LineItemStateEnumPending) = "pending"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemState where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "invoiced" -> LineItemStateEnumInvoiced
                | val GHC.Classes.== "pending" -> LineItemStateEnumPending
                | GHC.Base.otherwise -> LineItemStateOther val
            )

{- | Defines the enum schema located at @components.schemas.LineItem.properties.type@ in the specification.

Charges are positive line items that debit the account. Credits are negative line items that credit the account.
-}
data LineItemType
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      LineItemTypeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      LineItemTypeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"charge"@
      LineItemTypeEnumCharge
    | -- | Represents the JSON value @"credit"@
      LineItemTypeEnumCredit
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON LineItemType where
    toJSON (LineItemTypeOther val) = val
    toJSON (LineItemTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (LineItemTypeEnumCharge) = "charge"
    toJSON (LineItemTypeEnumCredit) = "credit"
instance Data.Aeson.Types.FromJSON.FromJSON LineItemType where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "charge" -> LineItemTypeEnumCharge
                | val GHC.Classes.== "credit" -> LineItemTypeEnumCredit
                | GHC.Base.otherwise -> LineItemTypeOther val
            )
