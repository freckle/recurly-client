{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentGatewayReferences
module RecurlyClient.Types.PaymentGatewayReferences where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | Defines the object schema located at @components.schemas.PaymentGatewayReferences@ in the specification.

Array of Payment Gateway References, each a reference to a third-party gateway object of varying types.
-}
data PaymentGatewayReferences = PaymentGatewayReferences
    { paymentGatewayReferencesReference_type :: (GHC.Maybe.Maybe PaymentGatewayReferencesReference_type)
    -- ^ reference_type: The type of reference token. Required if token is passed in for Stripe Gateway.
    , paymentGatewayReferencesToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ token: Reference value used when the external token was created. If Stripe gateway is used, this value will need to be accompanied by its reference_type.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentGatewayReferences where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_type" Data.Aeson.Types.ToJSON..=)) (paymentGatewayReferencesReference_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token" Data.Aeson.Types.ToJSON..=)) (paymentGatewayReferencesToken obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_type" Data.Aeson.Types.ToJSON..=)) (paymentGatewayReferencesReference_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token" Data.Aeson.Types.ToJSON..=)) (paymentGatewayReferencesToken obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PaymentGatewayReferences where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentGatewayReferences" (\obj -> (GHC.Base.pure PaymentGatewayReferences GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "reference_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "token"))

-- | Create a new 'PaymentGatewayReferences' with all required fields.
mkPaymentGatewayReferences :: PaymentGatewayReferences
mkPaymentGatewayReferences =
    PaymentGatewayReferences
        { paymentGatewayReferencesReference_type = GHC.Maybe.Nothing
        , paymentGatewayReferencesToken = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.PaymentGatewayReferences.properties.reference_type@ in the specification.

The type of reference token. Required if token is passed in for Stripe Gateway.
-}
data PaymentGatewayReferencesReference_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      PaymentGatewayReferencesReference_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      PaymentGatewayReferencesReference_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"stripe_confirmation_token"@
      PaymentGatewayReferencesReference_typeEnumStripe_confirmation_token
    | -- | Represents the JSON value @"stripe_customer"@
      PaymentGatewayReferencesReference_typeEnumStripe_customer
    | -- | Represents the JSON value @"stripe_payment_method"@
      PaymentGatewayReferencesReference_typeEnumStripe_payment_method
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentGatewayReferencesReference_type where
    toJSON (PaymentGatewayReferencesReference_typeOther val) = val
    toJSON (PaymentGatewayReferencesReference_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (PaymentGatewayReferencesReference_typeEnumStripe_confirmation_token) = "stripe_confirmation_token"
    toJSON (PaymentGatewayReferencesReference_typeEnumStripe_customer) = "stripe_customer"
    toJSON (PaymentGatewayReferencesReference_typeEnumStripe_payment_method) = "stripe_payment_method"
instance Data.Aeson.Types.FromJSON.FromJSON PaymentGatewayReferencesReference_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "stripe_confirmation_token" -> PaymentGatewayReferencesReference_typeEnumStripe_confirmation_token
                | val GHC.Classes.== "stripe_customer" -> PaymentGatewayReferencesReference_typeEnumStripe_customer
                | val GHC.Classes.== "stripe_payment_method" -> PaymentGatewayReferencesReference_typeEnumStripe_payment_method
                | GHC.Base.otherwise -> PaymentGatewayReferencesReference_typeOther val
            )
