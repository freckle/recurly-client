{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExternalSubscriptionBase
module RecurlyClient.Types.ExternalSubscriptionBase where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ExternalSubscriptionBase@ in the specification.
data ExternalSubscriptionBase = ExternalSubscriptionBase
    { externalSubscriptionBaseActivated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ activated_at: When the external subscription was activated in the external platform.
    , externalSubscriptionBaseApp_identifier :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ app_identifier: Identifier of the app that generated the external subscription.
    , externalSubscriptionBaseAuto_renew :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ auto_renew: An indication of whether or not the external subscription will auto-renew at the expiration date.
    , externalSubscriptionBaseExpires_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ expires_at: When the external subscription expires in the external platform.
    , externalSubscriptionBaseExternal_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ external_id: Id of the subscription in the external system, i.e. Apple App Store or Google Play Store.
    , externalSubscriptionBaseImported :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ imported: An indication of whether or not the external subscription was being created by a historical data import.
    , externalSubscriptionBaseLast_purchased :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ last_purchased: When a new billing event occurred on the external subscription in conjunction with a recent billing period, reactivation or upgrade\/downgrade.
    , externalSubscriptionBaseQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity: An indication of the quantity of a subscribed item\'s quantity.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , externalSubscriptionBaseState :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ state: External subscriptions can be active, canceled, expired, past_due, voided, revoked, or paused.
    , externalSubscriptionBaseTrial_ends_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ trial_ends_at: When the external subscription trial period ends in the external platform.
    , externalSubscriptionBaseTrial_started_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ trial_started_at: When the external subscription trial period started in the external platform.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ExternalSubscriptionBase where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activated_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseActivated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("app_identifier" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseApp_identifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseExpires_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_id" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseExternal_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imported" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseImported obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_purchased" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseLast_purchased obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_started_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseTrial_started_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activated_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseActivated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("app_identifier" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseApp_identifier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseExpires_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_id" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseExternal_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("imported" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseImported obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_purchased" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseLast_purchased obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_started_at" Data.Aeson.Types.ToJSON..=)) (externalSubscriptionBaseTrial_started_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ExternalSubscriptionBase where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ExternalSubscriptionBase" (\obj -> ((((((((((GHC.Base.pure ExternalSubscriptionBase GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "activated_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "app_identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "auto_renew")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "imported")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_purchased")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_ends_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_started_at"))

-- | Create a new 'ExternalSubscriptionBase' with all required fields.
mkExternalSubscriptionBase :: ExternalSubscriptionBase
mkExternalSubscriptionBase =
    ExternalSubscriptionBase
        { externalSubscriptionBaseActivated_at = GHC.Maybe.Nothing
        , externalSubscriptionBaseApp_identifier = GHC.Maybe.Nothing
        , externalSubscriptionBaseAuto_renew = GHC.Maybe.Nothing
        , externalSubscriptionBaseExpires_at = GHC.Maybe.Nothing
        , externalSubscriptionBaseExternal_id = GHC.Maybe.Nothing
        , externalSubscriptionBaseImported = GHC.Maybe.Nothing
        , externalSubscriptionBaseLast_purchased = GHC.Maybe.Nothing
        , externalSubscriptionBaseQuantity = GHC.Maybe.Nothing
        , externalSubscriptionBaseState = GHC.Maybe.Nothing
        , externalSubscriptionBaseTrial_ends_at = GHC.Maybe.Nothing
        , externalSubscriptionBaseTrial_started_at = GHC.Maybe.Nothing
        }
