{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoiceRefund
module RecurlyClient.Types.InvoiceRefund where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.LineItemRefund
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.InvoiceRefund@ in the specification.
data InvoiceRefund = InvoiceRefund
    { invoiceRefundAmount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ amount: The amount to be refunded. The amount will be split between the line items.
    -- If \`type\` is \"amount\" and no amount is specified, it will default to refunding the total refundable amount on the invoice. Can only be present if \`type\` is \"amount\".
    , invoiceRefundCredit_customer_notes :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ credit_customer_notes: Used as the Customer Notes on the credit invoice.
    --
    -- This field can only be include when the Credit Invoices feature is enabled.
    , invoiceRefundExternal_refund :: (GHC.Maybe.Maybe InvoiceRefundExternal_refund)
    -- ^ external_refund: Indicates that the refund was settled outside of Recurly, and a manual transaction should be created to track it in Recurly.
    --
    -- Required when:
    -- - refunding a manually collected charge invoice, and \`refund_method\` is not \`all_credit\`
    -- - refunding a credit invoice that refunded manually collecting invoices
    -- - refunding a credit invoice for a partial amount
    --
    -- This field can only be included when the Credit Invoices feature is enabled.
    , invoiceRefundLine_items :: (GHC.Maybe.Maybe [LineItemRefund])
    -- ^ line_items: The line items to be refunded. This is required when \`type=line_items\`.
    , invoiceRefundPercentage :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ percentage: The percentage of the remaining balance to be refunded. The percentage will be split between the line items. If \`type\` is \"percentage\" and no percentage is specified, it will default to refunding 100% of the refundable amount on the invoice. Can only be present if \`type\` is \"percentage\".
    --
    -- Constraints:
    --
    -- * Maxium  of 100.0
    -- * Minimum  of 1.0
    , invoiceRefundRefund_method :: (GHC.Maybe.Maybe InvoiceRefundRefund_method)
    -- ^ refund_method: Indicates how the invoice should be refunded when both a credit and transaction are present on the invoice:
    -- - \`transaction_first\` – Refunds the transaction first, then any amount is issued as credit back to the account. Default value when Credit Invoices feature is enabled.
    -- - \`credit_first\` – Issues credit back to the account first, then refunds any remaining amount back to the transaction. Default value when Credit Invoices feature is not enabled.
    -- - \`all_credit\` – Issues credit to the account for the entire amount of the refund. Only available when the Credit Invoices feature is enabled.
    -- - \`all_transaction\` – Refunds the entire amount back to transactions, using transactions from previous invoices if necessary. Only available when the Credit Invoices feature is enabled.
    , invoiceRefundType :: InvoiceRefundType
    -- ^ type: The type of refund. Amount and line items cannot both be specified in the request.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRefund where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceRefundAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_customer_notes" Data.Aeson.Types.ToJSON..=)) (invoiceRefundCredit_customer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_refund" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (invoiceRefundLine_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percentage" Data.Aeson.Types.ToJSON..=)) (invoiceRefundPercentage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_method" Data.Aeson.Types.ToJSON..=)) (invoiceRefundRefund_method obj) : ["type" Data.Aeson.Types.ToJSON..= invoiceRefundType obj] : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceRefundAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_customer_notes" Data.Aeson.Types.ToJSON..=)) (invoiceRefundCredit_customer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_refund" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (invoiceRefundLine_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percentage" Data.Aeson.Types.ToJSON..=)) (invoiceRefundPercentage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_method" Data.Aeson.Types.ToJSON..=)) (invoiceRefundRefund_method obj) : ["type" Data.Aeson.Types.ToJSON..= invoiceRefundType obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRefund where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceRefund" (\obj -> ((((((GHC.Base.pure InvoiceRefund GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "credit_customer_notes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_refund")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "percentage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refund_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'InvoiceRefund' with all required fields.
mkInvoiceRefund ::
    -- | 'invoiceRefundType'
    InvoiceRefundType ->
    InvoiceRefund
mkInvoiceRefund invoiceRefundType =
    InvoiceRefund
        { invoiceRefundAmount = GHC.Maybe.Nothing
        , invoiceRefundCredit_customer_notes = GHC.Maybe.Nothing
        , invoiceRefundExternal_refund = GHC.Maybe.Nothing
        , invoiceRefundLine_items = GHC.Maybe.Nothing
        , invoiceRefundPercentage = GHC.Maybe.Nothing
        , invoiceRefundRefund_method = GHC.Maybe.Nothing
        , invoiceRefundType = invoiceRefundType
        }

{- | Defines the object schema located at @components.schemas.InvoiceRefund.properties.external_refund@ in the specification.

Indicates that the refund was settled outside of Recurly, and a manual transaction should be created to track it in Recurly.

Required when:
- refunding a manually collected charge invoice, and \`refund_method\` is not \`all_credit\`
- refunding a credit invoice that refunded manually collecting invoices
- refunding a credit invoice for a partial amount

This field can only be included when the Credit Invoices feature is enabled.
-}
data InvoiceRefundExternal_refund = InvoiceRefundExternal_refund
    { invoiceRefundExternal_refundDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ description: Used as the refund transactions\' description.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , invoiceRefundExternal_refundPayment_method :: InvoiceRefundExternal_refundPayment_method
    -- ^ payment_method: Payment method used for external refund transaction.
    , invoiceRefundExternal_refundRefunded_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ refunded_at: Date the external refund payment was made. Defaults to the current date-time.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRefundExternal_refund where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refundDescription obj) : ["payment_method" Data.Aeson.Types.ToJSON..= invoiceRefundExternal_refundPayment_method obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_at" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refundRefunded_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refundDescription obj) : ["payment_method" Data.Aeson.Types.ToJSON..= invoiceRefundExternal_refundPayment_method obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refunded_at" Data.Aeson.Types.ToJSON..=)) (invoiceRefundExternal_refundRefunded_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRefundExternal_refund where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceRefundExternal_refund" (\obj -> ((GHC.Base.pure InvoiceRefundExternal_refund GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refunded_at"))

-- | Create a new 'InvoiceRefundExternal_refund' with all required fields.
mkInvoiceRefundExternal_refund ::
    -- | 'invoiceRefundExternal_refundPayment_method'
    InvoiceRefundExternal_refundPayment_method ->
    InvoiceRefundExternal_refund
mkInvoiceRefundExternal_refund invoiceRefundExternal_refundPayment_method =
    InvoiceRefundExternal_refund
        { invoiceRefundExternal_refundDescription = GHC.Maybe.Nothing
        , invoiceRefundExternal_refundPayment_method = invoiceRefundExternal_refundPayment_method
        , invoiceRefundExternal_refundRefunded_at = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.InvoiceRefund.properties.external_refund.properties.payment_method@ in the specification.

Payment method used for external refund transaction.
-}
data InvoiceRefundExternal_refundPayment_method
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      InvoiceRefundExternal_refundPayment_methodOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      InvoiceRefundExternal_refundPayment_methodTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"bacs"@
      InvoiceRefundExternal_refundPayment_methodEnumBacs
    | -- | Represents the JSON value @"ach"@
      InvoiceRefundExternal_refundPayment_methodEnumAch
    | -- | Represents the JSON value @"amazon"@
      InvoiceRefundExternal_refundPayment_methodEnumAmazon
    | -- | Represents the JSON value @"apple_pay"@
      InvoiceRefundExternal_refundPayment_methodEnumApple_pay
    | -- | Represents the JSON value @"braintree_apple_pay"@
      InvoiceRefundExternal_refundPayment_methodEnumBraintree_apple_pay
    | -- | Represents the JSON value @"check"@
      InvoiceRefundExternal_refundPayment_methodEnumCheck
    | -- | Represents the JSON value @"credit_card"@
      InvoiceRefundExternal_refundPayment_methodEnumCredit_card
    | -- | Represents the JSON value @"eft"@
      InvoiceRefundExternal_refundPayment_methodEnumEft
    | -- | Represents the JSON value @"google_pay"@
      InvoiceRefundExternal_refundPayment_methodEnumGoogle_pay
    | -- | Represents the JSON value @"money_order"@
      InvoiceRefundExternal_refundPayment_methodEnumMoney_order
    | -- | Represents the JSON value @"other"@
      InvoiceRefundExternal_refundPayment_methodEnumOther
    | -- | Represents the JSON value @"paypal"@
      InvoiceRefundExternal_refundPayment_methodEnumPaypal
    | -- | Represents the JSON value @"roku"@
      InvoiceRefundExternal_refundPayment_methodEnumRoku
    | -- | Represents the JSON value @"sepadirectdebit"@
      InvoiceRefundExternal_refundPayment_methodEnumSepadirectdebit
    | -- | Represents the JSON value @"wire_transfer"@
      InvoiceRefundExternal_refundPayment_methodEnumWire_transfer
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRefundExternal_refundPayment_method where
    toJSON (InvoiceRefundExternal_refundPayment_methodOther val) = val
    toJSON (InvoiceRefundExternal_refundPayment_methodTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumBacs) = "bacs"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumAch) = "ach"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumAmazon) = "amazon"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumApple_pay) = "apple_pay"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumBraintree_apple_pay) = "braintree_apple_pay"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumCheck) = "check"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumCredit_card) = "credit_card"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumEft) = "eft"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumGoogle_pay) = "google_pay"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumMoney_order) = "money_order"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumOther) = "other"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumPaypal) = "paypal"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumRoku) = "roku"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumSepadirectdebit) = "sepadirectdebit"
    toJSON (InvoiceRefundExternal_refundPayment_methodEnumWire_transfer) = "wire_transfer"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRefundExternal_refundPayment_method where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "bacs" -> InvoiceRefundExternal_refundPayment_methodEnumBacs
                | val GHC.Classes.== "ach" -> InvoiceRefundExternal_refundPayment_methodEnumAch
                | val GHC.Classes.== "amazon" -> InvoiceRefundExternal_refundPayment_methodEnumAmazon
                | val GHC.Classes.== "apple_pay" -> InvoiceRefundExternal_refundPayment_methodEnumApple_pay
                | val GHC.Classes.== "braintree_apple_pay" -> InvoiceRefundExternal_refundPayment_methodEnumBraintree_apple_pay
                | val GHC.Classes.== "check" -> InvoiceRefundExternal_refundPayment_methodEnumCheck
                | val GHC.Classes.== "credit_card" -> InvoiceRefundExternal_refundPayment_methodEnumCredit_card
                | val GHC.Classes.== "eft" -> InvoiceRefundExternal_refundPayment_methodEnumEft
                | val GHC.Classes.== "google_pay" -> InvoiceRefundExternal_refundPayment_methodEnumGoogle_pay
                | val GHC.Classes.== "money_order" -> InvoiceRefundExternal_refundPayment_methodEnumMoney_order
                | val GHC.Classes.== "other" -> InvoiceRefundExternal_refundPayment_methodEnumOther
                | val GHC.Classes.== "paypal" -> InvoiceRefundExternal_refundPayment_methodEnumPaypal
                | val GHC.Classes.== "roku" -> InvoiceRefundExternal_refundPayment_methodEnumRoku
                | val GHC.Classes.== "sepadirectdebit" -> InvoiceRefundExternal_refundPayment_methodEnumSepadirectdebit
                | val GHC.Classes.== "wire_transfer" -> InvoiceRefundExternal_refundPayment_methodEnumWire_transfer
                | GHC.Base.otherwise -> InvoiceRefundExternal_refundPayment_methodOther val
            )

{- | Defines the enum schema located at @components.schemas.InvoiceRefund.properties.refund_method@ in the specification.

Indicates how the invoice should be refunded when both a credit and transaction are present on the invoice:
- \`transaction_first\` – Refunds the transaction first, then any amount is issued as credit back to the account. Default value when Credit Invoices feature is enabled.
- \`credit_first\` – Issues credit back to the account first, then refunds any remaining amount back to the transaction. Default value when Credit Invoices feature is not enabled.
- \`all_credit\` – Issues credit to the account for the entire amount of the refund. Only available when the Credit Invoices feature is enabled.
- \`all_transaction\` – Refunds the entire amount back to transactions, using transactions from previous invoices if necessary. Only available when the Credit Invoices feature is enabled.
-}
data InvoiceRefundRefund_method
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      InvoiceRefundRefund_methodOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      InvoiceRefundRefund_methodTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"all_credit"@
      InvoiceRefundRefund_methodEnumAll_credit
    | -- | Represents the JSON value @"all_transaction"@
      InvoiceRefundRefund_methodEnumAll_transaction
    | -- | Represents the JSON value @"credit_first"@
      InvoiceRefundRefund_methodEnumCredit_first
    | -- | Represents the JSON value @"transaction_first"@
      InvoiceRefundRefund_methodEnumTransaction_first
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRefundRefund_method where
    toJSON (InvoiceRefundRefund_methodOther val) = val
    toJSON (InvoiceRefundRefund_methodTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (InvoiceRefundRefund_methodEnumAll_credit) = "all_credit"
    toJSON (InvoiceRefundRefund_methodEnumAll_transaction) = "all_transaction"
    toJSON (InvoiceRefundRefund_methodEnumCredit_first) = "credit_first"
    toJSON (InvoiceRefundRefund_methodEnumTransaction_first) = "transaction_first"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRefundRefund_method where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "all_credit" -> InvoiceRefundRefund_methodEnumAll_credit
                | val GHC.Classes.== "all_transaction" -> InvoiceRefundRefund_methodEnumAll_transaction
                | val GHC.Classes.== "credit_first" -> InvoiceRefundRefund_methodEnumCredit_first
                | val GHC.Classes.== "transaction_first" -> InvoiceRefundRefund_methodEnumTransaction_first
                | GHC.Base.otherwise -> InvoiceRefundRefund_methodOther val
            )

{- | Defines the enum schema located at @components.schemas.InvoiceRefund.properties.type@ in the specification.

The type of refund. Amount and line items cannot both be specified in the request.
-}
data InvoiceRefundType
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      InvoiceRefundTypeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      InvoiceRefundTypeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"amount"@
      InvoiceRefundTypeEnumAmount
    | -- | Represents the JSON value @"percentage"@
      InvoiceRefundTypeEnumPercentage
    | -- | Represents the JSON value @"line_items"@
      InvoiceRefundTypeEnumLine_items
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRefundType where
    toJSON (InvoiceRefundTypeOther val) = val
    toJSON (InvoiceRefundTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (InvoiceRefundTypeEnumAmount) = "amount"
    toJSON (InvoiceRefundTypeEnumPercentage) = "percentage"
    toJSON (InvoiceRefundTypeEnumLine_items) = "line_items"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRefundType where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "amount" -> InvoiceRefundTypeEnumAmount
                | val GHC.Classes.== "percentage" -> InvoiceRefundTypeEnumPercentage
                | val GHC.Classes.== "line_items" -> InvoiceRefundTypeEnumLine_items
                | GHC.Base.otherwise -> InvoiceRefundTypeOther val
            )
