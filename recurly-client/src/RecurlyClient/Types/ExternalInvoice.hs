{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExternalInvoice
module RecurlyClient.Types.ExternalInvoice where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AccountMini
import {-# SOURCE #-} RecurlyClient.Types.ExternalCharge
import {-# SOURCE #-} RecurlyClient.Types.ExternalSubscription
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | Defines the object schema located at @components.schemas.ExternalInvoice@ in the specification.

Invoice from an external resource such as Apple App Store or Google Play Store.
-}
data ExternalInvoice = ExternalInvoice
    { externalInvoiceAccount :: (GHC.Maybe.Maybe AccountMini)
    -- ^ account
    , externalInvoiceCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at: When the external invoice was created in Recurly.
    , externalInvoiceCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ currency: 3-letter ISO 4217 currency code.
    , externalInvoiceExternal_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ external_id: An identifier which associates the external invoice to a corresponding object in an external platform.
    , externalInvoiceExternal_subscription :: (GHC.Maybe.Maybe ExternalSubscription)
    -- ^ external_subscription: Subscription from an external resource such as Apple App Store or Google Play Store.
    , externalInvoiceId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id: System-generated unique identifier for an external invoice ID, e.g. \`e28zov4fw0v2\`.
    , externalInvoiceLine_items :: (GHC.Maybe.Maybe [ExternalCharge])
    -- ^ line_items
    , externalInvoiceObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , externalInvoicePurchased_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ purchased_at: When the invoice was created in the external platform.
    , externalInvoiceState :: (GHC.Maybe.Maybe ExternalInvoiceState)
    -- ^ state
    , externalInvoiceTotal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ total
    , externalInvoiceUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at: When the external invoice was updated in Recurly.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ExternalInvoice where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (externalInvoiceAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (externalInvoiceCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (externalInvoiceCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_id" Data.Aeson.Types.ToJSON..=)) (externalInvoiceExternal_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_subscription" Data.Aeson.Types.ToJSON..=)) (externalInvoiceExternal_subscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (externalInvoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (externalInvoiceLine_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (externalInvoiceObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchased_at" Data.Aeson.Types.ToJSON..=)) (externalInvoicePurchased_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (externalInvoiceState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (externalInvoiceTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (externalInvoiceUpdated_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (externalInvoiceAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (externalInvoiceCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (externalInvoiceCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_id" Data.Aeson.Types.ToJSON..=)) (externalInvoiceExternal_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_subscription" Data.Aeson.Types.ToJSON..=)) (externalInvoiceExternal_subscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (externalInvoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (externalInvoiceLine_items obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (externalInvoiceObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchased_at" Data.Aeson.Types.ToJSON..=)) (externalInvoicePurchased_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (externalInvoiceState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (externalInvoiceTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (externalInvoiceUpdated_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ExternalInvoice where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ExternalInvoice" (\obj -> (((((((((((GHC.Base.pure ExternalInvoice GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "purchased_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at"))

-- | Create a new 'ExternalInvoice' with all required fields.
mkExternalInvoice :: ExternalInvoice
mkExternalInvoice =
    ExternalInvoice
        { externalInvoiceAccount = GHC.Maybe.Nothing
        , externalInvoiceCreated_at = GHC.Maybe.Nothing
        , externalInvoiceCurrency = GHC.Maybe.Nothing
        , externalInvoiceExternal_id = GHC.Maybe.Nothing
        , externalInvoiceExternal_subscription = GHC.Maybe.Nothing
        , externalInvoiceId = GHC.Maybe.Nothing
        , externalInvoiceLine_items = GHC.Maybe.Nothing
        , externalInvoiceObject = GHC.Maybe.Nothing
        , externalInvoicePurchased_at = GHC.Maybe.Nothing
        , externalInvoiceState = GHC.Maybe.Nothing
        , externalInvoiceTotal = GHC.Maybe.Nothing
        , externalInvoiceUpdated_at = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.ExternalInvoice.properties.state@ in the specification.
data ExternalInvoiceState
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ExternalInvoiceStateOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ExternalInvoiceStateTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"paid"@
      ExternalInvoiceStateEnumPaid
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ExternalInvoiceState where
    toJSON (ExternalInvoiceStateOther val) = val
    toJSON (ExternalInvoiceStateTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ExternalInvoiceStateEnumPaid) = "paid"
instance Data.Aeson.Types.FromJSON.FromJSON ExternalInvoiceState where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "paid" -> ExternalInvoiceStateEnumPaid
                | GHC.Base.otherwise -> ExternalInvoiceStateOther val
            )
