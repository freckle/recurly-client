{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SubscriptionCreate
module RecurlyClient.Types.SubscriptionCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.AccountCreate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionAddOnCreate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionRampInterval
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionShippingCreate
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SubscriptionCreate@ in the specification.
data SubscriptionCreate = SubscriptionCreate
    { subscriptionCreateAccount :: AccountCreate
    -- ^ account
    , subscriptionCreateAdd_ons :: (GHC.Maybe.Maybe [SubscriptionAddOnCreate])
    -- ^ add_ons
    , subscriptionCreateAuto_renew :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ auto_renew: Whether the subscription renews at the end of its term.
    , subscriptionCreateBilling_info_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ billing_info_id: The \`billing_info_id\` is the value that represents a specific billing info for an end customer. When \`billing_info_id\` is used to assign billing info to the subscription, all future billing events for the subscription will bill to the specified billing info. \`billing_info_id\` can ONLY be used for sites utilizing the Wallet feature.
    , subscriptionCreateBulk :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ bulk: Optional field to be used only when needing to bypass the 60 second limit on creating subscriptions. Should only be used when creating subscriptions in bulk from the API.
    , subscriptionCreateBusiness_entity_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ business_entity_code: The \`business_entity_code\` is the value that represents a specific business entity for an end customer. When \`business_entity_code\` is used to assign a business entity to the subscription, all future billing events for the subscription will bill to the specified business entity. Available when the \`Multiple Business Entities\` feature is enabled. If both \`business_entity_id\` and \`business_entity_code\` are present, \`business_entity_id\` will be used.
    , subscriptionCreateBusiness_entity_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ business_entity_id: The \`business_entity_id\` is the value that represents a specific business entity for an end customer. When \`business_entity_id\` is used to assign a business entity to the subscription, all future billing events for the subscription will bill to the specified business entity. Available when the \`Multiple Business Entities\` feature is enabled. If both \`business_entity_id\` and \`business_entity_code\` are present, \`business_entity_id\` will be used.
    , subscriptionCreateCollection_method :: (GHC.Maybe.Maybe SubscriptionCreateCollection_method)
    -- ^ collection_method
    , subscriptionCreateCoupon_codes :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ coupon_codes: A list of coupon_codes to be redeemed on the subscription or account during the purchase.
    , subscriptionCreateCredit_customer_notes :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ credit_customer_notes: If there are pending credits on the account that will be invoiced during the subscription creation, these will be used as the Customer Notes on the credit invoice.
    , subscriptionCreateCurrency :: Data.Text.Internal.Text
    -- ^ currency: 3-letter ISO 4217 currency code.
    --
    -- Constraints:
    --
    -- * Maximum length of 3
    , subscriptionCreateCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , subscriptionCreateCustomer_notes :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ customer_notes: This will default to the Customer Notes text specified on the Invoice Settings. Specify custom notes to add or override Customer Notes. Custom notes will stay with a subscription on all renewals.
    , subscriptionCreateGateway_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ gateway_code: If present, this subscription\'s transactions will use the payment gateway with this code.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , subscriptionCreateGift_card_redemption_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ gift_card_redemption_code: A gift card redemption code to be redeemed on the purchase invoice.
    , subscriptionCreateNet_terms :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ net_terms: Integer paired with \`Net Terms Type\` and representing the number
    -- of days past the current date (for \`net\` Net Terms Type) or days after
    -- the last day of the current month (for \`eom\` Net Terms Type) that the
    -- invoice will become past due. For \`manual\` collection method, an additional 24 hours is
    -- added to ensure the customer has the entire last day to make payment before
    -- becoming past due. For example:
    --
    -- If an invoice is due \`net 0\`, it is due \'On Receipt\' and will become past due 24 hours after it\'s created.
    -- If an invoice is due \`net 30\`, it will become past due at 31 days exactly.
    -- If an invoice is due \`eom 30\`, it will become past due 31 days from the last day of the current month.
    --
    -- For \`automatic\` collection method, the additional 24 hours is not added. For example, On-Receipt is due immediately, and \`net 30\` will become due exactly 30 days from invoice generation, at which point Recurly will attempt collection.
    -- When \`eom\` Net Terms Type is passed, the value for \`Net Terms\` is restricted to \`0, 15, 30, 45, 60, or 90\`.
    --
    -- For more information on how net terms work with \`manual\` collection visit our docs page (https:\/\/docs.recurly.com\/docs\/manual-payments\#section-collection-terms)
    -- or visit (https:\/\/docs.recurly.com\/docs\/automatic-invoicing-terms\#section-collection-terms) for information about net terms using \`automatic\` collection.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , subscriptionCreateNet_terms_type :: (GHC.Maybe.Maybe SubscriptionCreateNet_terms_type)
    -- ^ net_terms_type: Optionally supplied string that may be either \`net\` or \`eom\` (end-of-month).
    -- When \`net\`, an invoice becomes past due the specified number of \`Net Terms\` days from the current date.
    -- When \`eom\` an invoice becomes past due the specified number of \`Net Terms\` days from the last day of the current month.
    , subscriptionCreateNext_bill_date :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ next_bill_date: If present, this sets the date the subscription\'s next billing period will start (\`current_period_ends_at\`). This can be used to align the subscriptionâ€™s billing to a specific day of the month. The initial invoice will be prorated for the period between the subscription\'s activation date and the billing period end date. Subsequent periods will be based off the plan interval. For a subscription with a trial period, this will change when the trial expires.
    , subscriptionCreatePlan_code :: Data.Text.Internal.Text
    -- ^ plan_code: You must provide either a \`plan_code\` or \`plan_id\`. If both are provided the \`plan_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , subscriptionCreatePlan_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_id: You must provide either a \`plan_code\` or \`plan_id\`. If both are provided the \`plan_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , subscriptionCreatePo_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ po_number: For manual invoicing, this identifies the PO number associated with the subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , subscriptionCreateQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity: Optionally override the default quantity of 1.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , subscriptionCreateRamp_intervals :: (GHC.Maybe.Maybe [SubscriptionRampInterval])
    -- ^ ramp_intervals: The new set of ramp intervals for the subscription.
    , subscriptionCreateRenewal_billing_cycles :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ renewal_billing_cycles: If \`auto_renew=true\`, when a term completes, \`total_billing_cycles\` takes this value as the length of subsequent terms. Defaults to the plan\'s \`total_billing_cycles\`.
    , subscriptionCreateRevenue_schedule_type :: (GHC.Maybe.Maybe SubscriptionCreateRevenue_schedule_type)
    -- ^ revenue_schedule_type
    , subscriptionCreateShipping :: (GHC.Maybe.Maybe SubscriptionShippingCreate)
    -- ^ shipping
    , subscriptionCreateStarts_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ starts_at: If set, the subscription will begin in the future on this date. The subscription will apply the setup fee and trial period, unless the plan has no trial.
    , subscriptionCreateTax_inclusive :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_inclusive: Determines whether or not tax is included in the unit amount. The Tax Inclusive Pricing feature (separate from the Mixed Tax Pricing feature) must be enabled to use this flag.
    , subscriptionCreateTerms_and_conditions :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ terms_and_conditions: This will default to the Terms and Conditions text specified on the Invoice Settings page in your Recurly admin. Specify custom notes to add or override Terms and Conditions. Custom notes will stay with a subscription on all renewals.
    , subscriptionCreateTotal_billing_cycles :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ total_billing_cycles: The number of cycles\/billing periods in a term. When \`remaining_billing_cycles=0\`, if \`auto_renew=true\` the subscription will renew and a new term will begin, otherwise the subscription will expire.
    --
    -- Constraints:
    --
    -- * Minimum  of 1.0
    , subscriptionCreateTransaction_type :: (GHC.Maybe.Maybe SubscriptionCreateTransaction_type)
    -- ^ transaction_type: An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
    , subscriptionCreateTrial_ends_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ trial_ends_at: If set, overrides the default trial behavior for the subscription. When the current date time or a past date time is provided the subscription will begin with no trial phase (overriding any plan default trial). When a future date time is provided the subscription will begin with a trial phase ending at the specified date time.
    , subscriptionCreateUnit_amount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ unit_amount: Override the unit amount of the subscription plan by setting this value. If not provided, the subscription will inherit the price from the subscription plan for the provided currency.
    --
    -- Constraints:
    --
    -- * Maxium  of 1000000.0
    -- * Minimum  of 0.0
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["account" Data.Aeson.Types.ToJSON..= subscriptionCreateAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBilling_info_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBulk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBusiness_entity_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBusiness_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCollection_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_codes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCoupon_codes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_customer_notes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCredit_customer_notes obj) : ["currency" Data.Aeson.Types.ToJSON..= subscriptionCreateCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_notes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCustomer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gift_card_redemption_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateGift_card_redemption_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNet_terms_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_bill_date" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNext_bill_date obj) : ["plan_code" Data.Aeson.Types.ToJSON..= subscriptionCreatePlan_code obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (subscriptionCreatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("renewal_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRenewal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("starts_at" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateStarts_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_and_conditions" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTerms_and_conditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTotal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateUnit_amount obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["account" Data.Aeson.Types.ToJSON..= subscriptionCreateAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_renew" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateAuto_renew obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBilling_info_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bulk" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBulk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBusiness_entity_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateBusiness_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCollection_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_codes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCoupon_codes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credit_customer_notes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCredit_customer_notes obj) : ["currency" Data.Aeson.Types.ToJSON..= subscriptionCreateCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_notes" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateCustomer_notes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gateway_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateGateway_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gift_card_redemption_code" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateGift_card_redemption_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNet_terms_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_bill_date" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateNext_bill_date obj) : ["plan_code" Data.Aeson.Types.ToJSON..= subscriptionCreatePlan_code obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (subscriptionCreatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("renewal_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRenewal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("starts_at" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateStarts_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_and_conditions" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTerms_and_conditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_billing_cycles" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTotal_billing_cycles obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_ends_at" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateTrial_ends_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionCreateUnit_amount obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionCreate" (\obj -> ((((((((((((((((((((((((((((((((GHC.Base.pure SubscriptionCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_ons")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "auto_renew")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_info_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bulk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_entity_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_entity_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "collection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "coupon_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "credit_customer_notes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer_notes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gift_card_redemption_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "net_terms")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "net_terms_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "next_bill_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "plan_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "po_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ramp_intervals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "renewal_billing_cycles")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "starts_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "terms_and_conditions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "total_billing_cycles")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_ends_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount"))

-- | Create a new 'SubscriptionCreate' with all required fields.
mkSubscriptionCreate ::
    -- | 'subscriptionCreateAccount'
    AccountCreate ->
    -- | 'subscriptionCreateCurrency'
    Data.Text.Internal.Text ->
    -- | 'subscriptionCreatePlan_code'
    Data.Text.Internal.Text ->
    SubscriptionCreate
mkSubscriptionCreate subscriptionCreateAccount subscriptionCreateCurrency subscriptionCreatePlan_code =
    SubscriptionCreate
        { subscriptionCreateAccount = subscriptionCreateAccount
        , subscriptionCreateAdd_ons = GHC.Maybe.Nothing
        , subscriptionCreateAuto_renew = GHC.Maybe.Nothing
        , subscriptionCreateBilling_info_id = GHC.Maybe.Nothing
        , subscriptionCreateBulk = GHC.Maybe.Nothing
        , subscriptionCreateBusiness_entity_code = GHC.Maybe.Nothing
        , subscriptionCreateBusiness_entity_id = GHC.Maybe.Nothing
        , subscriptionCreateCollection_method = GHC.Maybe.Nothing
        , subscriptionCreateCoupon_codes = GHC.Maybe.Nothing
        , subscriptionCreateCredit_customer_notes = GHC.Maybe.Nothing
        , subscriptionCreateCurrency = subscriptionCreateCurrency
        , subscriptionCreateCustom_fields = GHC.Maybe.Nothing
        , subscriptionCreateCustomer_notes = GHC.Maybe.Nothing
        , subscriptionCreateGateway_code = GHC.Maybe.Nothing
        , subscriptionCreateGift_card_redemption_code = GHC.Maybe.Nothing
        , subscriptionCreateNet_terms = GHC.Maybe.Nothing
        , subscriptionCreateNet_terms_type = GHC.Maybe.Nothing
        , subscriptionCreateNext_bill_date = GHC.Maybe.Nothing
        , subscriptionCreatePlan_code = subscriptionCreatePlan_code
        , subscriptionCreatePlan_id = GHC.Maybe.Nothing
        , subscriptionCreatePo_number = GHC.Maybe.Nothing
        , subscriptionCreateQuantity = GHC.Maybe.Nothing
        , subscriptionCreateRamp_intervals = GHC.Maybe.Nothing
        , subscriptionCreateRenewal_billing_cycles = GHC.Maybe.Nothing
        , subscriptionCreateRevenue_schedule_type = GHC.Maybe.Nothing
        , subscriptionCreateShipping = GHC.Maybe.Nothing
        , subscriptionCreateStarts_at = GHC.Maybe.Nothing
        , subscriptionCreateTax_inclusive = GHC.Maybe.Nothing
        , subscriptionCreateTerms_and_conditions = GHC.Maybe.Nothing
        , subscriptionCreateTotal_billing_cycles = GHC.Maybe.Nothing
        , subscriptionCreateTransaction_type = GHC.Maybe.Nothing
        , subscriptionCreateTrial_ends_at = GHC.Maybe.Nothing
        , subscriptionCreateUnit_amount = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.SubscriptionCreate.properties.collection_method@ in the specification.
data SubscriptionCreateCollection_method
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionCreateCollection_methodOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionCreateCollection_methodTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"automatic"@
      SubscriptionCreateCollection_methodEnumAutomatic
    | -- | Represents the JSON value @"manual"@
      SubscriptionCreateCollection_methodEnumManual
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionCreateCollection_method where
    toJSON (SubscriptionCreateCollection_methodOther val) = val
    toJSON (SubscriptionCreateCollection_methodTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionCreateCollection_methodEnumAutomatic) = "automatic"
    toJSON (SubscriptionCreateCollection_methodEnumManual) = "manual"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionCreateCollection_method where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "automatic" -> SubscriptionCreateCollection_methodEnumAutomatic
                | val GHC.Classes.== "manual" -> SubscriptionCreateCollection_methodEnumManual
                | GHC.Base.otherwise -> SubscriptionCreateCollection_methodOther val
            )

{- | Defines the enum schema located at @components.schemas.SubscriptionCreate.properties.net_terms_type@ in the specification.

Optionally supplied string that may be either \`net\` or \`eom\` (end-of-month).
When \`net\`, an invoice becomes past due the specified number of \`Net Terms\` days from the current date.
When \`eom\` an invoice becomes past due the specified number of \`Net Terms\` days from the last day of the current month.
-}
data SubscriptionCreateNet_terms_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionCreateNet_terms_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionCreateNet_terms_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"net"@
      SubscriptionCreateNet_terms_typeEnumNet
    | -- | Represents the JSON value @"eom"@
      SubscriptionCreateNet_terms_typeEnumEom
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionCreateNet_terms_type where
    toJSON (SubscriptionCreateNet_terms_typeOther val) = val
    toJSON (SubscriptionCreateNet_terms_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionCreateNet_terms_typeEnumNet) = "net"
    toJSON (SubscriptionCreateNet_terms_typeEnumEom) = "eom"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionCreateNet_terms_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "net" -> SubscriptionCreateNet_terms_typeEnumNet
                | val GHC.Classes.== "eom" -> SubscriptionCreateNet_terms_typeEnumEom
                | GHC.Base.otherwise -> SubscriptionCreateNet_terms_typeOther val
            )

-- | Defines the enum schema located at @components.schemas.SubscriptionCreate.properties.revenue_schedule_type@ in the specification.
data SubscriptionCreateRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionCreateRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionCreateRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_range_end"@
      SubscriptionCreateRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      SubscriptionCreateRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      SubscriptionCreateRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      SubscriptionCreateRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionCreateRevenue_schedule_type where
    toJSON (SubscriptionCreateRevenue_schedule_typeOther val) = val
    toJSON (SubscriptionCreateRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionCreateRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (SubscriptionCreateRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (SubscriptionCreateRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (SubscriptionCreateRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionCreateRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_range_end" -> SubscriptionCreateRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> SubscriptionCreateRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> SubscriptionCreateRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> SubscriptionCreateRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> SubscriptionCreateRevenue_schedule_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.SubscriptionCreate.properties.transaction_type@ in the specification.

An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
-}
data SubscriptionCreateTransaction_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionCreateTransaction_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionCreateTransaction_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"moto"@
      SubscriptionCreateTransaction_typeEnumMoto
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionCreateTransaction_type where
    toJSON (SubscriptionCreateTransaction_typeOther val) = val
    toJSON (SubscriptionCreateTransaction_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionCreateTransaction_typeEnumMoto) = "moto"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionCreateTransaction_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "moto" -> SubscriptionCreateTransaction_typeEnumMoto
                | GHC.Base.otherwise -> SubscriptionCreateTransaction_typeOther val
            )
