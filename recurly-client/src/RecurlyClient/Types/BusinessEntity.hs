{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BusinessEntity
module RecurlyClient.Types.BusinessEntity where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.Address
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | Defines the object schema located at @components.schemas.BusinessEntity@ in the specification.

Business entity details
-}
data BusinessEntity = BusinessEntity
    { businessEntityCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ code: The entity code of the business entity.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , businessEntityCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , businessEntityDefault_liability_gl_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ default_liability_gl_account_id: The ID of a general ledger account. General ledger accounts are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , businessEntityDefault_registration_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ default_registration_number: Registration number for the customer used on the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    , businessEntityDefault_revenue_gl_account_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ default_revenue_gl_account_id: The ID of a general ledger account. General ledger accounts are
    -- only accessible as a part of the Recurly RevRec Standard and
    -- Recurly RevRec Advanced features.
    --
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , businessEntityDefault_vat_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ default_vat_number: VAT number for the customer used on the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    , businessEntityDestination_tax_address_source :: (GHC.Maybe.Maybe BusinessEntityDestination_tax_address_source)
    -- ^ destination_tax_address_source: The source of the address that will be used as the destinaion in determining taxes. Available only when the site is on an Elite plan. A value of \"destination\" refers to the \"Customer tax address\". A value of \"origin\" refers to the \"Business entity tax address\".
    , businessEntityId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , businessEntityInvoice_display_address :: (GHC.Maybe.Maybe Address)
    -- ^ invoice_display_address
    , businessEntityName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ name: This name describes your business entity and will appear on the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , businessEntityObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , businessEntityOrigin_tax_address_source :: (GHC.Maybe.Maybe BusinessEntityOrigin_tax_address_source)
    -- ^ origin_tax_address_source: The source of the address that will be used as the origin in determining taxes. Available only when the site is on an Elite plan. A value of \"origin\" refers to the \"Business entity tax address\". A value of \"destination\" refers to the \"Customer tax address\".
    , businessEntitySubscriber_location_countries :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ subscriber_location_countries: List of countries for which the business entity will be used.
    , businessEntityTax_address :: (GHC.Maybe.Maybe Address)
    -- ^ tax_address
    , businessEntityUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON BusinessEntity where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (businessEntityCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (businessEntityCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_liability_gl_account_id" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_liability_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_registration_number" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_registration_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_revenue_gl_account_id" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_revenue_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_vat_number" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_vat_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_tax_address_source" Data.Aeson.Types.ToJSON..=)) (businessEntityDestination_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (businessEntityId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_display_address" Data.Aeson.Types.ToJSON..=)) (businessEntityInvoice_display_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (businessEntityName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (businessEntityObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin_tax_address_source" Data.Aeson.Types.ToJSON..=)) (businessEntityOrigin_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscriber_location_countries" Data.Aeson.Types.ToJSON..=)) (businessEntitySubscriber_location_countries obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_address" Data.Aeson.Types.ToJSON..=)) (businessEntityTax_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (businessEntityUpdated_at obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (businessEntityCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (businessEntityCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_liability_gl_account_id" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_liability_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_registration_number" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_registration_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_revenue_gl_account_id" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_revenue_gl_account_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_vat_number" Data.Aeson.Types.ToJSON..=)) (businessEntityDefault_vat_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_tax_address_source" Data.Aeson.Types.ToJSON..=)) (businessEntityDestination_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (businessEntityId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_display_address" Data.Aeson.Types.ToJSON..=)) (businessEntityInvoice_display_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (businessEntityName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (businessEntityObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origin_tax_address_source" Data.Aeson.Types.ToJSON..=)) (businessEntityOrigin_tax_address_source obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscriber_location_countries" Data.Aeson.Types.ToJSON..=)) (businessEntitySubscriber_location_countries obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_address" Data.Aeson.Types.ToJSON..=)) (businessEntityTax_address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (businessEntityUpdated_at obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON BusinessEntity where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "BusinessEntity" (\obj -> ((((((((((((((GHC.Base.pure BusinessEntity GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_liability_gl_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_registration_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_revenue_gl_account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_vat_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "destination_tax_address_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_display_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "origin_tax_address_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscriber_location_countries")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at"))

-- | Create a new 'BusinessEntity' with all required fields.
mkBusinessEntity :: BusinessEntity
mkBusinessEntity =
    BusinessEntity
        { businessEntityCode = GHC.Maybe.Nothing
        , businessEntityCreated_at = GHC.Maybe.Nothing
        , businessEntityDefault_liability_gl_account_id = GHC.Maybe.Nothing
        , businessEntityDefault_registration_number = GHC.Maybe.Nothing
        , businessEntityDefault_revenue_gl_account_id = GHC.Maybe.Nothing
        , businessEntityDefault_vat_number = GHC.Maybe.Nothing
        , businessEntityDestination_tax_address_source = GHC.Maybe.Nothing
        , businessEntityId = GHC.Maybe.Nothing
        , businessEntityInvoice_display_address = GHC.Maybe.Nothing
        , businessEntityName = GHC.Maybe.Nothing
        , businessEntityObject = GHC.Maybe.Nothing
        , businessEntityOrigin_tax_address_source = GHC.Maybe.Nothing
        , businessEntitySubscriber_location_countries = GHC.Maybe.Nothing
        , businessEntityTax_address = GHC.Maybe.Nothing
        , businessEntityUpdated_at = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @components.schemas.BusinessEntity.properties.destination_tax_address_source@ in the specification.

The source of the address that will be used as the destinaion in determining taxes. Available only when the site is on an Elite plan. A value of \"destination\" refers to the \"Customer tax address\". A value of \"origin\" refers to the \"Business entity tax address\".
-}
data BusinessEntityDestination_tax_address_source
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BusinessEntityDestination_tax_address_sourceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BusinessEntityDestination_tax_address_sourceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"destination"@
      BusinessEntityDestination_tax_address_sourceEnumDestination
    | -- | Represents the JSON value @"origin"@
      BusinessEntityDestination_tax_address_sourceEnumOrigin
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BusinessEntityDestination_tax_address_source where
    toJSON (BusinessEntityDestination_tax_address_sourceOther val) = val
    toJSON (BusinessEntityDestination_tax_address_sourceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BusinessEntityDestination_tax_address_sourceEnumDestination) = "destination"
    toJSON (BusinessEntityDestination_tax_address_sourceEnumOrigin) = "origin"
instance Data.Aeson.Types.FromJSON.FromJSON BusinessEntityDestination_tax_address_source where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "destination" -> BusinessEntityDestination_tax_address_sourceEnumDestination
                | val GHC.Classes.== "origin" -> BusinessEntityDestination_tax_address_sourceEnumOrigin
                | GHC.Base.otherwise -> BusinessEntityDestination_tax_address_sourceOther val
            )

{- | Defines the enum schema located at @components.schemas.BusinessEntity.properties.origin_tax_address_source@ in the specification.

The source of the address that will be used as the origin in determining taxes. Available only when the site is on an Elite plan. A value of \"origin\" refers to the \"Business entity tax address\". A value of \"destination\" refers to the \"Customer tax address\".
-}
data BusinessEntityOrigin_tax_address_source
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      BusinessEntityOrigin_tax_address_sourceOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      BusinessEntityOrigin_tax_address_sourceTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"origin"@
      BusinessEntityOrigin_tax_address_sourceEnumOrigin
    | -- | Represents the JSON value @"destination"@
      BusinessEntityOrigin_tax_address_sourceEnumDestination
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON BusinessEntityOrigin_tax_address_source where
    toJSON (BusinessEntityOrigin_tax_address_sourceOther val) = val
    toJSON (BusinessEntityOrigin_tax_address_sourceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (BusinessEntityOrigin_tax_address_sourceEnumOrigin) = "origin"
    toJSON (BusinessEntityOrigin_tax_address_sourceEnumDestination) = "destination"
instance Data.Aeson.Types.FromJSON.FromJSON BusinessEntityOrigin_tax_address_source where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "origin" -> BusinessEntityOrigin_tax_address_sourceEnumOrigin
                | val GHC.Classes.== "destination" -> BusinessEntityOrigin_tax_address_sourceEnumDestination
                | GHC.Base.otherwise -> BusinessEntityOrigin_tax_address_sourceOther val
            )
