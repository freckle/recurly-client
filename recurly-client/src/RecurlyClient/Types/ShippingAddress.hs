{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ShippingAddress
module RecurlyClient.Types.ShippingAddress where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ShippingAddress@ in the specification.
data ShippingAddress = ShippingAddress
    { shippingAddressAccount_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ account_id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , shippingAddressCity :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ city
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ company
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressCountry :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ country: Country, 2-letter ISO 3166-1 alpha-2 code.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , shippingAddressCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , shippingAddressEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ email
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressFirst_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressGeo_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ geo_code: Code that represents a geographic entity (location or object). Only returned for Sling Vertex Integration
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    , shippingAddressId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , shippingAddressLast_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressNickname :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ nickname
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , shippingAddressPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ phone
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    , shippingAddressPostal_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ postal_code: Zip or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    , shippingAddressRegion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ region: State or province.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressStreet1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ street1
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressStreet2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ street2
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    , shippingAddressUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    , shippingAddressVat_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ vat_number
    --
    -- Constraints:
    --
    -- * Maximum length of 20
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ShippingAddress where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_id" Data.Aeson.Types.ToJSON..=)) (shippingAddressAccount_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (shippingAddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (shippingAddressCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (shippingAddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (shippingAddressCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (shippingAddressEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (shippingAddressFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("geo_code" Data.Aeson.Types.ToJSON..=)) (shippingAddressGeo_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (shippingAddressId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (shippingAddressLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nickname" Data.Aeson.Types.ToJSON..=)) (shippingAddressNickname obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (shippingAddressObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (shippingAddressPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (shippingAddressPostal_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("region" Data.Aeson.Types.ToJSON..=)) (shippingAddressRegion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("street1" Data.Aeson.Types.ToJSON..=)) (shippingAddressStreet1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("street2" Data.Aeson.Types.ToJSON..=)) (shippingAddressStreet2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (shippingAddressUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (shippingAddressVat_number obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_id" Data.Aeson.Types.ToJSON..=)) (shippingAddressAccount_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (shippingAddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (shippingAddressCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (shippingAddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (shippingAddressCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (shippingAddressEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (shippingAddressFirst_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("geo_code" Data.Aeson.Types.ToJSON..=)) (shippingAddressGeo_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (shippingAddressId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (shippingAddressLast_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nickname" Data.Aeson.Types.ToJSON..=)) (shippingAddressNickname obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (shippingAddressObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (shippingAddressPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (shippingAddressPostal_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("region" Data.Aeson.Types.ToJSON..=)) (shippingAddressRegion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("street1" Data.Aeson.Types.ToJSON..=)) (shippingAddressStreet1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("street2" Data.Aeson.Types.ToJSON..=)) (shippingAddressStreet2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (shippingAddressUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_number" Data.Aeson.Types.ToJSON..=)) (shippingAddressVat_number obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ShippingAddress where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ShippingAddress" (\obj -> ((((((((((((((((((GHC.Base.pure ShippingAddress GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "geo_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nickname")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "region")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "street1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "street2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_number"))

-- | Create a new 'ShippingAddress' with all required fields.
mkShippingAddress :: ShippingAddress
mkShippingAddress =
    ShippingAddress
        { shippingAddressAccount_id = GHC.Maybe.Nothing
        , shippingAddressCity = GHC.Maybe.Nothing
        , shippingAddressCompany = GHC.Maybe.Nothing
        , shippingAddressCountry = GHC.Maybe.Nothing
        , shippingAddressCreated_at = GHC.Maybe.Nothing
        , shippingAddressEmail = GHC.Maybe.Nothing
        , shippingAddressFirst_name = GHC.Maybe.Nothing
        , shippingAddressGeo_code = GHC.Maybe.Nothing
        , shippingAddressId = GHC.Maybe.Nothing
        , shippingAddressLast_name = GHC.Maybe.Nothing
        , shippingAddressNickname = GHC.Maybe.Nothing
        , shippingAddressObject = GHC.Maybe.Nothing
        , shippingAddressPhone = GHC.Maybe.Nothing
        , shippingAddressPostal_code = GHC.Maybe.Nothing
        , shippingAddressRegion = GHC.Maybe.Nothing
        , shippingAddressStreet1 = GHC.Maybe.Nothing
        , shippingAddressStreet2 = GHC.Maybe.Nothing
        , shippingAddressUpdated_at = GHC.Maybe.Nothing
        , shippingAddressVat_number = GHC.Maybe.Nothing
        }
