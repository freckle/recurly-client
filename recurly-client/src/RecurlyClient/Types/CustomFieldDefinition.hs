{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema CustomFieldDefinition
module RecurlyClient.Types.CustomFieldDefinition where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.CustomFieldDefinition@ in the specification.
data CustomFieldDefinition = CustomFieldDefinition
    { customFieldDefinitionCreated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ created_at
    , customFieldDefinitionDeleted_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ deleted_at: Definitions are initially soft deleted, and once all the values are removed from the accouts or subscriptions, will be hard deleted an no longer visible.
    , customFieldDefinitionDisplay_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ display_name: Used to label the field when viewing and editing the field in Recurly\'s admin UI.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , customFieldDefinitionId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ id
    , customFieldDefinitionName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ name: Used by the API to identify the field or reading and writing. The name can only be used once per Recurly object type.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'\/^[a-z0-9_-]+\$\/i\'
    , customFieldDefinitionObject :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ object
    , customFieldDefinitionRelated_type :: (GHC.Maybe.Maybe CustomFieldDefinitionRelated_type)
    -- ^ related_type
    , customFieldDefinitionTooltip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ tooltip: Displayed as a tooltip when editing the field in the Recurly admin UI.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    -- * Must match pattern \'\/^[a-z0-9_-]+\$\/i\'
    , customFieldDefinitionUpdated_at :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ updated_at
    , customFieldDefinitionUser_access :: (GHC.Maybe.Maybe CustomFieldDefinitionUser_access)
    -- ^ user_access: The access control applied inside Recurly\'s admin UI:
    -- - \`api_only\` - No one will be able to view or edit this field\'s data via the admin UI.
    -- - \`read_only\` - Users with the Customers role will be able to view this field\'s data via the admin UI, but
    --   editing will only be available via the API.
    -- - \`write\` - Users with the Customers role will be able to view and edit this field\'s data via the admin UI.
    -- - \`set_only\` - Users with the Customers role will be able to set this field\'s data via the admin console.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON CustomFieldDefinition where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionDeleted_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionDisplay_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("related_type" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionRelated_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tooltip" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionTooltip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_access" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionUser_access obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionCreated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionDeleted_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionDisplay_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("related_type" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionRelated_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tooltip" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionTooltip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("updated_at" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionUpdated_at obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_access" Data.Aeson.Types.ToJSON..=)) (customFieldDefinitionUser_access obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON CustomFieldDefinition where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "CustomFieldDefinition" (\obj -> (((((((((GHC.Base.pure CustomFieldDefinition GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deleted_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "related_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tooltip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "updated_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "user_access"))

-- | Create a new 'CustomFieldDefinition' with all required fields.
mkCustomFieldDefinition :: CustomFieldDefinition
mkCustomFieldDefinition =
    CustomFieldDefinition
        { customFieldDefinitionCreated_at = GHC.Maybe.Nothing
        , customFieldDefinitionDeleted_at = GHC.Maybe.Nothing
        , customFieldDefinitionDisplay_name = GHC.Maybe.Nothing
        , customFieldDefinitionId = GHC.Maybe.Nothing
        , customFieldDefinitionName = GHC.Maybe.Nothing
        , customFieldDefinitionObject = GHC.Maybe.Nothing
        , customFieldDefinitionRelated_type = GHC.Maybe.Nothing
        , customFieldDefinitionTooltip = GHC.Maybe.Nothing
        , customFieldDefinitionUpdated_at = GHC.Maybe.Nothing
        , customFieldDefinitionUser_access = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.CustomFieldDefinition.properties.related_type@ in the specification.
data CustomFieldDefinitionRelated_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CustomFieldDefinitionRelated_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CustomFieldDefinitionRelated_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"account"@
      CustomFieldDefinitionRelated_typeEnumAccount
    | -- | Represents the JSON value @"item"@
      CustomFieldDefinitionRelated_typeEnumItem
    | -- | Represents the JSON value @"plan"@
      CustomFieldDefinitionRelated_typeEnumPlan
    | -- | Represents the JSON value @"subscription"@
      CustomFieldDefinitionRelated_typeEnumSubscription
    | -- | Represents the JSON value @"charge"@
      CustomFieldDefinitionRelated_typeEnumCharge
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CustomFieldDefinitionRelated_type where
    toJSON (CustomFieldDefinitionRelated_typeOther val) = val
    toJSON (CustomFieldDefinitionRelated_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CustomFieldDefinitionRelated_typeEnumAccount) = "account"
    toJSON (CustomFieldDefinitionRelated_typeEnumItem) = "item"
    toJSON (CustomFieldDefinitionRelated_typeEnumPlan) = "plan"
    toJSON (CustomFieldDefinitionRelated_typeEnumSubscription) = "subscription"
    toJSON (CustomFieldDefinitionRelated_typeEnumCharge) = "charge"
instance Data.Aeson.Types.FromJSON.FromJSON CustomFieldDefinitionRelated_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "account" -> CustomFieldDefinitionRelated_typeEnumAccount
                | val GHC.Classes.== "item" -> CustomFieldDefinitionRelated_typeEnumItem
                | val GHC.Classes.== "plan" -> CustomFieldDefinitionRelated_typeEnumPlan
                | val GHC.Classes.== "subscription" -> CustomFieldDefinitionRelated_typeEnumSubscription
                | val GHC.Classes.== "charge" -> CustomFieldDefinitionRelated_typeEnumCharge
                | GHC.Base.otherwise -> CustomFieldDefinitionRelated_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.CustomFieldDefinition.properties.user_access@ in the specification.

The access control applied inside Recurly\'s admin UI:
- \`api_only\` - No one will be able to view or edit this field\'s data via the admin UI.
- \`read_only\` - Users with the Customers role will be able to view this field\'s data via the admin UI, but
  editing will only be available via the API.
- \`write\` - Users with the Customers role will be able to view and edit this field\'s data via the admin UI.
- \`set_only\` - Users with the Customers role will be able to set this field\'s data via the admin console.
-}
data CustomFieldDefinitionUser_access
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      CustomFieldDefinitionUser_accessOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      CustomFieldDefinitionUser_accessTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"api_only"@
      CustomFieldDefinitionUser_accessEnumApi_only
    | -- | Represents the JSON value @"read_only"@
      CustomFieldDefinitionUser_accessEnumRead_only
    | -- | Represents the JSON value @"write"@
      CustomFieldDefinitionUser_accessEnumWrite
    | -- | Represents the JSON value @"set_only"@
      CustomFieldDefinitionUser_accessEnumSet_only
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CustomFieldDefinitionUser_access where
    toJSON (CustomFieldDefinitionUser_accessOther val) = val
    toJSON (CustomFieldDefinitionUser_accessTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (CustomFieldDefinitionUser_accessEnumApi_only) = "api_only"
    toJSON (CustomFieldDefinitionUser_accessEnumRead_only) = "read_only"
    toJSON (CustomFieldDefinitionUser_accessEnumWrite) = "write"
    toJSON (CustomFieldDefinitionUser_accessEnumSet_only) = "set_only"
instance Data.Aeson.Types.FromJSON.FromJSON CustomFieldDefinitionUser_access where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "api_only" -> CustomFieldDefinitionUser_accessEnumApi_only
                | val GHC.Classes.== "read_only" -> CustomFieldDefinitionUser_accessEnumRead_only
                | val GHC.Classes.== "write" -> CustomFieldDefinitionUser_accessEnumWrite
                | val GHC.Classes.== "set_only" -> CustomFieldDefinitionUser_accessEnumSet_only
                | GHC.Base.otherwise -> CustomFieldDefinitionUser_accessOther val
            )
