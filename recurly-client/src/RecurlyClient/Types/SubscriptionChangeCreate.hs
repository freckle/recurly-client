{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SubscriptionChangeCreate
module RecurlyClient.Types.SubscriptionChangeCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.ProrationSettings
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionAddOnUpdate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionChangeBillingInfoCreate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionChangeShippingCreate
import {-# SOURCE #-} RecurlyClient.Types.SubscriptionRampInterval
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SubscriptionChangeCreate@ in the specification.
data SubscriptionChangeCreate = SubscriptionChangeCreate
    { subscriptionChangeCreateAdd_ons :: (GHC.Maybe.Maybe [SubscriptionAddOnUpdate])
    -- ^ add_ons: If you provide a value for this field it will replace any
    -- existing add-ons. So, when adding or modifying an add-on, you need to
    -- include the existing subscription add-ons. Unchanged add-ons can be included
    -- just using the subscription add-on\'\'s ID: \`{\"id\": \"abc123\"}\`. If this
    -- value is omitted your existing add-ons will be unaffected. To remove all
    -- existing add-ons, this value should be an empty array.\'
    --
    -- If a subscription add-on\'s \`code\` is supplied without the \`id\`,
    -- \`{\"code\": \"def456\"}\`, the subscription add-on attributes will be set to the
    -- current values of the plan add-on unless provided in the request.
    --
    -- - If an \`id\` is passed, any attributes not passed in will pull from the
    --   existing subscription add-on
    -- - If a \`code\` is passed, any attributes not passed in will pull from the
    --   current values of the plan add-on
    -- - Attributes passed in as part of the request will override either of the
    --   above scenarios
    , subscriptionChangeCreateBilling_info :: (GHC.Maybe.Maybe SubscriptionChangeBillingInfoCreate)
    -- ^ billing_info
    , subscriptionChangeCreateBusiness_entity_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ business_entity_code: The \`business_entity_code\` is the value that represents a specific business entity for an end customer. When \`business_entity_code\` is used to assign a business entity to the subscription, all future billing events for the subscription will bill to the specified business entity. Available when the \`Multiple Business Entities\` feature is enabled. If both \`business_entity_id\` and \`business_entity_code\` are present, \`business_entity_id\` will be used. Only allowed if the \`timeframe\` is not \`now\`.
    , subscriptionChangeCreateBusiness_entity_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ business_entity_id: The \`business_entity_id\` is the value that represents a specific business entity for an end customer. When \`business_entity_id\` is used to assign a business entity to the subscription, all future billing events for the subscription will bill to the specified business entity. Available when the \`Multiple Business Entities\` feature is enabled. If both \`business_entity_id\` and \`business_entity_code\` are present, \`business_entity_id\` will be used. Only allowed if the \`timeframe\` is not \`now\`.
    , subscriptionChangeCreateCollection_method :: (GHC.Maybe.Maybe SubscriptionChangeCreateCollection_method)
    -- ^ collection_method
    , subscriptionChangeCreateCoupon_codes :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ coupon_codes: A list of coupon_codes to be redeemed on the subscription during the change. Only allowed if timeframe is now and you change something about the subscription that creates an invoice.
    , subscriptionChangeCreateCustom_fields :: (GHC.Maybe.Maybe CustomFields)
    -- ^ custom_fields: The custom fields will only be altered when they are included in a request. Sending an empty array will not remove any existing values. To remove a field send the name with a null or empty value.
    , subscriptionChangeCreateNet_terms :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ net_terms: Integer normally paired with \`Net Terms Type\` and representing the number of days past
    -- the current date (for \`net\` Net Terms Type) or days after the last day of the current
    -- month (for \`eom\` Net Terms Type) that the invoice will become past due. During a subscription
    -- change, it\'s not necessary to provide both the \`Net Terms Type\` and \`Net Terms\` parameters.
    --
    -- For more information on how net terms work with \`manual\` collection visit our docs page (https:\/\/docs.recurly.com\/docs\/manual-payments\#section-collection-terms)
    -- or visit (https:\/\/docs.recurly.com\/docs\/automatic-invoicing-terms\#section-collection-terms) for information about net terms using \`automatic\` collection.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , subscriptionChangeCreateNet_terms_type :: (GHC.Maybe.Maybe SubscriptionChangeCreateNet_terms_type)
    -- ^ net_terms_type: Optionally supplied string that may be either \`net\` or \`eom\` (end-of-month).
    -- When \`net\`, an invoice becomes past due the specified number of \`Net Terms\` days from the current date.
    -- When \`eom\` an invoice becomes past due the specified number of \`Net Terms\` days from the last day of the current month.
    , subscriptionChangeCreatePlan_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_code: If you want to change to a new plan, you can provide the plan\'s code or id. If both are provided the \`plan_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , subscriptionChangeCreatePlan_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ plan_id: If you want to change to a new plan, you can provide the plan\'s code or id. If both are provided the \`plan_id\` will be used.
    --
    -- Constraints:
    --
    -- * Maximum length of 13
    , subscriptionChangeCreatePo_number :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ po_number: For manual invoicing, this identifies the PO number associated with the subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    , subscriptionChangeCreateProration_settings :: (GHC.Maybe.Maybe ProrationSettings)
    -- ^ proration_settings: Allows you to control how any resulting charges and credits will be calculated and prorated.
    , subscriptionChangeCreateQuantity :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ quantity: Optionally override the default quantity of 1.
    --
    -- Constraints:
    --
    -- * Minimum  of 0.0
    , subscriptionChangeCreateRamp_intervals :: (GHC.Maybe.Maybe [SubscriptionRampInterval])
    -- ^ ramp_intervals: The new set of ramp intervals for the subscription.
    , subscriptionChangeCreateRevenue_schedule_type :: (GHC.Maybe.Maybe SubscriptionChangeCreateRevenue_schedule_type)
    -- ^ revenue_schedule_type
    , subscriptionChangeCreateShipping :: (GHC.Maybe.Maybe SubscriptionChangeShippingCreate)
    -- ^ shipping: Shipping addresses are tied to a customer\'s account. Each account can have up to 20 different shipping addresses, and if you have enabled multiple subscriptions per account, you can associate different shipping addresses to each subscription.
    , subscriptionChangeCreateTax_inclusive :: (GHC.Maybe.Maybe GHC.Types.Bool)
    -- ^ tax_inclusive: This field is deprecated. Please do not use it.
    , subscriptionChangeCreateTimeframe :: (GHC.Maybe.Maybe SubscriptionChangeCreateTimeframe)
    -- ^ timeframe: The timeframe parameter controls when the upgrade or downgrade takes place. The subscription change can occur now, when the subscription is next billed, or when the subscription term ends. Generally, if you\'re performing an upgrade, you will want the change to occur immediately (now). If you\'re performing a downgrade, you should set the timeframe to \`term_end\` or \`bill_date\` so the change takes effect at a scheduled billing date. The \`renewal\` timeframe option is accepted as an alias for \`term_end\`.
    , subscriptionChangeCreateTransaction_type :: (GHC.Maybe.Maybe SubscriptionChangeCreateTransaction_type)
    -- ^ transaction_type: An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
    , subscriptionChangeCreateUnit_amount :: (GHC.Maybe.Maybe GHC.Types.Float)
    -- ^ unit_amount: Optionally, sets custom pricing for the subscription, overriding the plan\'s default unit amount. The subscription\'s current currency will be used.
    --
    -- Constraints:
    --
    -- * Maxium  of 1000000.0
    -- * Minimum  of 0.0
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_code" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBusiness_entity_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBusiness_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCollection_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_codes" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCoupon_codes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateNet_terms_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_code" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePlan_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_settings" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateProration_settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeframe" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTimeframe obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateUnit_amount obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_ons" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateAdd_ons obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_info" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBilling_info obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_code" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBusiness_entity_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_entity_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateBusiness_entity_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCollection_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_codes" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCoupon_codes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateCustom_fields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateNet_terms obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("net_terms_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateNet_terms_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_code" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePlan_code obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("plan_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePlan_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("po_number" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreatePo_number obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_settings" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateProration_settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ramp_intervals" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateRamp_intervals obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revenue_schedule_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateRevenue_schedule_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_inclusive" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTax_inclusive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeframe" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTimeframe obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateTransaction_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeCreateUnit_amount obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionChangeCreate" (\obj -> ((((((((((((((((((((GHC.Base.pure SubscriptionChangeCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "add_ons")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_entity_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_entity_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "collection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "coupon_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "net_terms")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "net_terms_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plan_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "po_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "proration_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ramp_intervals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "revenue_schedule_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "timeframe")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount"))

-- | Create a new 'SubscriptionChangeCreate' with all required fields.
mkSubscriptionChangeCreate :: SubscriptionChangeCreate
mkSubscriptionChangeCreate =
    SubscriptionChangeCreate
        { subscriptionChangeCreateAdd_ons = GHC.Maybe.Nothing
        , subscriptionChangeCreateBilling_info = GHC.Maybe.Nothing
        , subscriptionChangeCreateBusiness_entity_code = GHC.Maybe.Nothing
        , subscriptionChangeCreateBusiness_entity_id = GHC.Maybe.Nothing
        , subscriptionChangeCreateCollection_method = GHC.Maybe.Nothing
        , subscriptionChangeCreateCoupon_codes = GHC.Maybe.Nothing
        , subscriptionChangeCreateCustom_fields = GHC.Maybe.Nothing
        , subscriptionChangeCreateNet_terms = GHC.Maybe.Nothing
        , subscriptionChangeCreateNet_terms_type = GHC.Maybe.Nothing
        , subscriptionChangeCreatePlan_code = GHC.Maybe.Nothing
        , subscriptionChangeCreatePlan_id = GHC.Maybe.Nothing
        , subscriptionChangeCreatePo_number = GHC.Maybe.Nothing
        , subscriptionChangeCreateProration_settings = GHC.Maybe.Nothing
        , subscriptionChangeCreateQuantity = GHC.Maybe.Nothing
        , subscriptionChangeCreateRamp_intervals = GHC.Maybe.Nothing
        , subscriptionChangeCreateRevenue_schedule_type = GHC.Maybe.Nothing
        , subscriptionChangeCreateShipping = GHC.Maybe.Nothing
        , subscriptionChangeCreateTax_inclusive = GHC.Maybe.Nothing
        , subscriptionChangeCreateTimeframe = GHC.Maybe.Nothing
        , subscriptionChangeCreateTransaction_type = GHC.Maybe.Nothing
        , subscriptionChangeCreateUnit_amount = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.SubscriptionChangeCreate.properties.collection_method@ in the specification.
data SubscriptionChangeCreateCollection_method
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeCreateCollection_methodOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeCreateCollection_methodTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"automatic"@
      SubscriptionChangeCreateCollection_methodEnumAutomatic
    | -- | Represents the JSON value @"manual"@
      SubscriptionChangeCreateCollection_methodEnumManual
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreateCollection_method where
    toJSON (SubscriptionChangeCreateCollection_methodOther val) = val
    toJSON (SubscriptionChangeCreateCollection_methodTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeCreateCollection_methodEnumAutomatic) = "automatic"
    toJSON (SubscriptionChangeCreateCollection_methodEnumManual) = "manual"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreateCollection_method where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "automatic" -> SubscriptionChangeCreateCollection_methodEnumAutomatic
                | val GHC.Classes.== "manual" -> SubscriptionChangeCreateCollection_methodEnumManual
                | GHC.Base.otherwise -> SubscriptionChangeCreateCollection_methodOther val
            )

{- | Defines the enum schema located at @components.schemas.SubscriptionChangeCreate.properties.net_terms_type@ in the specification.

Optionally supplied string that may be either \`net\` or \`eom\` (end-of-month).
When \`net\`, an invoice becomes past due the specified number of \`Net Terms\` days from the current date.
When \`eom\` an invoice becomes past due the specified number of \`Net Terms\` days from the last day of the current month.
-}
data SubscriptionChangeCreateNet_terms_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeCreateNet_terms_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeCreateNet_terms_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"net"@
      SubscriptionChangeCreateNet_terms_typeEnumNet
    | -- | Represents the JSON value @"eom"@
      SubscriptionChangeCreateNet_terms_typeEnumEom
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreateNet_terms_type where
    toJSON (SubscriptionChangeCreateNet_terms_typeOther val) = val
    toJSON (SubscriptionChangeCreateNet_terms_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeCreateNet_terms_typeEnumNet) = "net"
    toJSON (SubscriptionChangeCreateNet_terms_typeEnumEom) = "eom"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreateNet_terms_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "net" -> SubscriptionChangeCreateNet_terms_typeEnumNet
                | val GHC.Classes.== "eom" -> SubscriptionChangeCreateNet_terms_typeEnumEom
                | GHC.Base.otherwise -> SubscriptionChangeCreateNet_terms_typeOther val
            )

-- | Defines the enum schema located at @components.schemas.SubscriptionChangeCreate.properties.revenue_schedule_type@ in the specification.
data SubscriptionChangeCreateRevenue_schedule_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeCreateRevenue_schedule_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeCreateRevenue_schedule_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"at_range_end"@
      SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_end
    | -- | Represents the JSON value @"at_range_start"@
      SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_start
    | -- | Represents the JSON value @"evenly"@
      SubscriptionChangeCreateRevenue_schedule_typeEnumEvenly
    | -- | Represents the JSON value @"never"@
      SubscriptionChangeCreateRevenue_schedule_typeEnumNever
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreateRevenue_schedule_type where
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeOther val) = val
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_end) = "at_range_end"
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_start) = "at_range_start"
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeEnumEvenly) = "evenly"
    toJSON (SubscriptionChangeCreateRevenue_schedule_typeEnumNever) = "never"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreateRevenue_schedule_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "at_range_end" -> SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_end
                | val GHC.Classes.== "at_range_start" -> SubscriptionChangeCreateRevenue_schedule_typeEnumAt_range_start
                | val GHC.Classes.== "evenly" -> SubscriptionChangeCreateRevenue_schedule_typeEnumEvenly
                | val GHC.Classes.== "never" -> SubscriptionChangeCreateRevenue_schedule_typeEnumNever
                | GHC.Base.otherwise -> SubscriptionChangeCreateRevenue_schedule_typeOther val
            )

{- | Defines the enum schema located at @components.schemas.SubscriptionChangeCreate.properties.timeframe@ in the specification.

The timeframe parameter controls when the upgrade or downgrade takes place. The subscription change can occur now, when the subscription is next billed, or when the subscription term ends. Generally, if you\'re performing an upgrade, you will want the change to occur immediately (now). If you\'re performing a downgrade, you should set the timeframe to \`term_end\` or \`bill_date\` so the change takes effect at a scheduled billing date. The \`renewal\` timeframe option is accepted as an alias for \`term_end\`.
-}
data SubscriptionChangeCreateTimeframe
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeCreateTimeframeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeCreateTimeframeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"bill_date"@
      SubscriptionChangeCreateTimeframeEnumBill_date
    | -- | Represents the JSON value @"now"@
      SubscriptionChangeCreateTimeframeEnumNow
    | -- | Represents the JSON value @"renewal"@
      SubscriptionChangeCreateTimeframeEnumRenewal
    | -- | Represents the JSON value @"term_end"@
      SubscriptionChangeCreateTimeframeEnumTerm_end
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreateTimeframe where
    toJSON (SubscriptionChangeCreateTimeframeOther val) = val
    toJSON (SubscriptionChangeCreateTimeframeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeCreateTimeframeEnumBill_date) = "bill_date"
    toJSON (SubscriptionChangeCreateTimeframeEnumNow) = "now"
    toJSON (SubscriptionChangeCreateTimeframeEnumRenewal) = "renewal"
    toJSON (SubscriptionChangeCreateTimeframeEnumTerm_end) = "term_end"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreateTimeframe where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "bill_date" -> SubscriptionChangeCreateTimeframeEnumBill_date
                | val GHC.Classes.== "now" -> SubscriptionChangeCreateTimeframeEnumNow
                | val GHC.Classes.== "renewal" -> SubscriptionChangeCreateTimeframeEnumRenewal
                | val GHC.Classes.== "term_end" -> SubscriptionChangeCreateTimeframeEnumTerm_end
                | GHC.Base.otherwise -> SubscriptionChangeCreateTimeframeOther val
            )

{- | Defines the enum schema located at @components.schemas.SubscriptionChangeCreate.properties.transaction_type@ in the specification.

An optional type designation for the payment gateway transaction created by this request. Supports \'moto\' value, which is the acronym for mail order and telephone transactions.
-}
data SubscriptionChangeCreateTransaction_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      SubscriptionChangeCreateTransaction_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      SubscriptionChangeCreateTransaction_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"moto"@
      SubscriptionChangeCreateTransaction_typeEnumMoto
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeCreateTransaction_type where
    toJSON (SubscriptionChangeCreateTransaction_typeOther val) = val
    toJSON (SubscriptionChangeCreateTransaction_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (SubscriptionChangeCreateTransaction_typeEnumMoto) = "moto"
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeCreateTransaction_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "moto" -> SubscriptionChangeCreateTransaction_typeEnumMoto
                | GHC.Base.otherwise -> SubscriptionChangeCreateTransaction_typeOther val
            )
