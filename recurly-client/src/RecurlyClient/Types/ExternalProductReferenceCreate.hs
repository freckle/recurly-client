{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExternalProductReferenceCreate
module RecurlyClient.Types.ExternalProductReferenceCreate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import {-# SOURCE #-} RecurlyClient.Types.ExternalProductReferenceBase
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ExternalProductReferenceCreate.allOf@ in the specification.
data ExternalProductReferenceCreate = ExternalProductReferenceCreate
    { externalProductReferenceCreateExternal_connection_type :: (GHC.Maybe.Maybe ExternalProductReferenceCreateExternal_connection_type)
    -- ^ external_connection_type
    , externalProductReferenceCreateReference_code :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ reference_code: A code which associates the external product to a corresponding object or resource in an external platform like the Apple App Store or Google Play Store.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON ExternalProductReferenceCreate where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_connection_type" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceCreateExternal_connection_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_code" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceCreateReference_code obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_connection_type" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceCreateExternal_connection_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference_code" Data.Aeson.Types.ToJSON..=)) (externalProductReferenceCreateReference_code obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON ExternalProductReferenceCreate where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "ExternalProductReferenceCreate" (\obj -> (GHC.Base.pure ExternalProductReferenceCreate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_connection_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "reference_code"))

-- | Create a new 'ExternalProductReferenceCreate' with all required fields.
mkExternalProductReferenceCreate :: ExternalProductReferenceCreate
mkExternalProductReferenceCreate =
    ExternalProductReferenceCreate
        { externalProductReferenceCreateExternal_connection_type = GHC.Maybe.Nothing
        , externalProductReferenceCreateReference_code = GHC.Maybe.Nothing
        }

-- | Defines the enum schema located at @components.schemas.ExternalProductReferenceCreate.allOf.properties.external_connection_type@ in the specification.
data ExternalProductReferenceCreateExternal_connection_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      ExternalProductReferenceCreateExternal_connection_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      ExternalProductReferenceCreateExternal_connection_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"apple_app_store"@
      ExternalProductReferenceCreateExternal_connection_typeEnumApple_app_store
    | -- | Represents the JSON value @"google_play_store"@
      ExternalProductReferenceCreateExternal_connection_typeEnumGoogle_play_store
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ExternalProductReferenceCreateExternal_connection_type where
    toJSON (ExternalProductReferenceCreateExternal_connection_typeOther val) = val
    toJSON (ExternalProductReferenceCreateExternal_connection_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (ExternalProductReferenceCreateExternal_connection_typeEnumApple_app_store) = "apple_app_store"
    toJSON (ExternalProductReferenceCreateExternal_connection_typeEnumGoogle_play_store) = "google_play_store"
instance Data.Aeson.Types.FromJSON.FromJSON ExternalProductReferenceCreateExternal_connection_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "apple_app_store" -> ExternalProductReferenceCreateExternal_connection_typeEnumApple_app_store
                | val GHC.Classes.== "google_play_store" -> ExternalProductReferenceCreateExternal_connection_typeEnumGoogle_play_store
                | GHC.Base.otherwise -> ExternalProductReferenceCreateExternal_connection_typeOther val
            )
