{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SubscriptionChangeBillingInfo
module RecurlyClient.Types.SubscriptionChangeBillingInfo where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified RecurlyClient.Common
import RecurlyClient.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | Defines the object schema located at @components.schemas.SubscriptionChangeBillingInfo@ in the specification.

Accept nested attributes for three_d_secure_action_result_token_id
-}
data SubscriptionChangeBillingInfo = SubscriptionChangeBillingInfo
    { subscriptionChangeBillingInfoThree_d_secure_action_result_token_id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
    -- ^ three_d_secure_action_result_token_id: A token generated by Recurly.js after completing a 3-D Secure device fingerprinting or authentication challenge.
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionChangeBillingInfo where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_result_token_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBillingInfoThree_d_secure_action_result_token_id obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure_action_result_token_id" Data.Aeson.Types.ToJSON..=)) (subscriptionChangeBillingInfoThree_d_secure_action_result_token_id obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionChangeBillingInfo where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionChangeBillingInfo" (\obj -> GHC.Base.pure SubscriptionChangeBillingInfo GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "three_d_secure_action_result_token_id"))

-- | Create a new 'SubscriptionChangeBillingInfo' with all required fields.
mkSubscriptionChangeBillingInfo :: SubscriptionChangeBillingInfo
mkSubscriptionChangeBillingInfo = SubscriptionChangeBillingInfo{subscriptionChangeBillingInfoThree_d_secure_action_result_token_id = GHC.Maybe.Nothing}
