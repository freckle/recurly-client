{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation list_account_transactions
module RecurlyClient.Operations.List_account_transactions where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified RecurlyClient.Common
import RecurlyClient.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | > GET /accounts/{account_id}/transactions

See the [Pagination Guide](\/developers\/guides\/pagination.html) to learn how to use pagination in the API and Client Libraries.
-}
list_account_transactions ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_account_transactionsParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response List_account_transactionsResponse)
list_account_transactions parameters =
    GHC.Base.fmap
        ( \response_0 ->
            GHC.Base.fmap
                ( Data.Either.either List_account_transactionsResponseError GHC.Base.id
                    GHC.Base.. ( \response body ->
                                    if
                                        | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_account_transactionsResponse200
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        TransactionList
                                                                 )
                                        | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_account_transactionsResponse400
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_account_transactionsResponse404
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_account_transactionsResponseDefault
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                               )
                        response_0
                )
                response_0
        )
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            ("/accounts/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_account_transactionsParametersPathAccount_id parameters))) GHC.Base.<> "/transactions"))
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "success") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySuccess parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

-- | Defines the object schema located at @paths.\/accounts\/{account_id}\/transactions.GET.parameters@ in the specification.
data List_account_transactionsParameters = List_account_transactionsParameters
    { list_account_transactionsParametersPathAccount_id :: Data.Text.Internal.Text
    -- ^ pathAccount_id: Represents the parameter named \'account_id\'
    --
    -- Account ID or code. For ID no prefix is used e.g. \`e28zov4fw0v2\`. For code use prefix \`code-\`, e.g. \`code-bob\`.
    , list_account_transactionsParametersQueryBegin_time :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ queryBegin_time: Represents the parameter named \'begin_time\'
    --
    -- Inclusively filter by begin_time when \`sort=created_at\` or \`sort=updated_at\`.
    -- **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
    , list_account_transactionsParametersQueryEnd_time :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ queryEnd_time: Represents the parameter named \'end_time\'
    --
    -- Inclusively filter by end_time when \`sort=created_at\` or \`sort=updated_at\`.
    -- **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
    , list_account_transactionsParametersQueryIds :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ queryIds: Represents the parameter named \'ids\'
    --
    -- Filter results by their IDs. Up to 200 IDs can be passed at once using
    -- commas as separators, e.g. \`ids=h1at4d57xlmy,gyqgg0d3v9n1,jrsm5b4yefg6\`.
    --
    -- **Important notes:**
    --
    -- * The \`ids\` parameter cannot be used with any other ordering or filtering
    --   parameters (\`limit\`, \`order\`, \`sort\`, \`begin_time\`, \`end_time\`, etc)
    -- * Invalid or unknown IDs will be ignored, so you should check that the
    --   results correspond to your request.
    -- * Records are returned in an arbitrary order. Since results are all
    --   returned at once you can sort the records yourself.
    , list_account_transactionsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ queryLimit: Represents the parameter named \'limit\'
    --
    -- Limit number of records 1-200.
    --
    -- Constraints:
    --
    -- * Maxium  of 200.0
    -- * Minimum  of 1.0
    , list_account_transactionsParametersQueryOrder :: (GHC.Maybe.Maybe List_account_transactionsParametersQueryOrder)
    -- ^ queryOrder: Represents the parameter named \'order\'
    --
    -- Sort order.
    , list_account_transactionsParametersQuerySort :: (GHC.Maybe.Maybe List_account_transactionsParametersQuerySort)
    -- ^ querySort: Represents the parameter named \'sort\'
    --
    -- Sort field. You *really* only want to sort by \`updated_at\` in ascending
    -- order. In descending order updated records will move behind the cursor and could
    -- prevent some records from being returned.
    , list_account_transactionsParametersQuerySuccess :: (GHC.Maybe.Maybe List_account_transactionsParametersQuerySuccess)
    -- ^ querySuccess: Represents the parameter named \'success\'
    --
    -- Filter by success field.
    , list_account_transactionsParametersQueryType :: (GHC.Maybe.Maybe List_account_transactionsParametersQueryType)
    -- ^ queryType: Represents the parameter named \'type\'
    --
    -- Filter by type field. The value \`payment\` will return both \`purchase\` and \`capture\` transactions.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON List_account_transactionsParameters where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathAccount_id" Data.Aeson.Types.ToJSON..= list_account_transactionsParametersPathAccount_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBegin_time" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryBegin_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnd_time" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryEnd_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQuerySort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySuccess" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQuerySuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryType obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathAccount_id" Data.Aeson.Types.ToJSON..= list_account_transactionsParametersPathAccount_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBegin_time" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryBegin_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnd_time" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryEnd_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQuerySort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySuccess" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQuerySuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (list_account_transactionsParametersQueryType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON List_account_transactionsParameters where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "List_account_transactionsParameters" (\obj -> ((((((((GHC.Base.pure List_account_transactionsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathAccount_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryBegin_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnd_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryIds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "querySort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "querySuccess")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryType"))

-- | Create a new 'List_account_transactionsParameters' with all required fields.
mkList_account_transactionsParameters ::
    -- | 'list_account_transactionsParametersPathAccount_id'
    Data.Text.Internal.Text ->
    List_account_transactionsParameters
mkList_account_transactionsParameters list_account_transactionsParametersPathAccount_id =
    List_account_transactionsParameters
        { list_account_transactionsParametersPathAccount_id = list_account_transactionsParametersPathAccount_id
        , list_account_transactionsParametersQueryBegin_time = GHC.Maybe.Nothing
        , list_account_transactionsParametersQueryEnd_time = GHC.Maybe.Nothing
        , list_account_transactionsParametersQueryIds = GHC.Maybe.Nothing
        , list_account_transactionsParametersQueryLimit = GHC.Maybe.Nothing
        , list_account_transactionsParametersQueryOrder = GHC.Maybe.Nothing
        , list_account_transactionsParametersQuerySort = GHC.Maybe.Nothing
        , list_account_transactionsParametersQuerySuccess = GHC.Maybe.Nothing
        , list_account_transactionsParametersQueryType = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @paths.\/accounts\/{account_id}\/transactions.GET.parameters.properties.queryOrder@ in the specification.

Represents the parameter named \'order\'

Sort order.
-}
data List_account_transactionsParametersQueryOrder
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_account_transactionsParametersQueryOrderOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_account_transactionsParametersQueryOrderTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"asc"@
      List_account_transactionsParametersQueryOrderEnumAsc
    | -- | Represents the JSON value @"desc"@
      List_account_transactionsParametersQueryOrderEnumDesc
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_account_transactionsParametersQueryOrder where
    toJSON (List_account_transactionsParametersQueryOrderOther val) = val
    toJSON (List_account_transactionsParametersQueryOrderTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_account_transactionsParametersQueryOrderEnumAsc) = "asc"
    toJSON (List_account_transactionsParametersQueryOrderEnumDesc) = "desc"
instance Data.Aeson.Types.FromJSON.FromJSON List_account_transactionsParametersQueryOrder where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "asc" -> List_account_transactionsParametersQueryOrderEnumAsc
                | val GHC.Classes.== "desc" -> List_account_transactionsParametersQueryOrderEnumDesc
                | GHC.Base.otherwise -> List_account_transactionsParametersQueryOrderOther val
            )

{- | Defines the enum schema located at @paths.\/accounts\/{account_id}\/transactions.GET.parameters.properties.querySort@ in the specification.

Represents the parameter named \'sort\'

Sort field. You *really* only want to sort by \`updated_at\` in ascending
order. In descending order updated records will move behind the cursor and could
prevent some records from being returned.
-}
data List_account_transactionsParametersQuerySort
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_account_transactionsParametersQuerySortOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_account_transactionsParametersQuerySortTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"created_at"@
      List_account_transactionsParametersQuerySortEnumCreated_at
    | -- | Represents the JSON value @"updated_at"@
      List_account_transactionsParametersQuerySortEnumUpdated_at
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_account_transactionsParametersQuerySort where
    toJSON (List_account_transactionsParametersQuerySortOther val) = val
    toJSON (List_account_transactionsParametersQuerySortTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_account_transactionsParametersQuerySortEnumCreated_at) = "created_at"
    toJSON (List_account_transactionsParametersQuerySortEnumUpdated_at) = "updated_at"
instance Data.Aeson.Types.FromJSON.FromJSON List_account_transactionsParametersQuerySort where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "created_at" -> List_account_transactionsParametersQuerySortEnumCreated_at
                | val GHC.Classes.== "updated_at" -> List_account_transactionsParametersQuerySortEnumUpdated_at
                | GHC.Base.otherwise -> List_account_transactionsParametersQuerySortOther val
            )

{- | Defines the enum schema located at @paths.\/accounts\/{account_id}\/transactions.GET.parameters.properties.querySuccess@ in the specification.

Represents the parameter named \'success\'

Filter by success field.
-}
data List_account_transactionsParametersQuerySuccess
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_account_transactionsParametersQuerySuccessOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_account_transactionsParametersQuerySuccessTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @true@
      List_account_transactionsParametersQuerySuccessEnumTrue
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_account_transactionsParametersQuerySuccess where
    toJSON (List_account_transactionsParametersQuerySuccessOther val) = val
    toJSON (List_account_transactionsParametersQuerySuccessTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_account_transactionsParametersQuerySuccessEnumTrue) = Data.Aeson.Types.Internal.Bool GHC.Types.True
instance Data.Aeson.Types.FromJSON.FromJSON List_account_transactionsParametersQuerySuccess where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.True -> List_account_transactionsParametersQuerySuccessEnumTrue
                | GHC.Base.otherwise -> List_account_transactionsParametersQuerySuccessOther val
            )

{- | Defines the enum schema located at @paths.\/accounts\/{account_id}\/transactions.GET.parameters.properties.queryType@ in the specification.

Represents the parameter named \'type\'

Filter by type field. The value \`payment\` will return both \`purchase\` and \`capture\` transactions.
-}
data List_account_transactionsParametersQueryType
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_account_transactionsParametersQueryTypeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_account_transactionsParametersQueryTypeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"authorization"@
      List_account_transactionsParametersQueryTypeEnumAuthorization
    | -- | Represents the JSON value @"capture"@
      List_account_transactionsParametersQueryTypeEnumCapture
    | -- | Represents the JSON value @"payment"@
      List_account_transactionsParametersQueryTypeEnumPayment
    | -- | Represents the JSON value @"purchase"@
      List_account_transactionsParametersQueryTypeEnumPurchase
    | -- | Represents the JSON value @"refund"@
      List_account_transactionsParametersQueryTypeEnumRefund
    | -- | Represents the JSON value @"verify"@
      List_account_transactionsParametersQueryTypeEnumVerify
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_account_transactionsParametersQueryType where
    toJSON (List_account_transactionsParametersQueryTypeOther val) = val
    toJSON (List_account_transactionsParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_account_transactionsParametersQueryTypeEnumAuthorization) = "authorization"
    toJSON (List_account_transactionsParametersQueryTypeEnumCapture) = "capture"
    toJSON (List_account_transactionsParametersQueryTypeEnumPayment) = "payment"
    toJSON (List_account_transactionsParametersQueryTypeEnumPurchase) = "purchase"
    toJSON (List_account_transactionsParametersQueryTypeEnumRefund) = "refund"
    toJSON (List_account_transactionsParametersQueryTypeEnumVerify) = "verify"
instance Data.Aeson.Types.FromJSON.FromJSON List_account_transactionsParametersQueryType where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "authorization" -> List_account_transactionsParametersQueryTypeEnumAuthorization
                | val GHC.Classes.== "capture" -> List_account_transactionsParametersQueryTypeEnumCapture
                | val GHC.Classes.== "payment" -> List_account_transactionsParametersQueryTypeEnumPayment
                | val GHC.Classes.== "purchase" -> List_account_transactionsParametersQueryTypeEnumPurchase
                | val GHC.Classes.== "refund" -> List_account_transactionsParametersQueryTypeEnumRefund
                | val GHC.Classes.== "verify" -> List_account_transactionsParametersQueryTypeEnumVerify
                | GHC.Base.otherwise -> List_account_transactionsParametersQueryTypeOther val
            )

{- | Represents a response of the operation 'list_account_transactions'.

The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'List_account_transactionsResponseError' is used.
-}
data List_account_transactionsResponse
    = -- | Means either no matching case available or a parse error
      List_account_transactionsResponseError GHC.Base.String
    | -- | A list of the account\'s transactions.
      List_account_transactionsResponse200 TransactionList
    | -- | Invalid or unpermitted parameter.
      List_account_transactionsResponse400 Error
    | -- | Incorrect site or subscription ID.
      List_account_transactionsResponse404 Error
    | -- | Unexpected error.
      List_account_transactionsResponseDefault Error
    deriving (GHC.Show.Show, GHC.Classes.Eq)

{- | > GET /accounts/{account_id}/transactions

The same as 'list_account_transactions' but accepts an explicit configuration.
-}
list_account_transactionsWithConfiguration ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_account_transactionsParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response List_account_transactionsResponse)
list_account_transactionsWithConfiguration
    config
    parameters =
        GHC.Base.fmap
            ( \response_4 ->
                GHC.Base.fmap
                    ( Data.Either.either List_account_transactionsResponseError GHC.Base.id
                        GHC.Base.. ( \response body ->
                                        if
                                            | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_account_transactionsResponse200
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            TransactionList
                                                                     )
                                            | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_account_transactionsResponse400
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_account_transactionsResponse404
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_account_transactionsResponseDefault
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                                   )
                            response_4
                    )
                    response_4
            )
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                ("/accounts/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_account_transactionsParametersPathAccount_id parameters))) GHC.Base.<> "/transactions"))
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "success") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySuccess parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )

{- | > GET /accounts/{account_id}/transactions

The same as 'list_account_transactions' but returns the raw 'Data.ByteString.ByteString'.
-}
list_account_transactionsRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_account_transactionsParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_account_transactionsRaw parameters =
    GHC.Base.id
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            ("/accounts/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_account_transactionsParametersPathAccount_id parameters))) GHC.Base.<> "/transactions"))
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "success") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySuccess parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

{- | > GET /accounts/{account_id}/transactions

The same as 'list_account_transactions' but accepts an explicit configuration and returns the raw 'Data.ByteString.ByteString'.
-}
list_account_transactionsWithConfigurationRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_account_transactionsParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_account_transactionsWithConfigurationRaw
    config
    parameters =
        GHC.Base.id
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                ("/accounts/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_account_transactionsParametersPathAccount_id parameters))) GHC.Base.<> "/transactions"))
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "success") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_account_transactionsParametersQuerySuccess parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )
