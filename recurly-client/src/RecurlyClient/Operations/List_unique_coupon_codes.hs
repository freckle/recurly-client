{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation list_unique_coupon_codes
module RecurlyClient.Operations.List_unique_coupon_codes where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified RecurlyClient.Common
import RecurlyClient.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | > GET /coupons/{coupon_id}/unique_coupon_codes

See the [Pagination Guide](\/developers\/guides\/pagination.html) to learn how to use pagination in the API and Client Libraries.
-}
list_unique_coupon_codes ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_unique_coupon_codesParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response List_unique_coupon_codesResponse)
list_unique_coupon_codes parameters =
    GHC.Base.fmap
        ( \response_0 ->
            GHC.Base.fmap
                ( Data.Either.either List_unique_coupon_codesResponseError GHC.Base.id
                    GHC.Base.. ( \response body ->
                                    if
                                        | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_unique_coupon_codesResponse200
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        UniqueCouponCodeList
                                                                 )
                                        | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_unique_coupon_codesResponse404
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_unique_coupon_codesResponseDefault
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                               )
                        response_0
                )
                response_0
        )
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            ("/coupons/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_unique_coupon_codesParametersPathCoupon_id parameters))) GHC.Base.<> "/unique_coupon_codes"))
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "redeemed") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryRedeemed parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

-- | Defines the object schema located at @paths.\/coupons\/{coupon_id}\/unique_coupon_codes.GET.parameters@ in the specification.
data List_unique_coupon_codesParameters = List_unique_coupon_codesParameters
    { list_unique_coupon_codesParametersPathCoupon_id :: Data.Text.Internal.Text
    -- ^ pathCoupon_id: Represents the parameter named \'coupon_id\'
    --
    -- Coupon ID or code. For ID no prefix is used e.g. \`e28zov4fw0v2\`. For code use prefix \`code-\`, e.g. \`code-10off\`.
    , list_unique_coupon_codesParametersQueryBegin_time :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ queryBegin_time: Represents the parameter named \'begin_time\'
    --
    -- Inclusively filter by begin_time when \`sort=created_at\` or \`sort=updated_at\`.
    -- **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
    , list_unique_coupon_codesParametersQueryEnd_time :: (GHC.Maybe.Maybe RecurlyClient.Common.JsonDateTime)
    -- ^ queryEnd_time: Represents the parameter named \'end_time\'
    --
    -- Inclusively filter by end_time when \`sort=created_at\` or \`sort=updated_at\`.
    -- **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
    , list_unique_coupon_codesParametersQueryIds :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ queryIds: Represents the parameter named \'ids\'
    --
    -- Filter results by their IDs. Up to 200 IDs can be passed at once using
    -- commas as separators, e.g. \`ids=h1at4d57xlmy,gyqgg0d3v9n1,jrsm5b4yefg6\`.
    --
    -- **Important notes:**
    --
    -- * The \`ids\` parameter cannot be used with any other ordering or filtering
    --   parameters (\`limit\`, \`order\`, \`sort\`, \`begin_time\`, \`end_time\`, etc)
    -- * Invalid or unknown IDs will be ignored, so you should check that the
    --   results correspond to your request.
    -- * Records are returned in an arbitrary order. Since results are all
    --   returned at once you can sort the records yourself.
    , list_unique_coupon_codesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ queryLimit: Represents the parameter named \'limit\'
    --
    -- Limit number of records 1-200.
    --
    -- Constraints:
    --
    -- * Maxium  of 200.0
    -- * Minimum  of 1.0
    , list_unique_coupon_codesParametersQueryOrder :: (GHC.Maybe.Maybe List_unique_coupon_codesParametersQueryOrder)
    -- ^ queryOrder: Represents the parameter named \'order\'
    --
    -- Sort order.
    , list_unique_coupon_codesParametersQueryRedeemed :: (GHC.Maybe.Maybe List_unique_coupon_codesParametersQueryRedeemed)
    -- ^ queryRedeemed: Represents the parameter named \'redeemed\'
    --
    -- Filter unique coupon codes by redemption status. \`true\` for redeemed, \`false\` for not redeemed.
    , list_unique_coupon_codesParametersQuerySort :: (GHC.Maybe.Maybe List_unique_coupon_codesParametersQuerySort)
    -- ^ querySort: Represents the parameter named \'sort\'
    --
    -- Sort field. You *really* only want to sort by \`updated_at\` in ascending
    -- order. In descending order updated records will move behind the cursor and could
    -- prevent some records from being returned.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON List_unique_coupon_codesParameters where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathCoupon_id" Data.Aeson.Types.ToJSON..= list_unique_coupon_codesParametersPathCoupon_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBegin_time" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryBegin_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnd_time" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryEnd_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRedeemed" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryRedeemed obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQuerySort obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathCoupon_id" Data.Aeson.Types.ToJSON..= list_unique_coupon_codesParametersPathCoupon_id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBegin_time" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryBegin_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnd_time" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryEnd_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRedeemed" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQueryRedeemed obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_unique_coupon_codesParametersQuerySort obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON List_unique_coupon_codesParameters where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "List_unique_coupon_codesParameters" (\obj -> (((((((GHC.Base.pure List_unique_coupon_codesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathCoupon_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryBegin_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnd_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryIds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryRedeemed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "querySort"))

-- | Create a new 'List_unique_coupon_codesParameters' with all required fields.
mkList_unique_coupon_codesParameters ::
    -- | 'list_unique_coupon_codesParametersPathCoupon_id'
    Data.Text.Internal.Text ->
    List_unique_coupon_codesParameters
mkList_unique_coupon_codesParameters list_unique_coupon_codesParametersPathCoupon_id =
    List_unique_coupon_codesParameters
        { list_unique_coupon_codesParametersPathCoupon_id = list_unique_coupon_codesParametersPathCoupon_id
        , list_unique_coupon_codesParametersQueryBegin_time = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQueryEnd_time = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQueryIds = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQueryLimit = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQueryOrder = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQueryRedeemed = GHC.Maybe.Nothing
        , list_unique_coupon_codesParametersQuerySort = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @paths.\/coupons\/{coupon_id}\/unique_coupon_codes.GET.parameters.properties.queryOrder@ in the specification.

Represents the parameter named \'order\'

Sort order.
-}
data List_unique_coupon_codesParametersQueryOrder
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_unique_coupon_codesParametersQueryOrderOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_unique_coupon_codesParametersQueryOrderTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"asc"@
      List_unique_coupon_codesParametersQueryOrderEnumAsc
    | -- | Represents the JSON value @"desc"@
      List_unique_coupon_codesParametersQueryOrderEnumDesc
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_unique_coupon_codesParametersQueryOrder where
    toJSON (List_unique_coupon_codesParametersQueryOrderOther val) = val
    toJSON (List_unique_coupon_codesParametersQueryOrderTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_unique_coupon_codesParametersQueryOrderEnumAsc) = "asc"
    toJSON (List_unique_coupon_codesParametersQueryOrderEnumDesc) = "desc"
instance Data.Aeson.Types.FromJSON.FromJSON List_unique_coupon_codesParametersQueryOrder where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "asc" -> List_unique_coupon_codesParametersQueryOrderEnumAsc
                | val GHC.Classes.== "desc" -> List_unique_coupon_codesParametersQueryOrderEnumDesc
                | GHC.Base.otherwise -> List_unique_coupon_codesParametersQueryOrderOther val
            )

{- | Defines the enum schema located at @paths.\/coupons\/{coupon_id}\/unique_coupon_codes.GET.parameters.properties.queryRedeemed@ in the specification.

Represents the parameter named \'redeemed\'

Filter unique coupon codes by redemption status. \`true\` for redeemed, \`false\` for not redeemed.
-}
data List_unique_coupon_codesParametersQueryRedeemed
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_unique_coupon_codesParametersQueryRedeemedOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_unique_coupon_codesParametersQueryRedeemedTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @true@
      List_unique_coupon_codesParametersQueryRedeemedEnumTrue
    | -- | Represents the JSON value @false@
      List_unique_coupon_codesParametersQueryRedeemedEnumFalse
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_unique_coupon_codesParametersQueryRedeemed where
    toJSON (List_unique_coupon_codesParametersQueryRedeemedOther val) = val
    toJSON (List_unique_coupon_codesParametersQueryRedeemedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_unique_coupon_codesParametersQueryRedeemedEnumTrue) = Data.Aeson.Types.Internal.Bool GHC.Types.True
    toJSON (List_unique_coupon_codesParametersQueryRedeemedEnumFalse) = Data.Aeson.Types.Internal.Bool GHC.Types.False
instance Data.Aeson.Types.FromJSON.FromJSON List_unique_coupon_codesParametersQueryRedeemed where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.True -> List_unique_coupon_codesParametersQueryRedeemedEnumTrue
                | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.False -> List_unique_coupon_codesParametersQueryRedeemedEnumFalse
                | GHC.Base.otherwise -> List_unique_coupon_codesParametersQueryRedeemedOther val
            )

{- | Defines the enum schema located at @paths.\/coupons\/{coupon_id}\/unique_coupon_codes.GET.parameters.properties.querySort@ in the specification.

Represents the parameter named \'sort\'

Sort field. You *really* only want to sort by \`updated_at\` in ascending
order. In descending order updated records will move behind the cursor and could
prevent some records from being returned.
-}
data List_unique_coupon_codesParametersQuerySort
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_unique_coupon_codesParametersQuerySortOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_unique_coupon_codesParametersQuerySortTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"created_at"@
      List_unique_coupon_codesParametersQuerySortEnumCreated_at
    | -- | Represents the JSON value @"updated_at"@
      List_unique_coupon_codesParametersQuerySortEnumUpdated_at
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_unique_coupon_codesParametersQuerySort where
    toJSON (List_unique_coupon_codesParametersQuerySortOther val) = val
    toJSON (List_unique_coupon_codesParametersQuerySortTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_unique_coupon_codesParametersQuerySortEnumCreated_at) = "created_at"
    toJSON (List_unique_coupon_codesParametersQuerySortEnumUpdated_at) = "updated_at"
instance Data.Aeson.Types.FromJSON.FromJSON List_unique_coupon_codesParametersQuerySort where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "created_at" -> List_unique_coupon_codesParametersQuerySortEnumCreated_at
                | val GHC.Classes.== "updated_at" -> List_unique_coupon_codesParametersQuerySortEnumUpdated_at
                | GHC.Base.otherwise -> List_unique_coupon_codesParametersQuerySortOther val
            )

{- | Represents a response of the operation 'list_unique_coupon_codes'.

The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'List_unique_coupon_codesResponseError' is used.
-}
data List_unique_coupon_codesResponse
    = -- | Means either no matching case available or a parse error
      List_unique_coupon_codesResponseError GHC.Base.String
    | -- | A list of unique coupon codes that were generated
      List_unique_coupon_codesResponse200 UniqueCouponCodeList
    | -- | Incorrect site or coupon ID.
      List_unique_coupon_codesResponse404 Error
    | -- | Unexpected error.
      List_unique_coupon_codesResponseDefault Error
    deriving (GHC.Show.Show, GHC.Classes.Eq)

{- | > GET /coupons/{coupon_id}/unique_coupon_codes

The same as 'list_unique_coupon_codes' but accepts an explicit configuration.
-}
list_unique_coupon_codesWithConfiguration ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_unique_coupon_codesParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response List_unique_coupon_codesResponse)
list_unique_coupon_codesWithConfiguration
    config
    parameters =
        GHC.Base.fmap
            ( \response_3 ->
                GHC.Base.fmap
                    ( Data.Either.either List_unique_coupon_codesResponseError GHC.Base.id
                        GHC.Base.. ( \response body ->
                                        if
                                            | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_unique_coupon_codesResponse200
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            UniqueCouponCodeList
                                                                     )
                                            | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_unique_coupon_codesResponse404
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_unique_coupon_codesResponseDefault
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                                   )
                            response_3
                    )
                    response_3
            )
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                ("/coupons/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_unique_coupon_codesParametersPathCoupon_id parameters))) GHC.Base.<> "/unique_coupon_codes"))
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "redeemed") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryRedeemed parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )

{- | > GET /coupons/{coupon_id}/unique_coupon_codes

The same as 'list_unique_coupon_codes' but returns the raw 'Data.ByteString.ByteString'.
-}
list_unique_coupon_codesRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_unique_coupon_codesParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_unique_coupon_codesRaw parameters =
    GHC.Base.id
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            ("/coupons/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_unique_coupon_codesParametersPathCoupon_id parameters))) GHC.Base.<> "/unique_coupon_codes"))
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "redeemed") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryRedeemed parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

{- | > GET /coupons/{coupon_id}/unique_coupon_codes

The same as 'list_unique_coupon_codes' but accepts an explicit configuration and returns the raw 'Data.ByteString.ByteString'.
-}
list_unique_coupon_codesWithConfigurationRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_unique_coupon_codesParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_unique_coupon_codesWithConfigurationRaw
    config
    parameters =
        GHC.Base.id
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                ("/coupons/" GHC.Base.<> (RecurlyClient.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (RecurlyClient.Common.textToByte GHC.Base.$ RecurlyClient.Common.stringifyModel (list_unique_coupon_codesParametersPathCoupon_id parameters))) GHC.Base.<> "/unique_coupon_codes"))
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "begin_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryBegin_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "end_time") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryEnd_time parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "redeemed") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_unique_coupon_codesParametersQueryRedeemed parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )
