{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation list_general_ledger_accounts
module RecurlyClient.Operations.List_general_ledger_accounts where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified RecurlyClient.Common
import RecurlyClient.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

{- | > GET /general_ledger_accounts

See the [Pagination Guide](\/developers\/guides\/pagination.html) to learn how to use pagination in the API and Client Libraries.
-}
list_general_ledger_accounts ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_general_ledger_accountsParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response List_general_ledger_accountsResponse)
list_general_ledger_accounts parameters =
    GHC.Base.fmap
        ( \response_0 ->
            GHC.Base.fmap
                ( Data.Either.either List_general_ledger_accountsResponseError GHC.Base.id
                    GHC.Base.. ( \response body ->
                                    if
                                        | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_general_ledger_accountsResponse200
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        GeneralLedgerAccountList
                                                                 )
                                        | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                            List_general_ledger_accountsResponse404
                                                Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                    Data.Either.Either
                                                                        GHC.Base.String
                                                                        Error
                                                                 )
                                        | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                               )
                        response_0
                )
                response_0
        )
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            "/general_ledger_accounts"
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "account_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryAccount_type parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

-- | Defines the object schema located at @paths.\/general_ledger_accounts.GET.parameters@ in the specification.
data List_general_ledger_accountsParameters = List_general_ledger_accountsParameters
    { list_general_ledger_accountsParametersQueryAccount_type :: (GHC.Maybe.Maybe List_general_ledger_accountsParametersQueryAccount_type)
    -- ^ queryAccount_type: Represents the parameter named \'account_type\'
    --
    -- General Ledger Account type by which to filter the response.
    , list_general_ledger_accountsParametersQueryIds :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
    -- ^ queryIds: Represents the parameter named \'ids\'
    --
    -- Filter results by their IDs. Up to 200 IDs can be passed at once using
    -- commas as separators, e.g. \`ids=h1at4d57xlmy,gyqgg0d3v9n1,jrsm5b4yefg6\`.
    --
    -- **Important notes:**
    --
    -- * The \`ids\` parameter cannot be used with any other ordering or filtering
    --   parameters (\`limit\`, \`order\`, \`sort\`, \`begin_time\`, \`end_time\`, etc)
    -- * Invalid or unknown IDs will be ignored, so you should check that the
    --   results correspond to your request.
    -- * Records are returned in an arbitrary order. Since results are all
    --   returned at once you can sort the records yourself.
    , list_general_ledger_accountsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
    -- ^ queryLimit: Represents the parameter named \'limit\'
    --
    -- Limit number of records 1-200.
    --
    -- Constraints:
    --
    -- * Maxium  of 200.0
    -- * Minimum  of 1.0
    , list_general_ledger_accountsParametersQueryOrder :: (GHC.Maybe.Maybe List_general_ledger_accountsParametersQueryOrder)
    -- ^ queryOrder: Represents the parameter named \'order\'
    --
    -- Sort order.
    , list_general_ledger_accountsParametersQuerySort :: (GHC.Maybe.Maybe List_general_ledger_accountsParametersQuerySort)
    -- ^ querySort: Represents the parameter named \'sort\'
    --
    -- Sort field. You *really* only want to sort by \`updated_at\` in ascending
    -- order. In descending order updated records will move behind the cursor and could
    -- prevent some records from being returned.
    }
    deriving
        ( GHC.Show.Show
        , GHC.Classes.Eq
        )

instance Data.Aeson.Types.ToJSON.ToJSON List_general_ledger_accountsParameters where
    toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccount_type" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryAccount_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQuerySort obj) : GHC.Base.mempty))
    toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccount_type" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryAccount_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIds" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (list_general_ledger_accountsParametersQuerySort obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON List_general_ledger_accountsParameters where
    parseJSON = Data.Aeson.Types.FromJSON.withObject "List_general_ledger_accountsParameters" (\obj -> ((((GHC.Base.pure List_general_ledger_accountsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryAccount_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryIds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "querySort"))

-- | Create a new 'List_general_ledger_accountsParameters' with all required fields.
mkList_general_ledger_accountsParameters :: List_general_ledger_accountsParameters
mkList_general_ledger_accountsParameters =
    List_general_ledger_accountsParameters
        { list_general_ledger_accountsParametersQueryAccount_type = GHC.Maybe.Nothing
        , list_general_ledger_accountsParametersQueryIds = GHC.Maybe.Nothing
        , list_general_ledger_accountsParametersQueryLimit = GHC.Maybe.Nothing
        , list_general_ledger_accountsParametersQueryOrder = GHC.Maybe.Nothing
        , list_general_ledger_accountsParametersQuerySort = GHC.Maybe.Nothing
        }

{- | Defines the enum schema located at @paths.\/general_ledger_accounts.GET.parameters.properties.queryAccount_type@ in the specification.

Represents the parameter named \'account_type\'

General Ledger Account type by which to filter the response.
-}
data List_general_ledger_accountsParametersQueryAccount_type
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_general_ledger_accountsParametersQueryAccount_typeOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_general_ledger_accountsParametersQueryAccount_typeTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"liability"@
      List_general_ledger_accountsParametersQueryAccount_typeEnumLiability
    | -- | Represents the JSON value @"revenue"@
      List_general_ledger_accountsParametersQueryAccount_typeEnumRevenue
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_general_ledger_accountsParametersQueryAccount_type where
    toJSON (List_general_ledger_accountsParametersQueryAccount_typeOther val) = val
    toJSON (List_general_ledger_accountsParametersQueryAccount_typeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_general_ledger_accountsParametersQueryAccount_typeEnumLiability) = "liability"
    toJSON (List_general_ledger_accountsParametersQueryAccount_typeEnumRevenue) = "revenue"
instance Data.Aeson.Types.FromJSON.FromJSON List_general_ledger_accountsParametersQueryAccount_type where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "liability" -> List_general_ledger_accountsParametersQueryAccount_typeEnumLiability
                | val GHC.Classes.== "revenue" -> List_general_ledger_accountsParametersQueryAccount_typeEnumRevenue
                | GHC.Base.otherwise -> List_general_ledger_accountsParametersQueryAccount_typeOther val
            )

{- | Defines the enum schema located at @paths.\/general_ledger_accounts.GET.parameters.properties.queryOrder@ in the specification.

Represents the parameter named \'order\'

Sort order.
-}
data List_general_ledger_accountsParametersQueryOrder
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_general_ledger_accountsParametersQueryOrderOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_general_ledger_accountsParametersQueryOrderTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"asc"@
      List_general_ledger_accountsParametersQueryOrderEnumAsc
    | -- | Represents the JSON value @"desc"@
      List_general_ledger_accountsParametersQueryOrderEnumDesc
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_general_ledger_accountsParametersQueryOrder where
    toJSON (List_general_ledger_accountsParametersQueryOrderOther val) = val
    toJSON (List_general_ledger_accountsParametersQueryOrderTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_general_ledger_accountsParametersQueryOrderEnumAsc) = "asc"
    toJSON (List_general_ledger_accountsParametersQueryOrderEnumDesc) = "desc"
instance Data.Aeson.Types.FromJSON.FromJSON List_general_ledger_accountsParametersQueryOrder where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "asc" -> List_general_ledger_accountsParametersQueryOrderEnumAsc
                | val GHC.Classes.== "desc" -> List_general_ledger_accountsParametersQueryOrderEnumDesc
                | GHC.Base.otherwise -> List_general_ledger_accountsParametersQueryOrderOther val
            )

{- | Defines the enum schema located at @paths.\/general_ledger_accounts.GET.parameters.properties.querySort@ in the specification.

Represents the parameter named \'sort\'

Sort field. You *really* only want to sort by \`updated_at\` in ascending
order. In descending order updated records will move behind the cursor and could
prevent some records from being returned.
-}
data List_general_ledger_accountsParametersQuerySort
    = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
      List_general_ledger_accountsParametersQuerySortOther Data.Aeson.Types.Internal.Value
    | -- | This constructor can be used to send values to the server which are not present in the specification yet.
      List_general_ledger_accountsParametersQuerySortTyped Data.Text.Internal.Text
    | -- | Represents the JSON value @"created_at"@
      List_general_ledger_accountsParametersQuerySortEnumCreated_at
    | -- | Represents the JSON value @"updated_at"@
      List_general_ledger_accountsParametersQuerySortEnumUpdated_at
    deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON List_general_ledger_accountsParametersQuerySort where
    toJSON (List_general_ledger_accountsParametersQuerySortOther val) = val
    toJSON (List_general_ledger_accountsParametersQuerySortTyped val) = Data.Aeson.Types.ToJSON.toJSON val
    toJSON (List_general_ledger_accountsParametersQuerySortEnumCreated_at) = "created_at"
    toJSON (List_general_ledger_accountsParametersQuerySortEnumUpdated_at) = "updated_at"
instance Data.Aeson.Types.FromJSON.FromJSON List_general_ledger_accountsParametersQuerySort where
    parseJSON val =
        GHC.Base.pure
            ( if
                | val GHC.Classes.== "created_at" -> List_general_ledger_accountsParametersQuerySortEnumCreated_at
                | val GHC.Classes.== "updated_at" -> List_general_ledger_accountsParametersQuerySortEnumUpdated_at
                | GHC.Base.otherwise -> List_general_ledger_accountsParametersQuerySortOther val
            )

{- | Represents a response of the operation 'list_general_ledger_accounts'.

The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'List_general_ledger_accountsResponseError' is used.
-}
data List_general_ledger_accountsResponse
    = -- | Means either no matching case available or a parse error
      List_general_ledger_accountsResponseError GHC.Base.String
    | -- | A list of the site\'s general ledger accounts.
      List_general_ledger_accountsResponse200 GeneralLedgerAccountList
    | -- | Incorrect site ID.
      List_general_ledger_accountsResponse404 Error
    deriving (GHC.Show.Show, GHC.Classes.Eq)

{- | > GET /general_ledger_accounts

The same as 'list_general_ledger_accounts' but accepts an explicit configuration.
-}
list_general_ledger_accountsWithConfiguration ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_general_ledger_accountsParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response List_general_ledger_accountsResponse)
list_general_ledger_accountsWithConfiguration
    config
    parameters =
        GHC.Base.fmap
            ( \response_3 ->
                GHC.Base.fmap
                    ( Data.Either.either List_general_ledger_accountsResponseError GHC.Base.id
                        GHC.Base.. ( \response body ->
                                        if
                                            | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_general_ledger_accountsResponse200
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            GeneralLedgerAccountList
                                                                     )
                                            | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) ->
                                                List_general_ledger_accountsResponse404
                                                    Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                                        Data.Either.Either
                                                                            GHC.Base.String
                                                                            Error
                                                                     )
                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                                   )
                            response_3
                    )
                    response_3
            )
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                "/general_ledger_accounts"
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "account_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryAccount_type parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )

{- | > GET /general_ledger_accounts

The same as 'list_general_ledger_accounts' but returns the raw 'Data.ByteString.ByteString'.
-}
list_general_ledger_accountsRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | Contains all available parameters of this operation (query and path parameters)
    List_general_ledger_accountsParameters ->
    -- | Monadic computation which returns the result of the operation
    RecurlyClient.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_general_ledger_accountsRaw parameters =
    GHC.Base.id
        ( RecurlyClient.Common.doCallWithConfigurationM
            (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
            "/general_ledger_accounts"
            [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "account_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryAccount_type parameters) (Data.Text.Internal.pack "form") GHC.Types.False
            ]
        )

{- | > GET /general_ledger_accounts

The same as 'list_general_ledger_accounts' but accepts an explicit configuration and returns the raw 'Data.ByteString.ByteString'.
-}
list_general_ledger_accountsWithConfigurationRaw ::
    forall m.
    (RecurlyClient.Common.MonadHTTP m) =>
    -- | The configuration to use in the request
    RecurlyClient.Common.Configuration ->
    -- | Contains all available parameters of this operation (query and path parameters)
    List_general_ledger_accountsParameters ->
    -- | Monadic computation which returns the result of the operation
    m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.Type.ByteString)
list_general_ledger_accountsWithConfigurationRaw
    config
    parameters =
        GHC.Base.id
            ( RecurlyClient.Common.doCallWithConfiguration
                config
                (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
                "/general_ledger_accounts"
                [ RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "ids") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryIds parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQuerySort parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                , RecurlyClient.Common.QueryParameter (Data.Text.Internal.pack "account_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> list_general_ledger_accountsParametersQueryAccount_type parameters) (Data.Text.Internal.pack "form") GHC.Types.False
                ]
            )
